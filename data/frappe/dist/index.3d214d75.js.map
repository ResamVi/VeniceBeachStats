{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,IAAI,cAAc;AAAM,OAAO,MAAM,CAAC,aAAa,GAAG;AAAmB;AAE9K,8JAA8J,GAC9J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM;AACpC,SAAS,OAAO,UAAU;IACxB,UAAU,IAAI,CAAC,IAAI,EAAE;IACrB,IAAI,CAAC,GAAG,GAAG;QACT,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9B;IACF;IACA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,MAAM,CAAC,MAAM,GAAG;AACvB,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAAI,gBAAgB,mCAAmC,KAAI,eAAe,mCAAmC;AAEzJ,SAAS;IACP,OAAO,YAAa,CAAA,SAAS,QAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,QAAQ,GAAG,WAAU;AAC9F;AACA,SAAS;IACP,OAAO,YAAY,SAAS,IAAI;AAClC;AAEA,wCAAwC;AACxC,IAAI,SAAS,OAAO,MAAM,CAAC,MAAM;AACjC,IAAI,AAAC,CAAA,CAAC,UAAU,CAAC,OAAO,eAAe,AAAD,KAAM,OAAO,cAAc,aAAa;IAC5E,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW,cAAc,SAAS,QAAQ,IAAI,YAAY,CAAC;QAAC;QAAa;QAAa;KAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ;IAClI,IAAI;IACJ,IAAI,aACF,KAAK,IAAI,YAAY;SAErB,IAAI;QACF,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;IAC9E,EAAE,OAAO,KAAK;QACZ,IAAI,IAAI,OAAO,EACb,QAAQ,KAAK,CAAC,IAAI,OAAO;QAE3B,KAAK,CAAC;IACR;IAGF,wBAAwB;IACxB,IAAI,SAAS,OAAO,YAAY,cAAc,OAAO,WAAW,cAAc,OAAO,SAAS;IAE9F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC;IAEA,aAAa;IACb,GAAG,SAAS,GAAG,eAAgB,MAAM,wBAAwB,GAAzB;QAClC,gBAAgB,CAAC,EAAE,0BAA0B;QAC7C,iBAAiB,EAAE;QACnB,kBAAkB,EAAE;QACpB,IAAI,KAAK,eAAe,MAAK,KAAK,KAAK,CAAC,MAAM,IAAI;QAClD,IAAI,KAAK,IAAI,KAAK,UAAU;YAC1B,uCAAuC;YACvC,IAAI,OAAO,aAAa,aACtB;YAEF,IAAI,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;YAE3D,oBAAoB;YACpB,IAAI,UAAU,OAAO,KAAK,CAAC,CAAA;gBACzB,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,eAAe,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,YAAY;YACvH;YACA,IAAI,SAAS;gBACX,QAAQ,KAAK;gBAEb,yEAAyE;gBACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,aAAa,CAAC,IAAI,YAAY;gBAEvC,MAAM,gBAAgB;gBAEtB,0BAA0B;gBAC1B,IAAI,kBAAkB,CAAC,EAAE,0BAA0B;gBACnD,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;oBAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;oBAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;wBAClC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;gBAEA,8FAA8F;gBAC9F,kBAAkB,CAAC;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;oBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;wBAChC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;YACF,OAAO;QACT;QACA,IAAI,KAAK,IAAI,KAAK,SAAS;YACzB,+BAA+B;YAC/B,KAAK,IAAI,kBAAkB,KAAK,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,QAAQ,eAAe,SAAS,GAAG,eAAe,SAAS,GAAG,eAAe,KAAK;gBACtF,QAAQ,KAAK,CAAC,4BAAkB,eAAe,OAAO,GAAG,OAAO,QAAQ,SAAS,eAAe,KAAK,CAAC,IAAI,CAAC;YAC7G;YACA,IAAI,OAAO,aAAa,aAAa;gBACnC,gCAAgC;gBAChC;gBACA,IAAI,UAAU,mBAAmB,KAAK,WAAW,CAAC,IAAI;gBACtD,aAAa;gBACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF;IACF;IACA,IAAI,cAAc,WAAW;QAC3B,GAAG,OAAO,GAAG,SAAU,CAAC;YACtB,IAAI,EAAE,OAAO,EACX,QAAQ,KAAK,CAAC,EAAE,OAAO;QAE3B;QACA,GAAG,OAAO,GAAG;YACX,QAAQ,IAAI,CAAC;QACf;IACF;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAI,SAAS;QACX,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,QAAQ,EAAE,GAAG;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,MAAM,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;YAClE,OAAO,CAAC,EAAE,EAAE;sCACoB,EAAE,mBAAmB,MAAM,QAAQ,EAAE,2FAA2F,EAAE,MAAM,QAAQ,CAAC;AACvL,EAAE,MAAM,IAAI,CAAC,CAAC;QACV,GAAG,MAAM,WAAW,KAAK;QACzB,aAAa,CAAC;;;oBAGL,EAAE,WAAW,OAAO,CAAC;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,uBAAa,OAAO,UAAU,IAAI,CAAC,IAAI;;QAExE,EAAE,WAAW,aAAa,GAAG,CAAC,8CAAuC,EAAE,WAAW,aAAa,CAAC,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,SAAS,GAAG;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,YAAY,UACd,SAAS,MAAM;SACV,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,EAC1D,OAAO,OAAO,CAAC,MAAM;AAEzB;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,IAC9D,QAAQ,IAAI,CAAC;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,MAAM,EACf,UAAU,QAAQ,MAAM,CAAC,WAAW,OAAO,MAAM,EAAE;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,YAAY,CAAC;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK,SAAS;IAC5B,QAAQ,MAAM,GAAG;QACf,IAAI,KAAK,UAAU,KAAK,MACtB,aAAa;QACb,KAAK,UAAU,CAAC,WAAW,CAAC;IAEhC;IACA,QAAQ,YAAY,CAAC,QACrB,aAAa;IACb,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,GAAG;IACnC,aAAa;IACb,KAAK,UAAU,CAAC,YAAY,CAAC,SAAS,KAAK,WAAW;AACxD;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,YACF;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,gBAAgB,CAAC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,MAAM,MAAM,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,IAAI,KAAK,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,aAAa,CAAC;YACpC,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;YACzC,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,IAAI,GAAG;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,MAAM,GAAG,IAAM,QAAQ;gBAC9B,OAAO,OAAO,GAAG;gBAChB,CAAA,iBAAiB,SAAS,IAAI,AAAD,MAAO,QAAQ,mBAAmB,KAAK,KAAK,eAAe,WAAW,CAAC;YACvG;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,OAAmB,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;iBAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;oBACtD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,eAAe,GAAG,OAAO,MAAM,CAAC;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,GAAG,CAAC,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,CAAC,CAAA;oBAC3G,oBAAoB;oBACpB,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,GAAG,gBAAgB,IAAI,KAAK,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;wBAClL,OAAO,OAAO,CAAC,MAAM;wBACrB;oBACF;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,GAAG,CAAC;QACtC;QACA,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,SAAS,OAAO,MAAM,CAAC,IAAI,EAAE;QAC/B;IACF,SAAU;QACR,OAAO,OAAO,eAAe;QAC7B,IAAI,iBACF,gBAAgB,OAAO,CAAC,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAI,AAAD,MAAO,QAAQ,oBAAoB,KAAK,KAAK,gBAAgB,WAAW,CAAC;YAC1G;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,IAAI,KAAK,OACjB;SACK,IAAI,MAAM,IAAI,KAAK,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,aAAa,CAAC;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;oBAC7C,IAAI,QAAQ,MAAM,KAAK,GACrB,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM,MAAM;YAGxB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;YACzC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG;gBAAC;gBAAI;aAAK;QAChC,OAAO,IAAI,OAAO,MAAM,EACtB,SAAS,OAAO,MAAM,EAAE;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,MAAM,KAAK,GACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,OAAO,CAAC,CAAA;YACd,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;QAChC;IACF,OAAO,IAAI,OAAO,MAAM,EACtB,UAAU,OAAO,MAAM,EAAE;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,MAAM,GAAG,EAAG;QACzB,IAAI,IAAI,QAAQ,KAAK;QACrB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN;YACL,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,MAAM,KAAK,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,IAAI,IAAI;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,MAAM,EAChB,OAAO;QAET,OAAO,eAAe,OAAO,MAAM,EAAE,IAAI;IAC3C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,gBAAgB,IAAI,CAAC;QAAC;QAAQ;KAAG;IACjC,IAAI,CAAC,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC/D,eAAe,IAAI,CAAC;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;AACF;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,GAAG,EACtB,OAAO,GAAG,CAAC,IAAI,GAAG,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,OAAO,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,OAAO,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC9C,IAAI,qBAAqB,GAAG;YAC1B,OAAO,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;QACxC;QACA,IAAI,sBAAsB,eAAe,MAAM,EAAE;YAC/C,mBAAmB,OAAO,CAAC,SAAU,CAAC;gBACpC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACvB;YAEA,+BAA+B;YAC/B,eAAe,IAAI,CAAC,KAAK,CAAC,gBAAgB;QAC5C;IACF;AAEJ;;;;ACvfA;AACA;;AAEA,MAAM,QAAQ;IACV,QAAQ,CAAA,GAAA,sBAAI,AAAD,EAAE,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;IAChC,UAAU;QACN;YACI,MAAM;YAAa,MAAM;YACzB,QAAQ,CAAA,GAAA,sBAAI,AAAD,EAAE,GAAG,CAAC,CAAA,MAAO,IAAI,KAAK;QACrC;KACH;AACL;AAEA,IAAI,CAAA,GAAA,yBAAK,AAAD,EAAE,UAAU;IAChB,MAAM;IACN,MAAM;IACN,QAAQ;IACR,UAAU;QACN;YACI,OAAO;YACP,OAAO;YACP,SAAS;gBAAE,UAAU;YAAO,EAAE,mBAAmB;QACrD;KACH;IAED,UAAU;QACN;YACI,OAAO;YACP,OAAO;YACP,KAAK;YACL,SAAS;gBAAE,UAAU;YAAQ;QACjC;KACH;IACD,aAAa;QACT,UAAU;IACd;IACA,aAAa;QACT,WAAW,KAAK,iBAAiB;IACrC;AACJ;;;;;AEvCA,2CAAA;AAAA,qDAAA;AAAA,8CAAA;AAAA,6CAAA;AAAA,+CAAA;AAAA,SAASA,YAAYC,CAAAA,EAAKC,CAAAA;IAAAA,KACX,MAARA,KAAiBA,CAAAA,IAAAA,CAAAA,CAAAA;IACtB,IAAIC,IAAWD,EAAIC,QAEnB;IAAA,IAAKF,KAA2B,eAAA,OAAbG,UAAnB;QAEA,IAAIC,IAAOD,SAASC,IAAAA,IAAQD,SAASE,oBAAAA,CAAqB,OAAA,CAAQ,EAAA,EAC9DC,IAAQH,SAASI,aAAAA,CAAc;QACnCD,EAAME,IAAAA,GAAO,YAEI,UAAbN,KACEE,EAAKK,UAAAA,GACPL,EAAKM,YAAAA,CAAaJ,GAAOF,EAAKK,UAAAA,IAKhCL,EAAKO,WAAAA,CAAYL,IAGfA,EAAMM,UAAAA,GACRN,EAAMM,UAAAA,CAAWC,OAAAA,GAAUb,IAE3BM,EAAMK,WAAAA,CAAYR,SAASW,cAAAA,CAAed;IAAAA;AAAAA;ACvB9C,SAAgBe,EAAEC,CAAAA,EAAMC,CAAAA;IAAAA,OACA,YAAA,OAATD,IAAAA,AAAoBC,CAAAA,KAAOd,QAAAA,EAAUe,aAAAA,CAAcF,KAAQA,KAAQ;AAAA;AA4ClF,SAAgBG,UAAUC,CAAAA;IAAAA,IACrBC,IAAOD,EAAQE,qBAAAA;IAAAA,OAAAA;QAAAA,KAKbD,EAAKE,GAAAA,GAAOpB,CAAAA,SAASqB,eAAAA,CAAgBC,SAAAA,IAAatB,SAASuB,IAAAA,CAAKD,SAAAA,AAAAA;QAAAA,MAC/DJ,EAAKM,IAAAA,GAAQxB,CAAAA,SAASqB,eAAAA,CAAgBI,UAAAA,IAAczB,SAASuB,IAAAA,CAAKE,UAAAA,AAAAA;IAAAA;AAAAA;AAO1E,SAAgBC,SAASC,CAAAA;IAAAA,OACI,SAApBA,EAAGC,YAAAA;AAAAA;AAGZ,SAAgBC,oBAAoBF,CAAAA;IAAAA,IAE/BT,IAAOS,EAAGR,qBAAAA;IAAAA,OAGbD,EAAKE,GAAAA,IAAO,KACNF,EAAKM,IAAAA,IAAQ,KACbN,EAAKY,MAAAA,IAAWC,CAAAA,OAAOC,WAAAA,IAAehC,SAASqB,eAAAA,CAAgBY,YAAAA,AAAAA,KAAAA,EAC1DC,KAAAA,IAAUH,CAAAA,OAAOI,UAAAA,IAAcnC,SAASqB,eAAAA,CAAgBe,WAAAA,AAAAA;AAAAA;AAIrE,SAAgBC,uBAAuBpB,CAAAA;IAAAA,IAClCqB,IAASP,OAAOQ,gBAAAA,CAAiBtB,IACjCuB,IAAUC,WAAWH,EAAOI,WAAAA,IAC/BD,WAAWH,EAAOK,YAAAA;IAAAA,OAEZ1B,EAAQmB,WAAAA,GAAcI;AAAAA;AA2B9B,SAAgBI,KAAKC,CAAAA,EAAQxC,CAAAA,EAAMyC,CAAAA;IAAAA,IAC9BC,IAAM/C,SAASgD,WAAAA,CAAY;IAAA,EAE3BC,SAAAA,CAAU5C,GAAAA,CAAM,GAAA,CAAM;IAAA,IAErB,IAAI6C,KAAKJ,EAAAA,CAAAA,CACTI,EAAAA,GAAKJ,CAAAA,CAAWI,EAAAA;IAAAA,OAGdL,EAAOM,aAAAA,CAAcJ;AAAAA;AC7E7B,SAAgBK,aAAaC,CAAAA;IAAAA,OACrBA,EAAEC,WAAAA,GAAcD,EAAEE,OAAAA,CAAQnC,GAAAA,GAAMiC,EAAEG,QAAAA,CAASpC,GAAAA;AAAAA;AAGnD,SAAgBqC,cAAcJ,CAAAA;IAAAA,OACtBA,EAAEE,OAAAA,CAAQ/B,IAAAA,GAAO6B,EAAEG,QAAAA,CAAShC,IAAAA;AAAAA;AAGpC,SAAgBkC,eAAeL,CAAAA;IAAAA,OACPA,EAAEE,OAAAA,CAAQnC,GAAAA,GAAMiC,EAAEE,OAAAA,CAAQzB,MAAAA,GAC9CuB,EAAEG,QAAAA,CAASpC,GAAAA,GAAMiC,EAAEG,QAAAA,CAAS1B,MAAAA,GAC5BuB,EAAEC,WAAAA,GAAcD,EAAEM,YAAAA;AAAAA;AAItB,SAAgBC,cAAcP,CAAAA;IAAAA,OACPA,EAAEE,OAAAA,CAAQ/B,IAAAA,GAAO6B,EAAEE,OAAAA,CAAQrB,KAAAA,GAC9CmB,EAAEG,QAAAA,CAAShC,IAAAA,GAAO6B,EAAEG,QAAAA,CAAStB,KAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AClDjC,SAAgB2B,SAASC,CAAAA;IAAAA,OACjBrB,WAAWqB,EAAEC,OAAAA,CAAQ;AAAA;AAyC7B,SAAgBC,UAAUC,CAAAA,EAAOC,CAAAA,EAAOjD,CAAAA;IAAAA,IAASkD,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAC5ClD;IAAAA,KAAAA,CAAAA,IACOkD,IAAQF,CAAAA,CAAM,EAAA,GAAKA,CAAAA,CAAMA,EAAMG,MAAAA,GAAS,EAAA,AAAA;IAAA,IAE/CC,IAAc,IAAIC,MAAMC,KAAKC,GAAAA,CAAIN,IAAQO,IAAAA,CAAKxD;IAAAA,OAAAA,IAC1CkD,IAAQE,EAAYK,MAAAA,CAAOT,KAASA,EAAMS,MAAAA,CAAOL;AAAAA;AAS1D,SAAgBM,eAAeC,CAAAA,EAAQC,CAAAA;IAAAA,OAAAA,AAC9BD,CAAAA,IAAO,EAAA,EAAIR,MAAAA,GAASS;AAAAA;AAyB7B,SAAgBC,mBAAmBC,CAAAA,EAAOC,CAAAA;IAAAA,OAAAA;QAAAA,GAErCT,KAAKU,GAAAA,CAAIF,IAAQG,eAAeF;QAAAA,GAChCT,KAAKY,GAAAA,CAAIJ,IAAQG,eAAeF;IAAAA;AAAAA;AASrC,SAAgBI,cAAcC,CAAAA;IAAAA,IAAWC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA;IAAAA,OAAAA,CACpCC,OAAOC,KAAAA,CAAMH,MAAAA,KACMI,MAAdJ,KAAAA,CAAAA,CACCE,OAAOG,QAAAA,CAASL,MAAAA,CACjBC,CAAAA,KAAeD,IAAY,CAAA;AAAA;AAQrC,SAAgBM,MAAM7B,CAAAA;IAAAA,OAGdyB,OAAOhB,KAAKoB,KAAAA,CAAM7B,IAAI,QAAQ;AAAA;AAOrC,SAAgB8B,UAAUP,CAAAA;IAAAA,IACtBQ,IAAAA,KAAAA,GAAQC,IAAAA,KAAAA,GAAOC,IAAAA,KAAAA;IAAAA,IAEfV,aAAqBW,MAAAA,OAChB,IAAIA,KAAKX,EAAUY,OAAAA;IAAAA,IAGH,aAAA,CAAA,KAAA,MAAdZ,IAAAA,cAAAA,UAAAA,EAAAA,KAAwC,SAAdA,GAAAA,OAC5BA;IAAAA,IAGAf,MAAM4B,OAAAA,CAAQb,KAAAA,EAAAA,GAAAA,CAAAA;IAAAA,IAElBU,KAAOV,EAAAA,IACFA,CAAAA,CAAUU,EAAAA,EAAAA,CAAAA,CAEXA,EAAAA,GAAOH,UAAUE;IAAAA,OAGnBD;AAAAA;AAAAA,SC3IQM,qBAAqBC,CAAAA,EAAMC,CAAAA;IAAAA,IACtCC,IAAAA,KAAAA,GAAQC,IAAAA,KAAAA;IAAAA,OACRH,KAAQC,IAAAA,CAAAA,IACFA,IAAWD,GAAAA,IAChBA,CAAAA,IAAAA,CAAAA,IAEKA,IAAOC,GAAAA,IACZA,CAAAA,GAAAA;QAGGC;QAAQC;KAAAA;AAAAA;AAGjB,SAAgBC,qBAAqBC,CAAAA,EAAQC,CAAAA;IAAAA,IAC5CC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAaD,EAAOtC,MAAAA,GAASqC,EAAOrC,MAAAA;IAAAA,OAGjCuC,IAAa,IAAA,IACN3C,UAAUyC,GAAQE,KAAAA,IAElB3C,UAAU0C,GAAQC,IAAAA;QAEpBF;QAAQC;KAAAA;AAAAA;AAGjB,SAAgBE,eAAeC,CAAAA,EAAKC,CAAAA;IAAAA,IAC9BD,GAAAA,OAGDA,EAAIzC,MAAAA,GAAS0C,IACTD,EAAIE,KAAAA,CAAM,GAAGD,IAAI,KAAK,QAEtBD;AAAAA;AAIT,SAAgBG,mBAAmBC,CAAAA;IAAAA,IAC9BC,IAAAA,KAAAA;IAAAA,IACiB,YAAA,OAAVD,GAAoBC,IAASD;SACnC,IAAqB,YAAA,OAAVA,KAAAA,CAAAA,IACN1B,OAAO0B,IACZ1B,OAAOC,KAAAA,CAAM0B,EAAAA,GAAS,OAAOD;IAAAA,IAI9BE,IAAI5C,KAAK6C,KAAAA,CAAM7C,KAAK8C,KAAAA,CAAM9C,KAAKC,GAAAA,CAAI0C;IAAAA,IACnCC,KAAK,GAAG,OAAOD;IAAAA,IACfI,IAAI/C,KAAK6C,KAAAA,CAAMD,IAAI,IACnBI,IAAahD,KAAKiD,GAAAA,CAAI,IAAIL,IAAQ,IAAJG,KAAAA,CAAAA,AAAWJ,CAAAA,IAAS3C,KAAKiD,GAAAA,CAAI,IAAIL,EAAAA,EAAIpD,OAAAA,CAAQ;IAAA,OAGxEQ,KAAKoB,KAAAA,CAAgB,MAAV4B,KAAe,MAAM,MAAA;QAAO;QAAI;QAAK;QAAK;QAAK;KAAA,CAAKD,EAAAA;AAAAA;AAIvE,SAAgBG,wBAAwBC,CAAAA,EAAOC,CAAAA;IAAAA,IAG1C,IADAC,IAAAA,EAAAA,EACIC,IAAE,GAAEA,IAAEH,EAAMtD,MAAAA,EAAOyD,IAAAA,EACnBC,IAAAA,CAAAA;QAAMJ,CAAAA,CAAMG,EAAAA;QAAIF,CAAAA,CAAME,EAAAA;KAAAA;IAAAA,IAI1BE,IAAO,SAACC,CAAAA,EAAQC,CAAAA;QAAAA,IACfC,IAAUD,CAAAA,CAAO,EAAA,GAAKD,CAAAA,CAAO,EAAA,EAC7BG,IAAUF,CAAAA,CAAO,EAAA,GAAKD,CAAAA,CAAO,EAAA;QAAA,OAAA;YAAA,QAExBzD,KAAK6D,IAAAA,CAAK7D,KAAKiD,GAAAA,CAAIU,GAAS,KAAK3D,KAAKiD,GAAAA,CAAIW,GAAS;YAAA,OACpD5D,KAAK8D,KAAAA,CAAMF,GAASD;QAAAA;IAAAA,GAIzBI,IAAe,SAACC,CAAAA,EAASC,CAAAA,EAAUC,CAAAA,EAAMC,CAAAA;QAAAA,IAGxCC,IAAIZ,EAFAS,KAAYD,GACZE,KAAQF,IAEZxD,IAAQ4D,EAAE5D,KAAAA,GAAS2D,CAAAA,IAAUnE,KAAKqE,EAAAA,GAAK,CAAA,GACvCxE,IAfW,KAeFuE,EAAEvE,MAAAA;QAAAA,OAAAA;YACPmE,CAAAA,CAAQ,EAAA,GAAKhE,KAAKY,GAAAA,CAAIJ,KAASX;YAC/BmE,CAAAA,CAAQ,EAAA,GAAKhE,KAAKU,GAAAA,CAAIF,KAASX;SAAAA;IAAAA;IAAAA,OAUzB,SAACwD,CAAAA,EAAQiB,CAAAA;QAAAA,OAChBjB,EAAOkB,MAAAA,CAAO,SAACC,CAAAA,EAAKC,CAAAA,EAAOnB,CAAAA,EAAGoB,CAAAA;YAAAA,OAAY,MAANpB,IACrCmB,CAAAA,CAAM,EAAA,GAAA,MAAMA,CAAAA,CAAM,EAAA,GAClBD,IAAAA,MAAOF,EAAQG,GAAOnB,GAAGoB;QAAAA,GAAM;IAAA,EAGtBrB,GAZI,SAACoB,CAAAA,EAAOnB,CAAAA,EAAGoB,CAAAA;QAAAA,IAC1BC,IAAMZ,EAAaW,CAAAA,CAAEpB,IAAI,EAAA,EAAIoB,CAAAA,CAAEpB,IAAI,EAAA,EAAImB,IACvCG,IAAMb,EAAaU,GAAOC,CAAAA,CAAEpB,IAAI,EAAA,EAAIoB,CAAAA,CAAEpB,IAAI,EAAA,EAAA,CAAI;QAAA,OAAA,OACtCqB,CAAAA,CAAI,EAAA,GAAA,MAAMA,CAAAA,CAAI,EAAA,GAAA,MAAMC,CAAAA,CAAI,EAAA,GAAA,MAAMA,CAAAA,CAAI,EAAA,GAAA,MAAMH,CAAAA,CAAM,EAAA,GAAA,MAAMA,CAAAA,CAAM,EAAA;IAAA;AAAA;ACvExE,SAASI,WAAWC,CAAAA;IAAAA,OACfA,IAAI,MAAY,MACXA,IAAI,IAAU,IAChBA;AAAAA;AAGR,SAAgBC,mBAAmBC,CAAAA,EAAOC,CAAAA;IAAAA,IACrCC,IAAMC,SAASH,IACfI,IAAAA,CAAW;IACD,OAAVF,CAAAA,CAAI,EAAA,IAAA,CAAA,IACDA,EAAI1C,KAAAA,CAAM,IAAA,IAAA,CACL,CAAA;IAAA,IAER6C,IAAMC,SAASJ,GAAI,KACnBJ,IAAID,WAAAA,AAAYQ,CAAAA,KAAO,EAAA,IAAMJ,IAC7BM,IAAIV,WAAAA,AAAaQ,CAAAA,KAAO,IAAK,GAAA,IAAUJ,IACvCO,IAAIX,WAAAA,AAAkB,CAAA,MAANQ,CAAAA,IAAkBJ;IAAAA,OAAAA,AAC9BG,CAAAA,IAAS,MAAI,EAAA,IAAA,AAAOI,CAAAA,IAAKD,KAAK,IAAMT,KAAK,EAAA,EAAKW,QAAAA,CAAS;AAAA;AAGhE,SAAgBC,aAAarF,CAAAA;IAAAA,IAGxBsF,IAAS;IAAA,OADA,uCAECC,IAAAA,CAAKvF,MAAWsF,EAAOC,IAAAA,CAAKvF;AAAAA;AC7B3C,SAAShE,IAAEC,CAAAA,EAAMC,CAAAA;IAAAA,OACO,YAAA,OAATD,IAAAA,AAAoBC,CAAAA,KAAOd,QAAAA,EAAUe,aAAAA,CAAcF,KAAQA,KAAQ;AAAA;AAGlF,SAAgBuJ,UAAUC,CAAAA,EAAK1B,CAAAA;IAAAA,IAC1B1H,IAAUjB,SAASsK,eAAAA,CAAgB,8BAA8BD;IAAAA,IAEhE,IAAIxC,KAAKc,EAAG;QAAA,IACZ4B,IAAM5B,CAAAA,CAAEd,EAAAA;QAAAA,IAEF,aAANA,GAAAA,IACD0C,GAAK/J,WAAAA,CAAYS;aAEf,IAAU,aAAN4G,GAAgB;YAAA,IACpB/H,IAAMc,IAAE2J;YAAAA,EACRC,UAAAA,CAAWjK,YAAAA,CAAaU,GAASnB,IAAAA,EAC7BU,WAAAA,CAAYV;QAAAA,OAEJ,aAAN+H,IACQ,aAAA,CAAA,KAAA,MAAR0C,IAAAA,cAAAA,UAAAA,EAAAA,KAAAA,OACFE,IAAAA,CAAKF,GAAKG,GAAAA,CAAI,SAAA,CAAA;YAAA,EACZvK,KAAAA,CAAMwK,EAAAA,GAAQJ,CAAAA,CAAII,EAAAA;QAAAA,KAInB,CAAA,gBAAN9C,KAAAA,CAAAA,IAAyB,OAAA,GACnB,gBAANA,IAAAA,EACF,WAAA,GAAyB0C,IAAAA,EAEjBK,YAAAA,CAAa/C,GAAG0C,EAAAA;IAAAA;IAAAA,OAKpBtJ;AAAAA;AAGR,SAAS4J,uBAAuBC,CAAAA,EAAYC,CAAAA;IAAAA,OACpCX,UAAU,kBAAA;QAAA,QACRU;QAAAA,IACJC;QAAAA,IACA;QAAA,IACA;QAAA,IACA;QAAA,IACA;IAAA;AAAA;AAIN,SAASC,gBAAgBC,CAAAA,EAAUC,CAAAA,EAAQ3B,CAAAA,EAAO4B,CAAAA;IAAAA,OAC1Cf,UAAU,QAAA;QAAA,QACNa;QAAAA,OAAAA,iBACc1B;QAAAA,QACd2B;QAAAA,gBACMC;IAAAA;AAAAA;AAIlB,SAAgBC,iBAAiBC,CAAAA,EAAQC,CAAAA,EAAWC,CAAAA,EAAOjF,CAAAA;IAAAA,OACnD8D,UAAU,OAAA;QAAA,WACLkB;QAAAA,QACHD;QAAAA,OACDE;QAAAA,QACCjF;IAAAA;AAAAA;AAIV,SAAgBkF,YAAYC,CAAAA;IAAAA,OACpBrB,UAAU,QAAA;QAAA,QACRqB;IAAAA;AAAAA;AAIV,SAAgBC,aAAaJ,CAAAA;IAAAA,IAAWK,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAU,IAAIN,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,KAAO5F,GACxDmG,IAAAA;QAAAA,WACQN;QAAAA,WACAK;IAAAA;IAAAA,OAETN,KAAQO,CAAAA,EAAKC,MAAAA,GAASR,CAAAA,GAClBjB,UAAU,KAAKwB;AAAAA;AAWvB,SAAgBE,SAASC,CAAAA;IAAAA,OACjB3B,UAAU,QAAA;QAAA,WAAA,UAAA,MAAA,GAAA,KAAA,KAAA,MAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,EAAA,GAD0B;QAAA,GAGvC2B;QAAAA,QAAAA;YAAAA,QAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAHkD;YAAA,MAAA,UAAA,MAAA,GAAA,KAAA,KAAA,MAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,EAAA,GAAa;YAAA,gBAAA,UAAA,MAAA,GAAA,KAAA,KAAA,MAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,EAAA,GAAoB;QAAA;IAAA;AAAA;AAYxF,SAAgBC,eAAeC,CAAAA,EAAeC,CAAAA,EAAaC,CAAAA,EAAQnH,CAAAA;IAAAA,IAAQoH,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAU,GAAGC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAS,GAC3FC,IAAyBH,EAAOI,CAAAA,GAAIN,EAAcM,CAAAA,EAAvCC,IAA0CL,EAAO5F,CAAAA,GAAI0F,EAAc1F,CAAAA,EAC9EkG,IAAqBN,EAAOI,CAAAA,GAAIL,EAAYK,CAAAA,EAAnCG,IAAsCP,EAAO5F,CAAAA,GAAI2F,EAAY3F,CAAAA;IAAAA,OAAAA,MAChE4F,EAAOI,CAAAA,GAAAA,MAAKJ,EAAO5F,CAAAA,GAAAA,UAC1B+F,IAAAA,MAAaE,IAAAA,WACZxH,IAAAA,MAAUA,IAAAA,QAAYqH,IAAAA,MAAYD,CAAAA,IAAY,IAAI,CAAA,IAAA,SACpDK,IAAAA,MAAWC,IAAAA;AAAAA;AAGf,SAAgBC,cAAcV,CAAAA,EAAeC,CAAAA,EAAaC,CAAAA,EAAQnH,CAAAA;IAAAA,IAAQoH,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAU,GAAGC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAS,GAC1FC,IAAyBH,EAAOI,CAAAA,GAAIN,EAAcM,CAAAA,EAAvCC,IAA0CL,EAAO5F,CAAAA,GAAI0F,EAAc1F,CAAAA,EAC9EkG,IAA6BN,EAAOI,CAAAA,GAAIL,EAAYK,CAAAA,EAA3CK,IAAyD,IAAXT,EAAO5F,CAAAA,EAA7CmG,IAAoDP,EAAO5F,CAAAA,GAAI2F,EAAY3F,CAAAA;IAAAA,OAAAA,MACtF4F,EAAOI,CAAAA,GAAAA,MAAKJ,EAAO5F,CAAAA,GAAAA,UAC1B+F,IAAAA,MAAaE,IAAAA,WACZxH,IAAAA,MAAUA,IAAAA,QAAYqH,IAAAA,MAAYD,CAAAA,IAAY,IAAI,CAAA,IAAA,SACpDK,IAAAA,MAAWG,IAAAA,YACVN,IAAAA,MAAaM,IAAAA,WACZ5H,IAAAA,MAAUA,IAAAA,QAAYqH,IAAAA,MAAYD,CAAAA,IAAY,IAAI,CAAA,IAAA,SACpDK,IAAAA,MAAWC,IAAAA;AAAAA;AAGf,SAAgBG,qBAAqBZ,CAAAA,EAAeC,CAAAA,EAAaC,CAAAA,EAAQnH,CAAAA;IAAAA,IAAQoH,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAU,GAAGC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAS,GACjGC,IAAyBH,EAAOI,CAAAA,GAAIN,EAAcM,CAAAA,EAAvCC,IAA0CL,EAAO5F,CAAAA,GAAI0F,EAAc1F,CAAAA,EAC9EkG,IAAqBN,EAAOI,CAAAA,GAAIL,EAAYK,CAAAA,EAAnCG,IAAsCP,EAAO5F,CAAAA,GAAI2F,EAAY3F,CAAAA;IAAAA,OAAAA,MAEhE+F,IAAAA,MAAaE,IAAAA,WACnBxH,IAAAA,MAAUA,IAAAA,QAAYqH,IAAAA,MAAYD,CAAAA,IAAY,IAAI,CAAA,IAAA,SACpDK,IAAAA,MAAWC;AAAAA;AAGf,SAAgBI,oBAAoBb,CAAAA,EAAeC,CAAAA,EAAaC,CAAAA,EAAQnH,CAAAA;IAAAA,IAAQoH,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAU,GAAGC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAS,GAChGC,IAAyBH,EAAOI,CAAAA,GAAIN,EAAcM,CAAAA,EAAvCC,IAA0CL,EAAO5F,CAAAA,GAAI0F,EAAc1F,CAAAA,EAC9EkG,IAA6BN,EAAOI,CAAAA,GAAIL,EAAYK,CAAAA,EAA3CK,IAAuD,IAAT5H,IAAawH,GAAnDE,IAA8DP,EAAO5F,CAAAA,GAAI0F,EAAc1F,CAAAA;IAAAA,OAAAA,MAElG+F,IAAAA,MAAaE,IAAAA,WACnBxH,IAAAA,MAAUA,IAAAA,QAAYqH,IAAAA,MAAYD,CAAAA,IAAY,IAAI,CAAA,IAAA,SACpDK,IAAAA,MAAWG,IAAAA,UACVN,IAAAA,MAAaM,IAAAA,WACZ5H,IAAAA,MAAUA,IAAAA,QAAYqH,IAAAA,MAAYD,CAAAA,IAAY,IAAI,CAAA,IAAA,SACpDK,IAAAA,MAAWC;AAAAA;AAGf,SAAgBK,aAAajC,CAAAA,EAAYvB,CAAAA;IAAAA,IAAOyD,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAC3CjC,IAAY,wBAA6BxB,IAAQ,MAAMyD,CAAAA,IAAU,YAAY,SAAA,GAC7EC,IAAcpC,uBAAuBC,GAAYC,IACjDmC,IAAAA;QAAa;QAAG;QAAK;KAAA;IAAA,OACtBF,KAAAA,CAAAA,IAAAA;QACW;QAAK;QAAK;KAAA,AAAA,GAAA,gBAGRC,GAAa,MAAM1D,GAAO2D,CAAAA,CAAU,EAAA,GAAA,gBACpCD,GAAa,OAAO1D,GAAO2D,CAAAA,CAAU,EAAA,GAAA,gBACrCD,GAAa,QAAQ1D,GAAO2D,CAAAA,CAAU,EAAA,GAE/CnC;AAAAA;AAGR,SAAgBoC,cAAcZ,CAAAA,EAAGhG,CAAAA,EAAGgF,CAAAA,EAAOjF,CAAAA;IAAAA,IAC1C8G,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAMC,8BAA8B5I,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAK;IAAA,OAkBlC2F,UAAU,QAAA;QAAA,WAfL;QAAA,GACRmC;QAAAA,GACAhG;QAAAA,OACIgF;QAAAA,QACCjF;QAAAA,MACF7B;QAAAA,QAAAA;YAAAA,QAEK6E,mBAAmB7E,GAAAA;YAAO,oBAAA,QAGV6B,CAAAA,IAASiF,CAAAA,IAAAA,OAAUA,IAAAA,OAAUjF;YAAAA,gBACvC8G;QAAAA;IAAAA;AAAAA;AAOnB,SAAgBE,WAAWhC,CAAAA,EAAWiB,CAAAA,EAAGhG,CAAAA,EAAGgH,CAAAA,EAAMvI,CAAAA;IAAAA,IAAQP,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAK,QAAQ+I,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAClE5B,IAAAA;QAAAA,WACQN;QAAAA,GACRiB;QAAAA,GACAhG;QAAAA,OACIgH;QAAAA,QACCA;QAAAA,IACJvI;QAAAA,MACEP;IAAAA;IAAAA,OAAAA,OAGAgG,IAAAA,CAAK+C,GAAM9C,GAAAA,CAAI,SAAA,CAAA;QAAA,CAAA,CAChB3E,EAAAA,GAAOyH,CAAAA,CAAKzH,EAAAA;IAAAA,IAGXqE,UAAU,QAAQwB;AAAAA;AAG1B,SAAgB6B,UAAUlB,CAAAA,EAAGhG,CAAAA,EAAGgH,CAAAA;IAAAA,IAAM9I,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAK,QAAQwC,IAAAA,SAAAA,CAAAA,EAAAA;IAAAA,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,GAC/BL,eAAeK,GAAOyG,mBAAmBzG;IAAAA,IAExD2E,IAAAA;QAAAA,WACQ;QAAA,GACR;QAAA,GACA;QAAA,OACI2B;QAAAA,QACC;QAAA,MACF9I;IAAAA,GAEHkJ,IAAOvD,UAAU,QAAA;QAAA,WACT;QAAA,GACR;QAAA,GACA;QAAA,IACc,IAAZwD,YAAiB;QAAA,aACI,MAAZA,YAAmB;QAAA,eAClB;QAAA,MACTC;QAAAA,WACK5G;IAAAA,IAGR6G,IAAQ1D,UAAU,KAAA;QAAA,WAAA,eACGmC,IAAAA,OAAMhG,IAAAA;IAAAA;IAAAA,OAAAA,EAEzB/F,WAAAA,CAAY4J,UAAU,QAAQwB,KAAAA,EAC9BpL,WAAAA,CAAYmN,IAEXG;AAAAA;AAGR,SAAgBC,UAAUxB,CAAAA,EAAGhG,CAAAA,EAAGgH,CAAAA;IAAAA,IAAM9I,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAK,QAAQwC,IAAAA,SAAAA,CAAAA,EAAAA;IAAAA,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,GAC/BL,eAAeK,GAAOyG,mBAAmBzG;IAAAA,IAExD2E,IAAAA;QAAAA,WACQ;QAAA,IACP;QAAA,IACA;QAAA,GACD2B;QAAAA,MACG9I;IAAAA,GAEHkJ,IAAOvD,UAAU,QAAA;QAAA,WACT;QAAA,GACR;QAAA,GACA;QAAA,IACEwD,YAAa;QAAA,IACbA,YAAU,IAAK;QAAA,aACM,MAAZA,YAAmB;QAAA,eAClB;QAAA,MACTC;QAAAA,WACK5G;IAAAA,IAGR6G,IAAQ1D,UAAU,KAAA;QAAA,WAAA,eACGmC,IAAAA,OAAMhG,IAAAA;IAAAA;IAAAA,OAAAA,EAEzB/F,WAAAA,CAAY4J,UAAU,UAAUwB,KAAAA,EAChCpL,WAAAA,CAAYmN,IAEXG;AAAAA;AAGR,SAAgBE,SAAS1C,CAAAA,EAAWiB,CAAAA,EAAGhG,CAAAA,EAAG0H,CAAAA;IAAAA,IAASC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAC9CC,IAAWD,EAAQC,QAAAA,IAAYP;IAAAA,OAI5BxD,UAAU,QAAA;QAAA,WACLkB;QAAAA,GACRiB;QAAAA,GACAhG;QAAAA,IAAAA,AAAAA,CAAAA,KANoBd,MAAfyI,EAAQE,EAAAA,GAAmBF,EAAQE,EAAAA,GAAMD,IAAW,CAAA,IAOnD;QAAA,aACIA,IAAW;QAAA,MAPdD,EAAQzJ,IAAAA,IAAQoJ;QAAAA,eACVK,EAAQG,UAAAA,IAAc;QAAA,WAS3BJ;IAAAA;AAAAA;AAIb,SAASK,aAAa/B,CAAAA,EAAGtF,CAAAA,EAAOsH,CAAAA,EAAIC,CAAAA;IAAAA,IAAIN,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA;IACnCA,EAAQO,MAAAA,IAAQP,CAAAA,EAAQO,MAAAA,GAASC,eAAAA;IAAAA,IACjCpH,IAAI8C,UAAU,QAAA;QAAA,WACN,mBAAmB8D,EAAQ5C,SAAAA;QAAAA,IAClC;QAAA,IACA;QAAA,IACAiD;QAAAA,IACAC;QAAAA,QAAAA;YAAAA,QAEKN,EAAQO,MAAAA;QAAAA;IAAAA,IAIdd,IAAOvD,UAAU,QAAA;QAAA,GACjB;QAAA,GACAmE,IAAKC,IAAKD,IAAKI,eAAeJ,IAAKI,eAAef;QAAAA,IACjDA,YAAY;QAAA,aACHA,YAAY;QAAA,eACV;QAAA,WACJ3G,IAAQ;IAAA,IAGhBc,IAAOqC,UAAU,KAAA;QAAA,WAAA,eACKmC,IAAAA;IAAAA;IAAAA,OAAAA,EAGrB/L,WAAAA,CAAY8G,IAAAA,EACZ9G,WAAAA,CAAYmN,IAEV5F;AAAAA;AAGR,SAAS6G,aAAarI,CAAAA,EAAGU,CAAAA,EAAO4H,CAAAA,EAAIC,CAAAA;IAAAA,IAAIZ,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA;IACnCA,EAAQO,MAAAA,IAAQP,CAAAA,EAAQO,MAAAA,GAASC,eAAAA,GACjCR,EAAQa,QAAAA,IAAUb,CAAAA,EAAQa,QAAAA,GAAW,EAAA,GACrCb,EAAQc,cAAAA,IAAgB/H,CAAAA,IAAQD,mBAAmBC,EAAAA;IAAAA,IAKnDK,IAAI8C,UAAU,QAAA;QAAA,WAHF,qBAAqB8D,EAAQ5C,SAAAA,GACtB,CAAA,aAArB4C,EAAQa,QAAAA,GAAwB,WAAU,EAAA;QAAA,IAIvCF;QAAAA,IACAC;QAAAA,IACA;QAAA,IACA;QAAA,QAAA;YAAA,QAEKZ,EAAQO,MAAAA;QAAAA;IAAAA,IAIdd,IAAOvD,UAAU,QAAA;QAAA,GACjByE,IAAKC,IAAKD,IAAKF,eAAeE,IAAKF;QAAAA,GACnC;QAAA,IACEf,YAAY,IAAI,IAAK;QAAA,aACbA,YAAY;QAAA,eACViB,IAAKC,IAAK,QAAQ;QAAA,WACtB7H,IAAM;IAAA,IAGdc,IAAOqC,UAAU,KAAA;QAAA,WAAA,kBACO7D,IAAAA;QAAAA,kBACT;IAAA;IAAA,OAGP,MAAToH,KAAuB,QAATA,KAAAA,CAAAA,EACXxN,KAAAA,CAAMsO,MAAAA,GAAS,uBAAA,GAAA,EAGhBjO,WAAAA,CAAY8G,IAAAA,EACZ9G,WAAAA,CAAYmN,IAEV5F;AAAAA;AAGR,SAAgBkH,MAAM1I,CAAAA,EAAGU,CAAAA,EAAOsE,CAAAA;IAAAA,IAAO2C,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA;IACjC9I,cAAcmB,MAAIA,CAAAA,IAAI,CAAA,GAEvB2H,EAAQgB,GAAAA,IAAKhB,CAAAA,EAAQgB,GAAAA,GAAM,MAAA,GAC3BhB,EAAQhD,MAAAA,IAAQgD,CAAAA,EAAQhD,MAAAA,GAAS,CAAA,GACjCgD,EAAQiB,IAAAA,IAAMjB,CAAAA,EAAQiB,IAAAA,GAAO,MAAA,GAC7BjB,EAAQO,MAAAA,IAAQP,CAAAA,EAAQO,MAAAA,GAASC,eAAAA,GACjCR,EAAQ5C,SAAAA,IAAW4C,CAAAA,EAAQ5C,SAAAA,GAAY,EAAA;IAAA,IAEvCuD,IAAAA,KAAUO,kBACVN,IAAsB,WAAjBZ,EAAQiB,IAAAA,GAAkB5D,IAAQ6D,mBAAmB;IAAA,OAE1C,WAAjBlB,EAAQiB,IAAAA,IAAmC,YAAhBjB,EAAQgB,GAAAA,IAAAA,CAAAA,IAChC3D,IAAQ6D,kBAAAA,IACR7D,CAAAA,GAAAA,KAKA2C,EAAQhD,MAAAA,EAAAA,KACRgD,EAAQhD,MAAAA,EAEP0D,aAAarI,GAAGU,GAAO4H,GAAIC,GAAAA;QAAAA,QACzBZ,EAAQO,MAAAA;QAAAA,WACLP,EAAQ5C,SAAAA;QAAAA,UACT4C,EAAQa,QAAAA;QAAAA,gBACFb,EAAQc,cAAAA;IAAAA;AAAAA;AAI1B,SAAgBK,MAAM9C,CAAAA,EAAGtF,CAAAA,EAAOX,CAAAA;IAAAA,IAAQ4H,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA;IAClC9I,cAAcmH,MAAIA,CAAAA,IAAI,CAAA,GAEvB2B,EAAQgB,GAAAA,IAAKhB,CAAAA,EAAQgB,GAAAA,GAAM,QAAA,GAC3BhB,EAAQhD,MAAAA,IAAQgD,CAAAA,EAAQhD,MAAAA,GAAS,CAAA,GACjCgD,EAAQiB,IAAAA,IAAMjB,CAAAA,EAAQiB,IAAAA,GAAO,MAAA,GAC7BjB,EAAQO,MAAAA,IAAQP,CAAAA,EAAQO,MAAAA,GAASC,eAAAA,GACjCR,EAAQ5C,SAAAA,IAAW4C,CAAAA,EAAQ5C,SAAAA,GAAY,EAAA;IAAA,IAavCiD,IAAKjI,IAAS8I,kBACdZ,IAAsB,WAAjBN,EAAQiB,IAAAA,GAAAA,KAAuBC,mBAAmB9I;IAAAA,OAEvC,WAAjB4H,EAAQiB,IAAAA,IAAmC,UAAhBjB,EAAQgB,GAAAA,IAAAA,CAAAA,IAAAA,KAE3BE,kBAAAA,IACL,CAAA,GAGCd,aAAa/B,GAAGtF,GAAOsH,GAAIC,GAAAA;QAAAA,QACzBN,EAAQO,MAAAA;QAAAA,WACLP,EAAQ5C,SAAAA;QAAAA,UACT4C,EAAQa,QAAAA;IAAAA;AAAAA;AAIpB,SAAgBO,QAAQ/I,CAAAA,EAAGU,CAAAA,EAAOsE,CAAAA;IAAAA,IAAO2C,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA;IACpCA,EAAQqB,QAAAA,IAAUrB,CAAAA,EAAQqB,QAAAA,GAAW,OAAA;IAAA,IAIrCC,IAAWpF,UAAU,QAAA;QAAA,WACb;QAAA,GAJiB,WAArB8D,EAAQqB,QAAAA,GAAsBZ,eACnCpD,IAAQ5G,eAAesC,GAAO,KAAK0H;QAAAA,GAKlC;QAAA,IACEf,YAAAA,KAAkB;QAAA,aACVA,YAAY;QAAA,eACV;QAAA,WACJ3G,IAAM;IAAA,IAGdc,IAAO6G,aAAarI,GAAG,IAAI,GAAGgF,GAAAA;QAAAA,QACzB2C,EAAQO,MAAAA,IAAUC;QAAAA,WACfR,EAAQ5C,SAAAA,IAAa;QAAA,UACtB4C,EAAQa,QAAAA;IAAAA;IAAAA,OAAAA,EAGdvO,WAAAA,CAAYgP,IAEVzH;AAAAA;AAGR,SAAgB0H,QAAQlB,CAAAA,EAAIC,CAAAA,EAAIjD,CAAAA,EAAOtE,CAAAA;IAAAA,IAAOiH,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAEzC5H,IAASiI,IAAKC,GAEdtN,IAAOkJ,UAAU,QAAA;QAAA,WAAA;QAAA,QAAA;YAAA,MAAA;YAAA,QAIXsE;YAAAA,oBACenD,IAAAA,OAAUjF;QAAAA;QAAAA,GAG/B;QAAA,GACA;QAAA,OACIiF;QAAAA,QACCjF;IAAAA;IAGL4H,EAAQqB,QAAAA,IAAUrB,CAAAA,EAAQqB,QAAAA,GAAW,OAAA;IAAA,IAIrCC,IAAWpF,UAAU,QAAA;QAAA,WACb;QAAA,GAJiB,WAArB8D,EAAQqB,QAAAA,GAAsBZ,eACnCpD,IAAQ5G,eAAesC,IAAM,IAAI,OAAO0H;QAAAA,GAKvC;QAAA,IACEf,YAAAA,KAAkB;QAAA,aACVA,YAAY;QAAA,eACV;QAAA,WACJ3G,IAAM;IAAA,IAGdyI,IAAStF,UAAU,KAAA;QAAA,WAAA,kBACKoE,IAAAA;IAAAA;IAAAA,OAAAA,EAGrBhO,WAAAA,CAAYU,IAAAA,EACZV,WAAAA,CAAYgP,IAEZE;AAAAA;AAGR,SAAgBC,WAAWpD,CAAAA,EAAGnG,CAAAA,EAAMmF,CAAAA,EAAOhC,CAAAA;IAAAA,IAAOtC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAM,IAAI2I,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAM,GAAG1E,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAO,GAAG2E,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAAAA,IAC5D1J,qBAAqBC,GAAMyJ,EAAKxJ,QAAAA,GAAAA,IAAAA,eAAAA,GAAAA,IAA7CC,IAAAA,CAAAA,CAAAA,EAAAA,EAAQC,IAAAA,CAAAA,CAAAA,EAAAA;IAAAA,KACR2E,GAES,MAAX5E,KAAAA,CAAAA,IACOuJ,EAAKC,SAAAA,EAAAA,KACTD,EAAKC,SAAAA,AAAAA,GAIN1K,cAAcmH,MAAIA,CAAAA,IAAI,CAAA,GACtBnH,cAAcmB,MAAIA,CAAAA,IAAI,CAAA,GACtBnB,cAAckB,GAAAA,CAAQ,MAAOA,CAAAA,IAAS,CAAA,GACtClB,cAAcmG,GAAAA,CAAO,MAAOA,CAAAA,IAAQ,CAAA;IAAA,IAErCrK,IAAOkJ,UAAU,QAAA;QAAA,WAAA;QAAA,OAAA,WAEJb;QAAAA,oBACIqG;QAAAA,GACjBrD;QAAAA,GACAhG;QAAAA,OACIgF;QAAAA,QACCjF;IAAAA;IAAAA,IAAAA,AAAAA,CAAAA,KAGA,EAAA,KAEKW,EAAM7C,MAAAA,EAEb;QAAA,EACDwG,YAAAA,CAAa,KAAK,IAAA,EAClBA,YAAAA,CAAa,KAAK;QAAA,IACnB+C,IAAOvD,UAAU,QAAA;YAAA,WACT;YAAA,GACRmB,IAAM;YAAA,GACN;YAAA,IACEqC,YAAY,IAAA,KAAU;YAAA,aACdA,YAAY;YAAA,eACV;YAAA,WACJ3G;QAAAA,IAGR6G,IAAQ1D,UAAU,KAAA;YAAA,oBACDwF;YAAAA,WAAAA,eACIrD,IAAAA,OAAMhG,IAAAA;QAAAA;QAAAA,OAAAA,EAEzB/F,WAAAA,CAAYU,IAAAA,EACZV,WAAAA,CAAYmN,IAEXG;IAAAA;IAAAA,OArBA5M;AAAAA;AAyBT,SAAgB6O,WAAWxD,CAAAA,EAAGhG,CAAAA,EAAGvB,CAAAA,EAAQuE,CAAAA;IAAAA,IAAOtC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAM,IAAI2I,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAM,GAC3DI,IAAM5F,UAAU,UAAA;QAAA,OAAA,WACHb;QAAAA,oBACIqG;QAAAA,IAChBrD;QAAAA,IACAhG;QAAAA,GACDvB;IAAAA;IAAAA,IAAAA,AAAAA,CAAAA,KAGK,EAAA,KAEKiC,EAAM7C,MAAAA,EAEb;QAAA,EACFwG,YAAAA,CAAa,MAAM,IAAA,EACnBA,YAAAA,CAAa,MAAM;QAAA,IAEnB+C,IAAOvD,UAAU,QAAA;YAAA,WACT;YAAA,GACR;YAAA,GACA;YAAA,IACEwD,YAAY,IAAA,KAAS5I,IAAU;YAAA,aACvB4I,YAAY;YAAA,eACV;YAAA,WACJ3G;QAAAA,IAGR6G,IAAQ1D,UAAU,KAAA;YAAA,oBACDwF;YAAAA,WAAAA,eACIrD,IAAAA,OAAMhG,IAAAA;QAAAA;QAAAA,OAAAA,EAEzB/F,WAAAA,CAAYwP,IAAAA,EACZxP,WAAAA,CAAYmN,IAEXG;IAAAA;IAAAA,OAtBAkC;AAAAA;AA0BT,SAAgBC,SAASvI,CAAAA,EAAOC,CAAAA,EAAO4B,CAAAA;IAAAA,IAAO2E,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAAY2B,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAErDK,IADavI,EAAM+C,GAAAA,CAAI,SAACnE,CAAAA,EAAGsB,CAAAA;QAAAA,OAAOH,CAAAA,CAAMG,EAAAA,GAAK,MAAMtB;IAAAA,GAC5B4J,IAAAA,CAAK;IAG5BjC,EAAQkC,MAAAA,IACXF,CAAAA,IAAYzI,wBAAwBC,GAAOC,EAAAA;IAAAA,IAExC0I,IAAOvE,SAAS,MAAIoE,GAAW,mBAAmB3G;IAAAA,IAGnD2E,EAAQoC,QAAAA,EAAU;QAAA,IAChBC,IAAcxD,aAAa8C,EAAKW,OAAAA,EAASjH;QAAAA,EACxCpJ,KAAAA,CAAMsO,MAAAA,GAAAA,UAAiB8B,IAAAA;IAAAA;IAAAA,IAGzBE,IAAAA;QAAAA,MACGJ;IAAAA;IAAAA,IAIJnC,EAAQwC,UAAAA,EAAY;QAAA,IAClBC,IAAqB5D,aAAa8C,EAAKW,OAAAA,EAASjH,GAAAA,CAAO,IAEvDwC,IAAU,MAASrE,CAAAA,CAAM,EAAA,GAAA,MAAMmI,EAAKxJ,QAAAA,GAAAA,MAAc6J,IAAAA,MAAgBxI,EAAMX,KAAAA,CAAAA,GAAO,CAAG,EAAA,GAAA,MAAM8I,EAAKxJ,QAAAA;QAAAA,EAC3FqJ,MAAAA,GAAS5D,SAASC,GAAAA,eAAwB,QAAA,UAAgB4E,IAAAA;IAAAA;IAAAA,OAG1DF;AAAAA;AChmBR,SAAgBG,UAAUC,CAAAA,EAAMC,CAAAA,EAAUC,CAAAA,EAAUC,CAAAA;IAAAA,IAC/CC,IAA0B,YAAA,OAAbH,IAAwBA,IAAWA,EAASX,IAAAA,CAAK;IAAA,OAAA;QAEjEU;QAAAA;YACClF,WAAWoF,EAASZ,IAAAA,CAAK;QAAA;QAC1Ba;QACAE;QACA;QAAA;YACCvF,WAAWsF;QAAAA;KAAAA;AAAAA;AAId,SAAgBE,kBAAkB9B,CAAAA,EAAO+B,CAAAA,EAAMC,CAAAA;IAAAA,OACvCT,UAAUvB,GAAAA;QAAQgC;QAAM;KAAA,EAAA;QAAKD;QAAM;KAAA,EAAIE;AAAAA;AAG/C,SAAgBC,kBAAkBtC,CAAAA,EAAOuC,CAAAA,EAAMC,CAAAA;IAAAA,OACvCb,UAAU3B,GAAAA;QAAQ;QAAGwC;KAAAA,EAAAA;QAAQ;QAAGD;KAAAA,EAAOF;AAAAA;AAG/C,SAAgBI,cAAcC,CAAAA,EAAWC,CAAAA,EAAOC,CAAAA,EAAOC,CAAAA;IAAAA,IAClDC,IAAYH,IAAQC,GACpB3Q,IAAOyQ,EAAUK,UAAAA,CAAW,EAAA;IAAA,OAAA;QAAA;YAG/B9Q;YAAAA;gBACEoF,QAAQyL;gBAAWE,oBAHV/Q,EAAKgR,YAAAA,CAAa,WAAA,OAGyBH;YAAAA;YACtDT;YACAJ;SAAAA;QAGeN,UAAUe,GAAAA;YAAY;YAAGG;SAAAA,EAAAA;YAAS;YAAGD;SAAAA,EAAQP;KAAAA;AAAAA;AAI9D,SAAgBa,WAAWC,CAAAA,EAAK7F,CAAAA,EAAGnG,CAAAA,EAAMmF,CAAAA;IAAAA,IAAOL,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAO,GAAA,IACpC/E,qBAAqBC,GAAAA,AAAAA,CAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAWC,QAAAA,GAAAA,IAAAA,iBAAAA,GAAAA,IAA7CC,IAAAA,CAAAA,CAAAA,EAAAA,EAAQC,IAAAA,CAAAA,CAAAA,EAAAA;IAAAA,OAAAA,KACR2E,GACe,WAAjBkH,EAAIC,QAAAA,GAAAA;QAAAA;YACKD,EAAIJ,UAAAA,CAAW,EAAA;YAAA;gBAGxBzG,OAAOA;gBAAOjF,QAAQA;YAAAA;YACvBgM;YACApB;SAAAA;QAIeN,UAAUwB,GADRA,EAAIF,YAAAA,CAAa,aAAaK,KAAAA,CAAM,IAAA,CAAK,EAAA,CAAGxL,KAAAA,CAAM,GAAA,KAAI;YAC3BwF;YAAGhG;SAAAA,EAAI+K;KAAAA,GAAAA;QAAAA;YAG3Cc;YAAAA;gBAAM7G,OAAOA;gBAAOjF,QAAQA;gBAAQiG,GAAGA;gBAAGhG,GAAGA;YAAAA;YAAI+L;YAAepB;SAAAA;KAAAA;AAAAA;AAK3E,SAAgBsB,WAAWxC,CAAAA,EAAKzD,CAAAA,EAAGhG,CAAAA;IAAAA,OACd,aAAjByJ,EAAIqC,QAAAA,GAAAA;QAEUzB,UAAUZ,GADRA,EAAIkC,YAAAA,CAAa,aAAaK,KAAAA,CAAM,IAAA,CAAK,EAAA,CAAGxL,KAAAA,CAAM,GAAA,KAAI;YAC3BwF;YAAGhG;SAAAA,EAAI+K;KAAAA,GAAAA;QAAAA;YAG3CtB;YAAAA;gBAAMyC,IAAIlG;gBAAGmG,IAAInM;YAAAA;YAAI+L;YAAepB;SAAAA;KAAAA;AAAAA;AAK/C,SAAgByB,YAAYlC,CAAAA,EAAOmC,CAAAA,EAAUC,CAAAA,EAAUxM,CAAAA,EAAU+J,CAAAA;IAAAA,IAC5D0C,IAAAA,EAAAA,EACA5C,IAAY2C,EAASnI,GAAAA,CAAI,SAACnE,CAAAA,EAAGsB,CAAAA;QAAAA,OAAO+K,CAAAA,CAAS/K,EAAAA,GAAK,MAAMtB;IAAAA,GAAI4J,IAAAA,CAAK;IAEjEC,KACHF,CAAAA,IAAYzI,wBAAwBmL,GAAUC,EAAAA;IAAAA,IAEzCE,IAAAA;QAAYtC,EAAMJ,IAAAA;QAAAA;YAAOvM,GAAE,MAAMoM;QAAAA;QAAY8C;QAAe9B;KAAAA;IAAAA,IAAAA,EACnDpJ,IAAAA,CAAKiL,IAEjBtC,EAAMf,MAAAA,EAAQ;QAAA,IACZuD,IAAgBL,CAAAA,CAAS,EAAA,GAAA,MAAMvM,IAAAA,KAC/B6M,IAAAA,MAAeN,EAAS7L,KAAAA,CAAAA,GAAO,CAAG,EAAA,GAAA,OAAOV,GAEvC8M,IAAAA;YACL1C,EAAMf,MAAAA;YAAAA;gBACL5L,GAAE,MAAMmP,IAAa/C,IAAYgD;YAAAA;YAClCF;YACA9B;SAAAA;QAAAA,EAEcpJ,IAAAA,CAAKqL;IAAAA;IAAAA,OAGdL;AAAAA;AAGR,SAAgBM,eAAeC,CAAAA,EAAStH,CAAAA;IAAAA,OAAAA;QAC/BsH;QAAAA;YAAUvP,GAAGiI;QAAAA;QAAUuG;QAAepB;KAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AC1F/C,SAASoC,kBAAkBrS,CAAAA,EAASsS,CAAAA,EAAOC,CAAAA;IAAAA,IAAKC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAW,UAAUpT,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,KAAKoF,GAAWiO,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAEhFC,IAAc1S,EAAQ2S,SAAAA,CAAAA,CAAU,IAChCC,IAAa5S,EAAQ2S,SAAAA,CAAAA,CAAU;IAAA,IAE/B,IAAIE,KAAiBP,EAAO;QAAA,IAC3BQ,IAAAA,KAAAA;QAAAA,IACiB,gBAAlBD,IACe9T,SAASsK,eAAAA,CAAgB,8BAA8B,sBAEvDtK,SAASsK,eAAAA,CAAgB,8BAA8B;QAAA,IAErE0J,IAAeN,CAAAA,CAAUI,EAAAA,IAAkB7S,EAAQiR,YAAAA,CAAa4B,IAChEhO,IAAQyN,CAAAA,CAAMO,EAAAA,EAEdG,IAAAA;YAAAA,eACYH;YAAAA,MACTE;YAAAA,IACFlO;YAAAA,OACG;YAAA,KACF0N,IAAI,MAAO;YAAA,QACRQ,IAAe,MAAMlO;YAAAA,YACjBoO,MAAAA,CAAOT,EAAAA;YAAAA,UACT;YAAA,UACA;YAAA,MACJ;QAAA;QAGJpT,KAAAA,CAAAA,EACF,IAAA,GAAmBA,CAAAA;QAAAA,IAGf,IAAIwH,KAAKoM,EAAAA,EACErJ,YAAAA,CAAa/C,GAAGoM,CAAAA,CAASpM,EAAAA;QAAAA,EAG7BrH,WAAAA,CAAYuT,IAErB1T,IAAAA,EACSuK,YAAAA,CAAakJ,GAAAA,eAA4BhO,IAAAA,OAAAA,EAEzC8E,YAAAA,CAAakJ,GAAehO;IAAAA;IAAAA,OAAAA;QAIjC6N;QAAaE;KAAAA;AAAAA;AAGtB,SAAgBlI,UAAU1K,CAAAA,EAASd,CAAAA;IAAAA,EAC1BA,KAAAA,CAAMwL,SAAAA,GAAYxL,GAAAA,EAClBA,KAAAA,CAAMgU,eAAAA,GAAkBhU,GAAAA,EACxBA,KAAAA,CAAMiU,WAAAA,GAAcjU,GAAAA,EACpBA,KAAAA,CAAMkU,YAAAA,GAAelU,GAAAA,EACrBA,KAAAA,CAAMmU,UAAAA,GAAanU;AAAAA;AAG5B,SAASoU,WAAW9I,CAAAA,EAAc+I,CAAAA;IAAAA,IAC7BC,IAAAA,EAAAA,EACAC,IAAAA,EAAAA;IAAAA,EAEKhK,GAAAA,CAAI,SAAA,CAAA;QAAA,IACRmG,IAAO5P,CAAAA,CAAQ,EAAA,EACfoK,IAASwF,EAAKrG,UAAAA,EAEdmJ,IAAAA,KAAAA,GAAaE,IAAAA,KAAAA;QAAAA,CAAAA,CAET,EAAA,GAAKhD;QAAAA,IAAAA,IACeyC,kBAAAA,KAAAA,CAAAA,KAAAA,GAAAA,qBAAqBrS,KAAAA,IAAAA,iBAAAA,GAAAA;QAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,EAErC6G,IAAAA,CAAK+L,IAAAA,EACJ/L,IAAAA,CAAAA;YAAM6L;YAAatI;SAAAA,GAE5BA,KAAAA,EACIsJ,YAAAA,CAAahB,GAAa9C;IAAAA;IAAAA,IAI/B+D,IAAUnJ,EAAamI,SAAAA,CAAAA,CAAU;IAAA,OAAA,EAExBlJ,GAAAA,CAAI,SAACiJ,CAAAA,EAAa9L,CAAAA;QAC1B8L,CAAAA,CAAY,EAAA,IAAA,CAAA,CAAA,CACH,EAAA,CAAGgB,YAAAA,CAAaF,CAAAA,CAAY5M,EAAAA,EAAI8L,CAAAA,CAAY,EAAA,GAAA,CAAA,CAC/C9L,EAAAA,CAAG,EAAA,GAAK4M,CAAAA,CAAY5M,EAAAA,AAAAA;IAAAA,IAIxB+M;AAAAA;AAGR,SAAgBC,iBAAiBxJ,CAAAA,EAAQyJ,CAAAA,EAAYC,CAAAA;IAAAA,IACpB,MAA7BA,EAAkB3Q,MAAAA,EAAAA;QAAAA,IAEjB4Q,IAAiBT,WAAWO,GAAYC;QACzCD,EAAWtK,UAAAA,IAAca,KAAAA,CAAAA,EACpB4J,WAAAA,CAAYH,IAAAA,EACZtU,WAAAA,CAAYwU,EAAAA,GAAAA,WAKT;YACPA,EAAexK,UAAAA,IAAca,KAAAA,CAAAA,EACxB4J,WAAAA,CAAYD,IAAAA,EACZxU,WAAAA,CAAYsU,EAAAA;QAAAA,GAElBI;IAAAA;AAAAA;ACnHG,SAASC,aAAaC,CAAAA,EAAU5H,CAAAA;IAAAA,IAClCvE,IAAIjJ,SAASI,aAAAA,CAAc;IAAA,EAC7BD,KAAAA,GAAQ;IAAA,IACNkV,IAAO,IAAIC,KAAK9H,GAAAA;QAAOnN,MAAM;IAAA,IAC7BkV,IAAMxT,OAAOyT,GAAAA,CAAIC,eAAAA,CAAgBJ;IAAAA,EACnCK,IAAAA,GAAOH,GAAAA,EACPI,QAAAA,GAAWP,GAAAA,SACJ7T,IAAAA,CAAKf,WAAAA,CAAYyI,IAAAA,EACxB2M,KAAAA,IAAAA,WACS;QAAA,SACDrU,IAAAA,CAAK0T,WAAAA,CAAYhM,IAAAA,OACnBuM,GAAAA,CAAIK,eAAAA,CAAgBN;IAAAA,GACzB;AAAA;AAGJ,SAAgBO,iBAAiBC,CAAAA;IAAAA,IAC5BC,IAAQD,EAAInC,SAAAA,CAAAA,CAAU;IAAA,EACpBqC,SAAAA,CAAUC,GAAAA,CAAI,oBAAA,EACdtL,YAAAA,CAAa,SAAS,+BAAA,EACtBA,YAAAA,CAAa,eAAe;IAAA,IAC9BuL,IAAUvV,EAAEwV,MAAAA,CAAO,SAAA;QAAA,WACTC;IAAAA;IAAAA,EAER9V,YAAAA,CAAa4V,GAASH,EAAM1V,UAAAA;IAAAA,IAE9BgW,IAAY1V,EAAEwV,MAAAA,CAAO;IAAA,OAAA,EACf5V,WAAAA,CAAYwV,IAEfM,EAAUC,SAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,6BAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,GAAAA,MAAAA,IAAAA,eAAAA;IAAAA,OAAAA,CAAAA,KAAAA,YAAAA,OAAAA,KAAAA,cAAAA,OAAAA,IAAAA,IAAAA;AAAAA;AAAAA,SAAAA,YAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,cAAAA,OAAAA,KAAAA,SAAAA,GAAAA,MAAAA,IAAAA,UAAAA,6DAAAA,OAAAA;IAAAA,EAAAA,SAAAA,GAAAA,OAAAA,MAAAA,CAAAA,KAAAA,EAAAA,SAAAA,EAAAA;QAAAA,aAAAA;YAAAA,OAAAA;YAAAA,YAAAA,CAAAA;YAAAA,UAAAA,CAAAA;YAAAA,cAAAA,CAAAA;QAAAA;IAAAA,IAAAA,KAAAA,CAAAA,OAAAA,cAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,KAAAA,EAAAA,SAAAA,GAAAA,CAAAA;AAAAA;ACblB,SAASC,WAAWC,CAAAA;IAAAA,IACfC,IAAS,IAAI1Q,KAAKyQ;IAAAA,OAAAA,EACfE,UAAAA,CAAWD,EAAOE,UAAAA,KAAeF,EAAOG,iBAAAA,KACxCH;AAAAA;AAGR,SAAgBI,YAAYL,CAAAA;IAAAA,IACvBM,IAAKN,EAAKO,OAAAA,IACVC,IAAKR,EAAKS,QAAAA,KAAa;IAAA,OAAA;QAE1BT,EAAKU,WAAAA;QACJF,CAAAA,IAAG,IAAI,KAAK,GAAA,IAAOA;QACnBF,CAAAA,IAAG,IAAI,KAAK,GAAA,IAAOA;KAAAA,CACnB5G,IAAAA,CAAK;AAAA;AAGR,SAAgB6F,MAAMS,CAAAA;IAAAA,OACd,IAAIzQ,KAAKyQ,EAAKxQ,OAAAA;AAAAA;AAiBtB,SAAgBmR,gBAAgBC,CAAAA,EAAWC,CAAAA;IAAAA,IACtCC,IAAgBC,eAAeH;IAAAA,OAC5B9S,KAAKkT,IAAAA,CAAKC,eAAeH,GAAeD,KAAWK;AAAAA;AAG3D,SAAgBD,eAAeL,CAAAA,EAAWC,CAAAA;IAAAA,IACrCM,IAAqBC,aAAaC;IAAAA,OAAAA,AAC9BtB,CAAAA,WAAWc,KAAWd,WAAWa,EAAAA,IAAcO;AAAAA;AAGxD,SAAgBG,eAAeV,CAAAA,EAAWC,CAAAA;IAAAA,OAClCD,EAAUH,QAAAA,OAAeI,EAAQJ,QAAAA,MACpCG,EAAUF,WAAAA,OAAkBG,EAAQH,WAAAA;AAAAA;AAGzC,SAAgBa,aAAanQ,CAAAA;IAAAA,IAAGoQ,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAC3BC,IAAYC,WAAAA,CAAYtQ,EAAAA;IAAAA,OACrBoQ,IAAQC,EAAUnR,KAAAA,CAAM,GAAG,KAAKmR;AAAAA;AAGxC,SAAgBE,mBAAoBC,CAAAA,EAAOC,CAAAA;IAAAA,OACnC,IAAItS,KAAKsS,GAAMD,IAAQ,GAAG;AAAA;AAIlC,SAAgBb,eAAef,CAAAA;IAAAA,IAC1B8B,IAAUvC,MAAMS,IACd+B,IAAMD,EAAQE,MAAAA;IAAAA,OACT,MAARD,KAAAA,QACMD,GAAAA,KAAgBC,IAElBD;AAAAA;AAIR,SAAgBG,QAAQjC,CAAAA,EAAMkC,CAAAA;IAAAA,EACxBC,OAAAA,CAAQnC,EAAKO,OAAAA,KAAY2B;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AC6V/B,SAAgBE,aAAaC,CAAAA,EAAMC,CAAAA,EAAWC,CAAAA;IAAAA,IACzCvO,IAAOwO,OAAOxO,IAAAA,CAAKyO,kBAAkBC,MAAAA,CAAO,SAAA,CAAA;QAAA,OAAKL,EAAKM,QAAAA,CAASC;IAAAA,IAC/DC,IAASJ,gBAAAA,CAAiBzO,CAAAA,CAAK,EAAA,CAAA;IAAA,OAAA,OAC5B8O,MAAAA,CAAOD,GAAAA;QAAAA,WACFP;QAAAA,SACFC;IAAAA,IAEH,IAAIQ,eAAeF;AAAAA;AAAAA,SAAAA,mBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,2BAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,GAAAA,MAAAA,IAAAA,eAAAA;IAAAA,OAAAA,CAAAA,KAAAA,YAAAA,OAAAA,KAAAA,cAAAA,OAAAA,IAAAA,IAAAA;AAAAA;AAAAA,SAAAA,UAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,cAAAA,OAAAA,KAAAA,SAAAA,GAAAA,MAAAA,IAAAA,UAAAA,6DAAAA,OAAAA;IAAAA,EAAAA,SAAAA,GAAAA,OAAAA,MAAAA,CAAAA,KAAAA,EAAAA,SAAAA,EAAAA;QAAAA,aAAAA;YAAAA,OAAAA;YAAAA,YAAAA,CAAAA;YAAAA,UAAAA,CAAAA;YAAAA,cAAAA,CAAAA;QAAAA;IAAAA,IAAAA,KAAAA,CAAAA,OAAAA,cAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,KAAAA,EAAAA,SAAAA,GAAAA,CAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,6BAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,GAAAA,MAAAA,IAAAA,eAAAA;IAAAA,OAAAA,CAAAA,KAAAA,YAAAA,OAAAA,KAAAA,cAAAA,OAAAA,IAAAA,IAAAA;AAAAA;AAAAA,SAAAA,YAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,cAAAA,OAAAA,KAAAA,SAAAA,GAAAA,MAAAA,IAAAA,UAAAA,6DAAAA,OAAAA;IAAAA,EAAAA,SAAAA,GAAAA,OAAAA,MAAAA,CAAAA,KAAAA,EAAAA,SAAAA,EAAAA;QAAAA,aAAAA;YAAAA,OAAAA;YAAAA,YAAAA,CAAAA;YAAAA,UAAAA,CAAAA;YAAAA,cAAAA,CAAAA;QAAAA;IAAAA,IAAAA,KAAAA,CAAAA,OAAAA,cAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,KAAAA,EAAAA,SAAAA,GAAAA,CAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AC5b3B,SAESG,UAAUlN,CAAAA;IAAAA,IAKX,MAAJA,GAAAA,OAAAA;QACM;QAAG;KAAA;IAAA,IAET/G,MAAM+G,IAAAA,OAAAA;QACAmN,UAAAA;QAA6BC,UAAU;IAAA;IAAA,IAE5CC,IAAMrN,IAAI,IAAI,IAAA;IAAK,IAAA,CACnB7G,SAAS6G,IAAAA,OAAAA;QACJmN,UAAgB,mBAANE;QAAwBD,UAAU;IAAA;IAAA,IAGjDpV,KAAKC,GAAAA,CAAI+H;IAAAA,IACTsN,IAAMtV,KAAK6C,KAAAA,CAAM7C,KAAK8C,KAAAA,CAAMkF;IAAAA,OAAAA;QAGxBqN,IAFErN,CAAAA,IAAEhI,KAAKiD,GAAAA,CAAI,IAAIqS,EAAAA;QAENA;KAAAA;AAAAA;AAGpB,SAASC,uBAAuBC,CAAAA;IAAAA,IAAKC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAI,GACpCC,IAAa1V,KAAKkT,IAAAA,CAAKsC,IACvBG,IAAa3V,KAAK6C,KAAAA,CAAM4S,IACxBG,IAAQF,IAAaC,GAErBE,IAAYD,GACZE,IAAW;IAGZF,IAAQ,KACPA,CAAAA,IAAQ,KAAM,KAAA,CAAA,IAAA,EAAA,IAGKD,CAAAA,GAAAA,IAEVC,IAAM,GAAA,IACP,CAAA,GAITA,KAAS,KAAA,CAAA,IAEAA,IAAAA,CAAAA,IADC,CAAA,CAAA,GAKA,MAAVA,KAAAA,CAAAA,IACU,GAAA,IACD,CAAA;IAAA,IAIR,IADAG,IAAAA,EAAAA,EACIzS,IAAI,GAAGA,KAAKuS,GAAWvS,IAAAA,EACpBC,IAAAA,CAAKoS,IAAaG,IAAWxS;IAAAA,OAEjCyS;AAAAA;AAGR,SAASC,kBAAkBC,CAAAA;IAAAA,IAAUC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAS,GAAA,IACZhB,UAAUe,IAAAA,IAAAA,iBAAAA,GAAAA,IAAtCE,IAAAA,CAAAA,CAAAA,EAAAA,EAAgBf,IAAAA,CAAAA,CAAAA,EAAAA,EACjBgB,IAAiBF,IAAWA,IAASlW,KAAKiD,GAAAA,CAAI,IAAImS,KAAW,GAK7DW,IAAYR,uBAAAA,IAFCY,EAAe3W,OAAAA,CAAQ,IAEe4W;IAAAA,OAAAA,IAC3CL,EAAU5P,GAAAA,CAAI,SAAA,CAAA;QAAA,OAAS5E,IAAQvB,KAAKiD,GAAAA,CAAI,IAAImS;IAAAA;AAAAA;AAIzD,SAAgBiB,mBAAmBC,CAAAA;IAAAA,SAYzBC,EAA0BN,CAAAA,EAAUO,CAAAA;QAAAA,IAOxC,IANAT,IAAYC,kBAAkBC,IAE9BQ,IAAeV,CAAAA,CAAU,EAAA,GAAKA,CAAAA,CAAU,EAAA,EAGxCxU,IAAQ,GACJ+B,IAAI,GAAG/B,IAAQiV,GAAalT,IAAAA,KAC1BmT,GAAAA,EACCC,OAAAA,CAAAA,KAAenV;QAAAA,OAEnBwU;IAAAA;IAAAA,IAvBkCY,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAMtCV,IAAWjW,KAAKwV,GAAAA,CAAAA,KAAAA,CAAAA,MAAAA,qBAAOc,KACvBJ,IAAWlW,KAAKyV,GAAAA,CAAAA,KAAAA,CAAAA,MAAAA,qBAAOa,KAGTP,IAAAA,EAAAA;IAAAA,IAkBfE,KAAY,KAAKC,KAAY,GACpBhB,UAAUe,EAAAA,CAAU,EAAA,EAAA,IAC3BU,IAGSX,kBAAkBC,GAAUC,KAF5BF,kBAAkBC;SAQ3B,IAAGA,IAAW,KAAKC,IAAW,GAAG;QAAA,IAOjCM,IAAcxW,KAAKC,GAAAA,CAAIiW;QAExBD,KAAYO,IACHtB,CAAAA,UAAUe,EAAAA,CAAU,EAAA,EAAA,IACnBM,EAA0BN,GAAUO,EAAAA,IAGrCtB,CAAAA,UAAUsB,EAAAA,CAAa,EAAA,EAAA,IACfD,EAA0BC,GAAaP,GACjC9R,OAAAA,GAAUgC,GAAAA,CAAI,SAAA,CAAA;YAAA,OAAA,KAAK5G;QAAAA,EAAAA;IAAAA,OAOzC,IAAG0W,KAAY,KAAKC,KAAY,GAAG;QAAA,IAInCU,IAAiB5W,KAAKC,GAAAA,CAAIiW,IAC1BW,IAAiB7W,KAAKC,GAAAA,CAAIgW;QAEnBf,UAAU0B,EAAAA,CAAgB,EAAA,EAAA,IAAA,AAAA,CAAA,IACjCD,IAGSX,kBAAkBY,GAAgBC,KAFlCb,kBAAkBY,EAAAA,EAKTzS,OAAAA,GAAUgC,GAAAA,CAAI,SAAA,CAAA;YAAA,OAAA,KAAK5G;QAAAA;IAAAA;IAAAA,OAGnCwW;AAAAA;AAGR,SAAgBe,aAAaC,CAAAA;IAAAA,IAExBC,IAAWC,gBAAgBF;IAAAA,OAC5BA,EAAKG,OAAAA,CAAQ,MAAM,IAGTH,EAAKG,OAAAA,CAAQ,KAChBH,CAAAA,CAAK,EAAA,GAAK,IAAA,KAGTA,CAAAA,CAAK,EAAA,GACUC,IAAAA,KAIfD,CAAAA,CAAKA,EAAKlX,MAAAA,GAAS,EAAA,GACJmX,IAAYD,CAAAA,EAAKlX,MAAAA,GAAS,CAAA;AAAA;AAiBrD,SAAgBoX,gBAAgBE,CAAAA;IAAAA,OACxBA,CAAAA,CAAa,EAAA,GAAKA,CAAAA,CAAa,EAAA;AAAA;AAGvC,SAAgBC,cAAcD,CAAAA;IAAAA,OACtBA,CAAAA,CAAaA,EAAatX,MAAAA,GAAO,EAAA,GAAKsX,CAAAA,CAAa,EAAA;AAAA;AAG3D,SAAgBE,MAAMrR,CAAAA,EAAKsR,CAAAA;IAAAA,OACnBhY,SAASgY,EAAMxV,QAAAA,GAAWkE,IAAMsR,EAAMC,eAAAA;AAAAA;AAY9C,SAAgBC,kBAAkBC,CAAAA,EAAMC,CAAAA;IAAAA,IAAKrM,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EACxCsM,IAAUD,EAAInT,MAAAA,CAAO,SAASqT,CAAAA,EAAMC,CAAAA;QAAAA,OAC/B7X,KAAKC,GAAAA,CAAI4X,IAAOJ,KAAQzX,KAAKC,GAAAA,CAAI2X,IAAOH,KAAQI,IAAOD;IAAAA,GAAAA,EAAAA;IAAAA,OAGzDvM,IAAQqM,EAAIR,OAAAA,CAAQS,KAAWA;AAAAA;AAGvC,SAAgBG,iBAAiBxB,CAAAA,EAAQyB,CAAAA;IAAAA,IASpC,IALAC,IAAehY,KAAKwV,GAAAA,CAAAA,KAAAA,CAAAA,MAAAA,qBAAOc,KAE3B2B,IAAmB,IAAKF,CAAAA,IAAmB,CAAA,GAC3CG,IAAAA,EAAAA,EAEI5U,IAAI,GAAGA,IAAIyU,GAAkBzU,IAAK;QAAA,IACrC6U,IAAaH,IAAgBC,CAAAA,IAAmB3U,CAAAA;QAAAA,EACvCC,IAAAA,CAAK4U;IAAAA;IAAAA,OAGZD;AAAAA;AAGR,SAAgBE,iBAAiB7W,CAAAA,EAAO2W,CAAAA;IAAAA,OAChCA,EAAatD,MAAAA,CAAO,SAAA,CAAA;QAAA,OAAKrV,IAAIgC;IAAAA,GAAO1B,MAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,6BAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,GAAAA,MAAAA,IAAAA,eAAAA;IAAAA,OAAAA,CAAAA,KAAAA,YAAAA,OAAAA,KAAAA,cAAAA,OAAAA,IAAAA,IAAAA;AAAAA;AAAAA,SAAAA,YAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,cAAAA,OAAAA,KAAAA,SAAAA,GAAAA,MAAAA,IAAAA,UAAAA,6DAAAA,OAAAA;IAAAA,EAAAA,SAAAA,GAAAA,OAAAA,MAAAA,CAAAA,KAAAA,EAAAA,SAAAA,EAAAA;QAAAA,aAAAA;YAAAA,OAAAA;YAAAA,YAAAA,CAAAA;YAAAA,UAAAA,CAAAA;YAAAA,cAAAA,CAAAA;QAAAA;IAAAA,IAAAA,KAAAA,CAAAA,OAAAA,cAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,KAAAA,EAAAA,SAAAA,GAAAA,CAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AC7O5C,SAGgBwY,SAASpP,CAAAA,EAAMnN,CAAAA;IAAAA,EACzBwc,MAAAA,GAASrP,EAAKqP,MAAAA,IAAAA,EAAAA;IAAAA,IAEfC,IAAgBtP,EAAKqP,MAAAA,CAAOzY,MAAAA,EAG5B2Y,IAAWvP,EAAKuP,QAAAA,EAChBC,IAAY,IAAI1Y,MAAMwY,GAAerY,IAAAA,CAAK;IAAA,OAC1CsY,KAAAA,CAAAA,IAAAA;QAAAA;YAAAA,QAGMC;QAAAA;KAAAA,AAAAA,GAAAA,EAIDtS,GAAAA,CAAI,SAAA,CAAA;QAAA,IAER5G,EAAE+W,MAAAA,EAEC;YAAA,IAEFoC,IAAOnZ,EAAE+W,MAAAA;YAAAA,IAAAA,AAAAA,CAAAA,IACNoC,EAAKvS,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAASlF,MAAM+E,KAAa,IAANA;YAAAA,EAAAA,EAG9BnG,MAAAA,GAAS0Y,IACTG,EAAKlW,KAAAA,CAAM,GAAG+V,KAEd9Y,UAAUiZ,GAAMH,IAAgBG,EAAK7Y,MAAAA,EAAQ,IAAA,EAEnDyW,MAAAA,GAASoC;QAAAA,OAAAA,EAZTpC,MAAAA,GAASmC;QAgBRlZ,EAAEoZ,SAAAA,IACDC,CAAAA,yBAAyB/D,QAAAA,CAAS/Y,IAAAA,EACpC6c,SAAAA,GAAY7c,CAAAA;IAAAA,IASbmN,EAAK4P,QAAAA,IAAAA,EACFA,QAAAA,CAAS1S,GAAAA,CAAI,SAAA,CAAA;QAAA,IACd5G,EAAEuZ,GAAAA,GAAMvZ,EAAEK,KAAAA,EAAO;YAAA,IAAA,IAAA;gBACCL,EAAEuZ,GAAAA;gBAAKvZ,EAAEK,KAAAA;aAAAA;YAAAA,EAA1BA,KAAAA,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA,EAASkZ,GAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA;IAAAA,IAKR7P;AAAAA;AAGR,SAAgB8P,aAAaC,CAAAA;IAAAA,IACxBT,IAAgBS,EAASV,MAAAA,CAAOzY,MAAAA,EAChC4Y,IAAY,IAAI1Y,MAAMwY,GAAerY,IAAAA,CAAK,IAE1C+Y,IAAAA;QAAAA,QACKD,EAASV,MAAAA,CAAO9V,KAAAA,CAAM,GAAA;QAAI,UACxBwW,EAASR,QAAAA,CAASrS,GAAAA,CAAI,SAAA,CAAA;YAAA,OAAA;gBAAA,MAExB;gBAAA,QACEsS,EAAUjW,KAAAA,CAAM,GAAA;gBAAI,WACjBjD,EAAEoZ,SAAAA;YAAAA;QAAAA;IAAAA;IAAAA,OAKbK,EAASE,QAAAA,IAAAA,CAAAA,EACFA,QAAAA,GAAAA;QAAAA;YAAAA,OAEA;YAAA,OACA;QAAA;KAAA,AAAA,GAKPF,EAASH,QAAAA,IAAAA,CAAAA,EACFA,QAAAA,GAAAA;QAAAA;YAAAA,OAEA;YAAA,KACF;YAAA,OACE;QAAA;KAAA,AAAA,GAKHI;AAAAA;AAGR,SAAgBE,mBAAmBC,CAAAA;IAAAA,IAAYd,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,EAAAA,EAAWe,IAAAA,CAAAA,CAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,AAAAA,KAAAA,SAAAA,CAAAA,EAAAA,EACrDC,IAAeF,IAAad,EAAOzY,MACpCyZ;IAAAA,KAAgB,KAAGA,CAAAA,IAAe,CAAA;IAAA,IACjCC,IAAiBD,IAAeE,oBAEhCC,IAAAA,KAAAA;IAAAA,IACDJ,GAAU;QAAA,IAERK,IAAiB1Z,KAAKwV,GAAAA,CAAAA,KAAAA,CAAAA,MAAAA,qBAAO8C,EAAOnS,GAAAA,CAAI,SAAA,CAAA;YAAA,OAASzD,EAAM7C,MAAAA;QAAAA;QAAAA,IAC1CG,KAAKkT,IAAAA,CAAKwG,IAAeH;IAAAA;IAAAA,OAG1BjB,EAAOnS,GAAAA,CAAI,SAACzD,CAAAA,EAAOY,CAAAA;QAAAA,OAAAA,AAAAA,CAAAA,KAC1B,EAAA,EACAzD,MAAAA,GAAS0Z,KAEbF,CAAAA,IAOA/V,IAAImW,KAAmB,KAAA,CAAA,IACjB,EAAA,IAAA,IAPNF,IAAe,IAAI,IACb7W,EAAMF,KAAAA,CAAM,GAAG+W,IAAe,KAAK,SAEnC7W,EAAMF,KAAAA,CAAM,GAAG+W,KAAkB,IAAA,GAQrC7W;IAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,6BAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,GAAAA,MAAAA,IAAAA,eAAAA;IAAAA,OAAAA,CAAAA,KAAAA,YAAAA,OAAAA,KAAAA,cAAAA,OAAAA,IAAAA,IAAAA;AAAAA;AAAAA,SAAAA,YAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,cAAAA,OAAAA,KAAAA,SAAAA,GAAAA,MAAAA,IAAAA,UAAAA,6DAAAA,OAAAA;IAAAA,EAAAA,SAAAA,GAAAA,OAAAA,MAAAA,CAAAA,KAAAA,EAAAA,SAAAA,EAAAA;QAAAA,aAAAA;YAAAA,OAAAA;YAAAA,YAAAA,CAAAA;YAAAA,UAAAA,CAAAA;YAAAA,cAAAA,CAAAA;QAAAA;IAAAA,IAAAA,KAAAA,CAAAA,OAAAA,cAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,KAAAA,EAAAA,SAAAA,GAAAA,CAAAA;AAAAA;AAAAA,SAAAA,qBAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,EAAAA,MAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,MAAAA,IAAAA,CAAAA;AAAAA;AAAAA,SAAAA,kBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA,6BAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,GAAAA,MAAAA,IAAAA,eAAAA;IAAAA,OAAAA,CAAAA,KAAAA,YAAAA,OAAAA,KAAAA,cAAAA,OAAAA,IAAAA,IAAAA;AAAAA;AAAAA,SAAAA,YAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,cAAAA,OAAAA,KAAAA,SAAAA,GAAAA,MAAAA,IAAAA,UAAAA,6DAAAA,OAAAA;IAAAA,EAAAA,SAAAA,GAAAA,OAAAA,MAAAA,CAAAA,KAAAA,EAAAA,SAAAA,EAAAA;QAAAA,aAAAA;YAAAA,OAAAA;YAAAA,YAAAA,CAAAA;YAAAA,UAAAA,CAAAA;YAAAA,cAAAA,CAAAA;QAAAA;IAAAA,IAAAA,KAAAA,CAAAA,OAAAA,cAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,KAAAA,EAAAA,SAAAA,GAAAA,CAAAA;AAAAA;AAAAA,SAAAA,gBAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,CAAAA,CAAAA,aAAAA,CAAAA,GAAAA,MAAAA,IAAAA,UAAAA;AAAAA;ACzGT,SAASiX;IAAAA,IAAehB,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAY,QAAQ7R,IAAAA,SAAAA,CAAAA,EAAAA,EAAQ6C,IAAAA,SAAAA,CAAAA,EAAAA;IAAAA,OACjC,iBAAdgP,IAAAA,CAAAA,EACK7c,IAAAA,GAAO,QACR,IAAI8d,UAAU9S,GAAQ6C,EAAAA,IAGzBkQ,UAAAA,CAAWlB,EAAAA,GAKT,IAAIkB,UAAAA,CAAWlB,EAAAA,CAAW7R,GAAQ6C,KAAAA,KAAAA,QAJhCmQ,KAAAA,CAAM,2BAA2BnB;AAAAA;AAAAA,IAAAA,WAAAA;AAAAA,YAAAA;AAAAA,IAAAA,UAAAA,cAAAA,OAAAA,UAAAA,YAAAA,OAAAA,OAAAA,QAAAA,GAAAA,SAAAA,CAAAA;IAAAA,OAAAA,OAAAA;AAAAA,IAAAA,SAAAA,CAAAA;IAAAA,OAAAA,KAAAA,cAAAA,OAAAA,UAAAA,EAAAA,WAAAA,KAAAA,UAAAA,MAAAA,OAAAA,SAAAA,GAAAA,WAAAA,OAAAA;AAAAA;AbZ3Ctc,EAAEwV,MAAAA,GAAS,SAAC/L,CAAAA,EAAK1B,CAAAA;IAAAA,IACZ1H,IAAUjB,SAASI,aAAAA,CAAciK;IAAAA,IAEhC,IAAIxC,KAAKc,EAAG;QAAA,IACZ4B,IAAM5B,CAAAA,CAAEd,EAAAA;QAAAA,IAEF,aAANA,GAAAA,EACD0C,GAAK/J,WAAAA,CAAYS;aAEf,IAAU,aAAN4G,GAAgB;YAAA,IACpB/H,IAAMc,EAAE2J;YAAAA,EACRC,UAAAA,CAAWjK,YAAAA,CAAaU,GAASnB,IAAAA,EAC7BU,WAAAA,CAAYV;QAAAA,OAEJ,aAAN+H,IACQ,aAAA,CAAA,KAAA,MAAR0C,IAAAA,cAAAA,QAAAA,EAAAA,KAAAA,OACFE,IAAAA,CAAKF,GAAKG,GAAAA,CAAI,SAAA,CAAA;YAAA,EACZvK,KAAAA,CAAMwK,EAAAA,GAAQJ,CAAAA,CAAII,EAAAA;QAAAA,KAGlB9C,KAAK5G,IAAAA,CAAAA,CACP4G,EAAAA,GAAK0C,IAAAA,EAGLK,YAAAA,CAAa/C,GAAG0C;IAAAA;IAAAA,OAInBtJ;AAAAA;ACxBD,IAAMqd,gBAAAA;IAAAA,SAAAA;QAAAA,KAEN;QAAA,QACG;QAAA,MACF;QAAA,OACC;IAAA;IAAA,UAAA;QAAA,KAGF;QAAA,QACG;QAAA,MACF;QAAA,OACC;IAAA;IAAA,YAGI;IAAA,aACC;IAAA,cACC;IAAA,eAEC;AAAA,GAyBHC,4BAA4B,KAC5BC,6BAA6B,KAE7BC,0BAA0B,QAC1BtB,2BAAAA;IAA4B;IAAQ;CAAA,EAEpCuB,uBAAuB,KAEvBC,wBAAwB,IACxBC,yBAAyB,GAEzBC,sBAAsB,GACtBC,wBAAwB,GAExBC,gCAAgC,IAChC1R,+BAA+B,GAI/B2R,4BAA4B,GAE5BC,sBAAsB,IACtBC,sBAAsB,GAEtBnB,qBAAqB,GAErBoB,kCAAkC,GAEzCC,uBAAAA;IAAwB;IAAc;IAAQ;IAAU;IAAO;IACpE;IAAU;IAAS;IAAe;IAAU;IAAW;IAAc;CAAA,EAChEC,uBAAAA;IAAwB;IAAW;IAAW;IAAW;IAAW;CAAA,EAI7DC,iBAAAA;IAAAA,KACPF;IAAAA,MACCA;IAAAA,KACDA;IAAAA,YACOA;IAAAA,SACHC;IAAAA,OACFD;AAAAA,GAIKla,cAAcX,KAAKqE,EAAAA,GAAK,KACxB2W,aAAa,KAAA,iBAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,EAAA,MAAA,EAAA,IAAA;YAAA,IAAA,IAAA,CAAA,CAAA,EAAA;YAAA,EAAA,UAAA,GAAA,EAAA,UAAA,IAAA,CAAA,GAAA,EAAA,YAAA,GAAA,CAAA,GAAA,WAAA,KAAA,CAAA,EAAA,QAAA,GAAA,CAAA,CAAA,GAAA,OAAA,cAAA,CAAA,GAAA,EAAA,GAAA,EAAA;QAAA;IAAA;IAAA,OAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA;QAAA,OAAA,KAAA,EAAA,EAAA,SAAA,EAAA,IAAA,KAAA,EAAA,GAAA,IAAA;IAAA;AAAA,KavGLC,SAAAA;IAAAA,SAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,EAEnBnU,MAAAA,EAAAA,IAAAA,KAAAA,MAAAA,IAAS,OAAA,GAAA,IAAA,EACToU,MAAAA,EAAAA,IAAAA,KAAAA,MAAAA,IAAAA,EAAAA,GAAAA;QAAAA,kBAAAA,IAAAA,EAAAA,IAAAA,IAAAA,CAEKpU,MAAAA,GAASA,GAAAA,IAAAA,CACToU,MAAAA,GAASA,GAAAA,IAAAA,CACTC,SAAAA,GAAY,IAAA,IAAA,CACZC,UAAAA,GAAa,IAAA,IAAA,CACbC,UAAAA,GAAAA,EAAAA,EAAAA,IAAAA,CACAC,eAAAA,GAAkB,GAAA,IAAA,CAElBtT,CAAAA,GAAI,GAAA,IAAA,CACJhG,CAAAA,GAAI,GAAA,IAAA,CAEJnF,GAAAA,GAAM,GAAA,IAAA,CACNI,IAAAA,GAAO,GAAA,IAAA,CAEPse,KAAAA;IAAAA;IAAAA,OAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAIAC,WAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAIAtb,IAAAA,IAAAA,IAAAA,CACAub,YAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAIA1J,SAAAA,GAAY1V,EAAEwV,MAAAA,CAAO,OAAA;oBAAA,QACjB6J,IAAAA,CAAK5U,MAAAA;oBAAAA,WACF;oBAAA,WAAA;gBAAA,IAAA,IAAA,CAKP6U,OAAAA,IAAAA,IAAAA,CAEAC,KAAAA,GAAQF,IAAAA,CAAK3J,SAAAA,CAAUvV,aAAAA,CAAc,WAAA,IAAA,CACrCqf,aAAAA,GAAgBH,IAAAA,CAAK3J,SAAAA,CAAUvV,aAAAA,CAAc,qBAAA,IAAA,CAE7CsK,MAAAA,CAAOgV,gBAAAA,CAAiB,cAAc;oBAAA,EACrCH,OAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAKFC,IAAAA,KAAAA;gBACDF,IAAAA,CAAKrQ,KAAAA,IAAAA,IAAAA,CACF0G,SAAAA,CAAU1L,YAAAA,CAAa,oBAAoBqV,IAAAA,CAAKrQ,KAAAA,GAAAA,IAEnDqQ,IAAAA,CAAKJ,eAAAA,GAAAA,aACYI,IAAAA,CAAKN,UAAAA,GAAAA,cAAsBM,IAAAA,CAAKP,SAAAA,GAExCO,IAAAA,CAAKP,SAAAA,GAAAA,aAAoBO,IAAAA,CAAKN,UAAAA,GAAAA,aAAAA,IAAAA,CAErCQ,KAAAA,CAAM5J,SAAAA,GAAY4J,GAAAA,IAAAA,CAClBC,aAAAA,CAAc7J,SAAAA,GAAY,IAAA,IAAA,CAE1BqJ,UAAAA,CAAWlV,GAAAA,CAAI,SAAC4V,CAAAA,EAAKzY,CAAAA;oBAAAA,IACnB0B,IAAQgX,EAAKd,MAAAA,CAAO5X,EAAAA,IAAM,SAC5B/B,IAA0B,MAAlBwa,EAAIE,SAAAA,IAAmBF,EAAIE,SAAAA,GAAYF,EAAIE,SAAAA,GAAYF,EAAIxa,KAAAA,EAEnE2a,IAAK7f,EAAEwV,MAAAA,CAAO,MAAA;wBAAA,QAAA;4BAAA,cAAA,eAEW7M;wBAAAA;wBAAAA,WAAAA,qCAE6B,CAAA,MAAVzD,KAAeA,IAAQA,IAAQ,EAAA,IAAA,qBAC3Ewa,CAAAA,EAAIH,KAAAA,GAAQG,EAAIH,KAAAA,GAAQ,EAAA;oBAAA;oBAAA,EAGvBC,aAAAA,CAAc5f,WAAAA,CAAYigB;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAK5BlV,IAAQ0U,IAAAA,CAAK3J,SAAAA,CAAUoK,WAAAA;gBAAAA,IAAAA,CAEtBtf,GAAAA,GAAM6e,IAAAA,CAAK1Z,CAAAA,GAAI0Z,IAAAA,CAAK3J,SAAAA,CAAUqK,YAAAA,GAChCxB,iCAAAA,IAAAA,CACE3d,IAAAA,GAAOye,IAAAA,CAAK1T,CAAAA,GAAIhB,IAAM;gBAAA,IACvBqV,IAAUX,IAAAA,CAAK5U,MAAAA,CAAOqV,WAAAA,GAAcnV,GAEpCsV,IAAUZ,IAAAA,CAAK3J,SAAAA,CAAUvV,aAAAA,CAAc;gBAAA,IAExCkf,IAAAA,CAAKze,IAAAA,GAAO,GAAA,EACNrB,KAAAA,CAAMqB,IAAAA,GAAAA,gBAAAA,KAA0Bye,IAAAA,CAAKze,IAAAA,GAAAA,OAAAA,IAAAA,CACxCA,IAAAA,GAAO;qBACN,IAAGye,IAAAA,CAAKze,IAAAA,GAAOof,GAAS;oBAAA,IAE1BE,IAAAA,gBADQb,CAAAA,IAAAA,CAAKze,IAAAA,GAAOof,CAAAA,IAAAA;oBAAAA,EAEhBzgB,KAAAA,CAAMqB,IAAAA,GAAOsf,GAAAA,IAAAA,CAEhBtf,IAAAA,GAAOof;gBAAAA,OAAAA,EAEJzgB,KAAAA,CAAMqB,IAAAA,GAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAIN+K,CAAAA,EAAGhG,CAAAA;gBAAAA,IAAG4Z,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAAYP,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA,EAAAA,EAAiBhQ,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAAA;gBAAS,IAAA,CAChD8P,SAAAA,GAAYS,EAAMrH,IAAAA,EAAAA,IAAAA,CAClB6G,UAAAA,GAAaQ,EAAMra,KAAAA,EAAAA,IAAAA,CACnB8Z,UAAAA,GAAaA,GAAAA,IAAAA,CACbrT,CAAAA,GAAIA,GAAAA,IAAAA,CACJhG,CAAAA,GAAIA,GAAAA,IAAAA,CACJsZ,eAAAA,GAAkBM,EAAMY,UAAAA,IAAc,GAAA,IAAA,CACtCnR,KAAAA,GAAQA,GAAAA,IAAAA,CACRoR,OAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAIA1K,SAAAA,CAAUnW,KAAAA,CAAMiB,GAAAA,GAAM,OAAA,IAAA,CACtBkV,SAAAA,CAAUnW,KAAAA,CAAMqB,IAAAA,GAAO,OAAA,IAAA,CACvB8U,SAAAA,CAAUnW,KAAAA,CAAMgL,OAAAA,GAAU;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,CAI1BmL,SAAAA,CAAUnW,KAAAA,CAAMiB,GAAAA,GAAM6e,IAAAA,CAAK7e,GAAAA,GAAM,MAAA,IAAA,CACjCkV,SAAAA,CAAUnW,KAAAA,CAAMqB,IAAAA,GAAOye,IAAAA,CAAKze,IAAAA,GAAO,MAAA,IAAA,CACnC8U,SAAAA,CAAUnW,KAAAA,CAAMgL,OAAAA,GAAU;YAAA;QAAA;KAAA,GAAA;AAAA,KAAA,YAAA,cAAA,OAAA,UAAA,YAAA,OAAA,OAAA,QAAA,GAAA,SAAA,CAAA;IAAA,OAAA,OAAA;AAAA,IAAA,SAAA,CAAA;IAAA,OAAA,KAAA,cAAA,OAAA,UAAA,EAAA,WAAA,KAAA,UAAA,MAAA,OAAA,SAAA,GAAA,WAAA,OAAA;AAAA,GV5H3B8V,mBAAAA;IAAAA,cACS;IAAA,MACN;IAAA,QACE;IAAA,KACH;IAAA,QACG;IAAA,QACA;IAAA,OACD;IAAA,eACM;IAAA,QACL;IAAA,SACC;IAAA,OACF;IAAA,MACD;IAAA,cACM;IAAA,aACD;AAAA,GA8BDvX,WAAW,SAACH,CAAAA;IAAAA,OAEpB,4BAA6BY,IAAAA,CAAKZ,KAAAA,8BACE2X,IAAAA,CAAK3X,GAC1CmB,GAAAA,CAAI,SAAC6B,CAAAA,EAAG1E,CAAAA;QAAAA,OAAa,MAANA,IAAUtC,OAAOgH,GAAGvC,QAAAA,CAAS,MAAM;IAAA,GAClDlB,MAAAA,CAAO,SAACqY,CAAAA,EAAGC,CAAAA;QAAAA,OAAAA,KAAUD,IAAIC;IAAAA,KAErBH,gBAAAA,CAAiB1X,EAAAA,IAAUA;AAAAA,GAAAA,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,IAAAA,CAAAA,GAAAA,IAAAA,CAAAA,GAAAA,IAAAA,KAAAA;QAAAA,IAAAA;YAAAA,IAAAA,IAAAA,GAAAA,IAAAA,CAAAA,CAAAA,OAAAA,QAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAAA,AAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,KAAAA,CAAAA,EAAAA,IAAAA,CAAAA,EAAAA,KAAAA,GAAAA,CAAAA,KAAAA,EAAAA,MAAAA,KAAAA,CAAAA,GAAAA,IAAAA,CAAAA;QAAAA,EAAAA,OAAAA,GAAAA;YAAAA,IAAAA,CAAAA,GAAAA,IAAAA;QAAAA,SAAAA;YAAAA,IAAAA;gBAAAA,CAAAA,KAAAA,EAAAA,MAAAA,IAAAA,EAAAA,MAAAA;YAAAA,SAAAA;gBAAAA,IAAAA,GAAAA,MAAAA;YAAAA;QAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA,OAAAA;QAAAA,IAAAA,OAAAA,QAAAA,IAAAA,OAAAA,IAAAA,OAAAA,EAAAA,GAAAA;QAAAA,MAAAA,IAAAA,UAAAA;IAAAA;AAAAA,KAAAA,YAAAA,cAAAA,OAAAA,UAAAA,YAAAA,OAAAA,OAAAA,QAAAA,GAAAA,SAAAA,CAAAA;IAAAA,OAAAA,OAAAA;AAAAA,IAAAA,SAAAA,CAAAA;IAAAA,OAAAA,KAAAA,cAAAA,OAAAA,UAAAA,EAAAA,WAAAA,KAAAA,UAAAA,MAAAA,OAAAA,SAAAA,GAAAA,WAAAA,OAAAA;AAAAA,GC9CtB6F,mBAAmB,GAC1BT,eAAe,GACfjB,kBAAkB,IACXE,YAAY,IACnBc,kBAAkB,WAClBb,YAAY,WAkmBPwT,cAAAA;IAAAA,KACH,SAACxQ,CAAAA;QAAAA,IACHyQ,IAAAA,KAAAA;QACiB,WAAlBzQ,EAAKwB,QAAAA,IAAAA,CAAAA,IACUxB,EAAKqB,YAAAA,CAAa,cAAA,IAC5BrB,EAAKmB,UAAAA,CAAW,EAAA,AAAA;QAAA,IAEpBuP,IAAU1Q,EAAK+C,SAAAA;QAAAA,OAAAA,EACXzT,KAAAA,CAAMsE,IAAAA,GAAO,WAAA,EACbtE,KAAAA,CAAMgL,OAAAA,GAAU,OAErBmW,KAAAA,EACM1W,YAAAA,CAAa,aAAa0W,IAE5BC;IAAAA;IAAAA,KAGD,SAAC1Q,CAAAA;QAAAA,IACHyQ,IAAAA,KAAAA;QACiB,aAAlBzQ,EAAKwB,QAAAA,IAAAA,CAAAA,IACUxB,EAAKqB,YAAAA,CAAa,cAAA,IAC5BrB,EAAKmB,UAAAA,CAAW,EAAA,AAAA;QAAA,IAEpBuP,IAAU1Q,EAAK+C,SAAAA,IACf5O,IAAS6L,EAAKqB,YAAAA,CAAa,MAC3BzN,IAAOoM,EAAKqB,YAAAA,CAAa;QAAA,OAAA,EACrBtH,YAAAA,CAAa,KAAKf,SAAS7E,KAAU8Z,wBAAAA,EACrClU,YAAAA,CAAa,QAAQnG,IAAAA,EACrBtE,KAAAA,CAAMgL,OAAAA,GAAU,OAErBmW,KAAAA,EACM1W,YAAAA,CAAa,aAAa0W,IAE5BC;IAAAA;IAAAA,aAGO,SAAC1Q,CAAAA;QAAAA,IACXyQ,IAAAA,KAAAA;QACiB,aAAlBzQ,EAAKwB,QAAAA,IAAAA,CAAAA,IACUxB,EAAKqB,YAAAA,CAAa,cAAA,IAC5BrB,EAAKmB,UAAAA,CAAW,EAAA,AAAA;QAAA,IAEpBuP,IAAU1Q,EAAK+C,SAAAA,IACf5O,IAAS6L,EAAKqB,YAAAA,CAAa,MAC3BzN,IAAOoM,EAAKqB,YAAAA,CAAa;QAAA,OAAA,EACrBtH,YAAAA,CAAa,KAAKf,SAAS7E,KAAU8Z,wBAAAA,EACrClU,YAAAA,CAAa,QAAQnG,IAAAA,EACrBtE,KAAAA,CAAMgL,OAAAA,GAAU,OAErBmW,KAAAA,EACM1W,YAAAA,CAAa,aAAa0W,IAE5BC;IAAAA;AAAAA,GAIEC,gBAAAA;IAAAA,KACH,SAAC3Q,CAAAA,EAAM0Q,CAAAA;QAAAA,IACTD,IAAAA,KAAAA;QACiB,WAAlBzQ,EAAKwB,QAAAA,IAAAA,CAAAA,IACUxB,EAAKqB,YAAAA,CAAa,cAAA,IAC5BrB,EAAKmB,UAAAA,CAAW,EAAA,AAAA;QAAA,IAEpByP,IAAAA;YAAc;YAAK;YAAK;YAAS;SAAA;QAAA,OAC9B5G,MAAAA,CAAOhK,EAAK4Q,UAAAA,EACjBtI,MAAAA,CAAO,SAAA,CAAA;YAAA,OAAQsI,EAAWrI,QAAAA,CAASsI,EAAK5I,IAAAA,KAAS4I,EAAKC,SAAAA;QAAAA,GACtDjX,GAAAA,CAAI,SAAA,CAAA;YAAA,EACIE,YAAAA,CAAa8W,EAAK5I,IAAAA,EAAM4I,EAAKE,SAAAA;QAAAA,IAGpCN,KAAAA,EACM1W,YAAAA,CAAa,aAAa0W;IAAAA;IAAAA,KAI7B,SAACzQ,CAAAA,EAAM0Q,CAAAA;QAAAA,IACTD,IAAAA,KAAAA;QACiB,aAAlBzQ,EAAKwB,QAAAA,IAAAA,CAAAA,IACUxB,EAAKqB,YAAAA,CAAa,cAAA,IAC5BrB,EAAKmB,UAAAA,CAAW,EAAA,AAAA;QAAA,IAEpByP,IAAAA;YAAc;YAAM;SAAA;QAAA,OACjB5G,MAAAA,CAAOhK,EAAK4Q,UAAAA,EACjBtI,MAAAA,CAAO,SAAA,CAAA;YAAA,OAAQsI,EAAWrI,QAAAA,CAASsI,EAAK5I,IAAAA,KAAS4I,EAAKC,SAAAA;QAAAA,GACtDjX,GAAAA,CAAI,SAAA,CAAA;YAAA,EACIE,YAAAA,CAAa8W,EAAK5I,IAAAA,EAAM4I,EAAKE,SAAAA;QAAAA,IAGpCN,KAAAA,EACM1W,YAAAA,CAAa,aAAa0W;IAAAA;IAAAA,aAIrB,SAACzQ,CAAAA,EAAM0Q,CAAAA;QAAAA,IACjBD,IAAAA,KAAAA;QACiB,aAAlBzQ,EAAKwB,QAAAA,IAAAA,CAAAA,IACUxB,EAAKqB,YAAAA,CAAa,cAAA,IAC5BrB,EAAKmB,UAAAA,CAAW,EAAA,AAAA;QAAA,IAEpByP,IAAAA;YAAc;YAAM;SAAA;QAAA,OACjB5G,MAAAA,CAAOhK,EAAK4Q,UAAAA,EACjBtI,MAAAA,CAAO,SAAA,CAAA;YAAA,OAAQsI,EAAWrI,QAAAA,CAASsI,EAAK5I,IAAAA,KAAS4I,EAAKC,SAAAA;QAAAA,GACtDjX,GAAAA,CAAI,SAAA,CAAA;YAAA,EACIE,YAAAA,CAAa8W,EAAK5I,IAAAA,EAAM4I,EAAKE,SAAAA;QAAAA,IAGpCN,KAAAA,EACM1W,YAAAA,CAAa,aAAa0W;IAAAA;AAAAA,GAAAA,mBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,IAAAA,CAAAA,GAAAA,IAAAA,CAAAA,GAAAA,IAAAA,KAAAA;QAAAA,IAAAA;YAAAA,IAAAA,IAAAA,GAAAA,IAAAA,CAAAA,CAAAA,OAAAA,QAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAAA,AAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,KAAAA,CAAAA,EAAAA,IAAAA,CAAAA,EAAAA,KAAAA,GAAAA,CAAAA,KAAAA,EAAAA,MAAAA,KAAAA,CAAAA,GAAAA,IAAAA,CAAAA;QAAAA,EAAAA,OAAAA,GAAAA;YAAAA,IAAAA,CAAAA,GAAAA,IAAAA;QAAAA,SAAAA;YAAAA,IAAAA;gBAAAA,CAAAA,KAAAA,EAAAA,MAAAA,IAAAA,EAAAA,MAAAA;YAAAA,SAAAA;gBAAAA,IAAAA,GAAAA,MAAAA;YAAAA;QAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA,OAAAA;QAAAA,IAAAA,OAAAA,QAAAA,IAAAA,OAAAA,IAAAA,OAAAA,EAAAA,GAAAA;QAAAA,MAAAA,IAAAA,UAAAA;IAAAA;AAAAA,KCrtBxBhP,gBAAgB,KAChBU,gBAAgB,KAChB1B,uBAAuBgB,eACvB4C,sBAAsB,KAEtBhE,aAAa,UAAA,mBAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,IAAA,IAAA,EAAA,EAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,KAAA;QAAA,IAAA;YAAA,IAAA,IAAA,GAAA,IAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,CAAA,IAAA,AAAA,CAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,GAAA,CAAA,KAAA,EAAA,MAAA,KAAA,CAAA,GAAA,IAAA,CAAA;QAAA,EAAA,OAAA,GAAA;YAAA,IAAA,CAAA,GAAA,IAAA;QAAA,SAAA;YAAA,IAAA;gBAAA,CAAA,KAAA,EAAA,MAAA,IAAA,EAAA,MAAA;YAAA,SAAA;gBAAA,IAAA,GAAA,MAAA;YAAA;QAAA;QAAA,OAAA;IAAA;IAAA,OAAA,SAAA,CAAA,EAAA,CAAA;QAAA,IAAA,MAAA,OAAA,CAAA,IAAA,OAAA;QAAA,IAAA,OAAA,QAAA,IAAA,OAAA,IAAA,OAAA,EAAA,GAAA;QAAA,MAAA,IAAA,UAAA;IAAA;AAAA,KCHpBgD,SAAAA;IAAAA,MACC;IAAA,QACE;IAAA,QAEA;IAAA,SACC;IAAA,WACE;AAAA,GQVCmC,UAAU,2sDAAA,iBAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,EAAA,MAAA,EAAA,IAAA;YAAA,IAAA,IAAA,CAAA,CAAA,EAAA;YAAA,EAAA,UAAA,GAAA,EAAA,UAAA,IAAA,CAAA,GAAA,EAAA,YAAA,GAAA,CAAA,GAAA,WAAA,KAAA,CAAA,EAAA,QAAA,GAAA,CAAA,CAAA,GAAA,OAAA,cAAA,CAAA,GAAA,EAAA,GAAA,EAAA;QAAA;IAAA;IAAA,OAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA;QAAA,OAAA,KAAA,EAAA,EAAA,SAAA,EAAA,IAAA,KAAA,EAAA,GAAA,IAAA;IAAA;AAAA,KCUFwL,YAAAA;IAAAA,SAAAA,EACRxW,CAAAA,EAAQ6C,CAAAA;QAAAA,IAAAA,kBAAAA,IAAAA,EAAAA,IAAAA,IAETtI,UAAUsI,IAAAA,IAAAA,CAEf7C,MAAAA,GAA2B,YAAA,OAAXA,IAClBrL,SAASe,aAAAA,CAAcsK,KACvBA,GAAAA,CAEG4U,CAAAA,IAAAA,CAAK5U,MAAAA,YAAkByW,WAAAA,GAAAA,MACtB,IAAIC,MAAM;QAAA,IAAA,CAGZC,YAAAA,GAAe9T,GAAAA,IAAAA,CAEfiS,KAAAA,GAAQjS,EAAQiS,KAAAA,IAAS,IAAA,IAAA,CACzB9f,IAAAA,GAAO6N,EAAQ7N,IAAAA,IAAQ,IAAA,IAAA,CAEvBkd,QAAAA,GAAW0C,IAAAA,CAAKgC,WAAAA,CAAY/T,EAAQV,IAAAA,GAAAA,IAAAA,CACpCA,IAAAA,GAAOyS,IAAAA,CAAKiC,gBAAAA,CAAiBjC,IAAAA,CAAK1C,QAAAA,GAAAA,IAAAA,CAElCkC,MAAAA,GAASQ,IAAAA,CAAKkC,cAAAA,CAAejU,EAAQuR,MAAAA,EAAQQ,IAAAA,CAAK5f,IAAAA,GAAAA,IAAAA,CAElDiZ,MAAAA,GAAAA;YAAAA,aACS;YAAA,YACD;YAAA,aACCpL,EAAQkU,WAAAA,IAAe;YAAA,SAAA,KACC,MAApBlU,EAAQmU,OAAAA,GAA2BnU,EAAQmU,OAAAA,GAAU;YAAA,iBACrDnU,EAAQoU,eAAAA,IAAmB;QAAA,GAAA,IAAA,CAGxCC,QAAAA,GAAWC,KAAKC,KAAAA,CAAMD,KAAKE,SAAAA,CAAUpE;QAAAA,IACtCjb,IAAI4c,IAAAA,CAAKsC,QAAAA;QAAAA,IAAAA,CACRI,WAAAA,CAAYzU,IACb+R,IAAAA,CAAKE,KAAAA,CAAM/b,MAAAA,IAAAA,CAAAA,EAAYd,WAAAA,GAAc,CAAA,GACrC2c,IAAAA,CAAK3G,MAAAA,CAAOsJ,UAAAA,IAAYvf,CAAAA,EAAEM,YAAAA,GAAe,CAAA,GAAA,IAAA,CACxCkf,SAAAA,GAAY3U,EAAQ5H,MAAAA,IAAUjD,EAAEyf,UAAAA,EAAAA,IAAAA,CAEhCC,KAAAA,GAAAA,CAAAA,GAAAA,IAAAA,CACA7U,OAAAA,GAAAA,CAAAA,GAAAA,IAAAA,CAEA8U,WAAAA,GAAczE,2BAEhB0B,IAAAA,CAAK3G,MAAAA,CAAO8I,WAAAA,IAAAA,CAAAA,IAAAA,CACTa,QAAAA,GAAAA,EAAAA,AAAAA,GAAAA,IAAAA,CAGDC,SAAAA,CAAUhV;IAAAA;IAAAA,OAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGJV,CAAAA;gBAAAA,OACJA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGSA,CAAAA;gBAAAA,OACTA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGOiS,CAAAA,EAAQpf,CAAAA;gBAAAA,IAChB8iB,IAAAA,EAAAA;gBAAAA,OAAAA,AAAAA,CAAAA,IAAAA,AACI1D,CAAAA,KAAAA,EAAAA,AAAAA,EAAc/a,MAAAA,CAAO4a,cAAAA,CAAejf,EAAAA,CAAAA,EACvC+iB,OAAAA,CAAQ,SAACxe,CAAAA;oBAAAA,IACT2E,IAAQG,SAAS9E;oBACnBqF,aAAaV,KAAAA,EAGJzB,IAAAA,CAAKyB,KAAAA,QAFT8Z,IAAAA,CAAK,MAAMze,IAAS;gBAAA,IAKvBue;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EASH7c,IAAS2Z,IAAAA,CAAK4C,SAAAA;gBAAAA,IAAAA,CACbC,UAAAA,GAAaxc,GAAAA,IAAAA,CACbA,MAAAA,GAASA,IAAS5C,eAAeuc,IAAAA,CAAKsC,QAAAA,GAAAA,IAAAA,CAGtCe,WAAAA,GAAc;oBAAA,OAAMC,EAAKC,IAAAA,CAAAA,CAAK;gBAAA,GAC/BC,kBAAAA,CAAAA,IAAAA,CACEC,cAAAA,GAAiB,IAAID,eAAexD,IAAAA,CAAKqD,WAAAA,GAAAA,IAAAA,CACzCI,cAAAA,CAAeC,OAAAA,CAAQ1D,IAAAA,CAAK5U,MAAAA,CAAAA,GAAAA,OAE3BgV,gBAAAA,CAAiB,UAAUJ,IAAAA,CAAKqD,WAAAA,GAAAA,OAChCjD,gBAAAA,CAAiB,qBAAqBJ,IAAAA,CAAKqD,WAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAI9CrD,IAAAA,CAAKyD,cAAAA,IAAgBzD,IAAAA,CAAKyD,cAAAA,CAAeE,UAAAA,IAAAA,OACtCC,mBAAAA,CAAoB,UAAU5D,IAAAA,CAAKqD,WAAAA,GAAAA,OACnCO,mBAAAA,CAAoB,qBAAqB5D,IAAAA,CAAKqD,WAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAKhDQ,aAAAA,IAAAA,IAAAA,CACAC,WAAAA,IAAAA,IAAAA,CACAhE,WAAAA,IAAAA,IAAAA,CAEAyD,IAAAA,CAAAA,CAAK,GAAA,CAAO;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,CAKZnY,MAAAA,CAAOkL,SAAAA,GAAY;gBAAA,IAEpB3K,IAAAA;oBAAAA,QACKqU,IAAAA,CAAK5U,MAAAA;oBAAAA,WACF;gBAAA;gBAGT4U,IAAAA,CAAK+D,gBAAAA,IAAAA,CAAAA,EACF1hB,MAAAA,GAAAA;oBAAWiJ,OAAO0U,IAAAA,CAAK+D,gBAAAA,GAAmB;gBAAA,CAAA,GAAA,IAAA,CAG3C1N,SAAAA,GAAY1V,EAAEwV,MAAAA,CAAO,OAAOxK;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAI5BqY,GAAAA,GAAM,IAAIzE,OAAAA;oBAAAA,QACNS,IAAAA,CAAK3J,SAAAA;oBAAAA,QACL2J,IAAAA,CAAKR,MAAAA;gBAAAA,IAAAA,IAAAA,CAETyE,WAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAKDC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAuBC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EACvBD;gBAAAA,KAAmBziB,SAASue,IAAAA,CAAK5U,MAAAA,KAAAA,CAAAA,IAAAA,CAIhC0Y,WAAAA,IAAAA,IAAAA,CAEAM,IAAAA,CAAKF,IAAAA,IAAAA,CACLG,aAAAA,IAAAA,IAAAA,CACAC,eAAAA,IAAAA,IAAAA,CAEAC,UAAAA,CAAWpB,OAAAA,CAAQ,SAAA,CAAA;oBAAA,OAAKjC,EAAErB,KAAAA,CAAMS,EAAKkE,QAAAA;gBAAAA,IAAAA,IAAAA,CAErCC,MAAAA,CAAOzE,IAAAA,CAAKuE,UAAAA,EAAAA,CAAY,IAE1BJ,KAAAA,CAAAA,IAAAA,CACG5W,IAAAA,GAAOyS,IAAAA,CAAK1C,QAAAA,EAAAA,WACN;oBAAA,EAAYoH,MAAAA,CAAOpE,EAAK/S,IAAAA;gBAAAA,GAASyS,IAAAA,CAAK+C,WAAAA,CAAAA,GAAAA,IAAAA,CAG7C4B,YAAAA,IAAAA,IAAAA,CAEAC,eAAAA,CAAgBT,EAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAMhBU,SAAAA,GAAYziB,uBAAuB4d,IAAAA,CAAK5U,MAAAA,GAAAA,IAAAA,CACxCE,KAAAA,GAAQ0U,IAAAA,CAAK6E,SAAAA,GAAYlhB,cAAcqc,IAAAA,CAAKsC,QAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAI9CtC,IAAAA,CAAKlK,GAAAA,IAAAA,IAAAA,CACFO,SAAAA,CAAUrB,WAAAA,CAAYgL,IAAAA,CAAKlK,GAAAA;gBAAAA,IAE7B1S,IAAI4c,IAAAA,CAAKsC,QAAAA;gBAAAA,IAAAA,CAERxM,GAAAA,GAAM3K,iBACV6U,IAAAA,CAAK3J,SAAAA,EACL,sBACA2J,IAAAA,CAAK6E,SAAAA,EACL7E,IAAAA,CAAK6C,UAAAA,GAAAA,IAAAA,CAEDtS,OAAAA,GAAUhF,YAAYyU,IAAAA,CAAKlK,GAAAA,GAE7BkK,IAAAA,CAAKE,KAAAA,CAAM/b,MAAAA,IAAAA,CAAAA,IAAAA,CACR2gB,OAAAA,GAAU/W,SACd,SACA3K,EAAEE,OAAAA,CAAQ/B,IAAAA,EACV6B,EAAEE,OAAAA,CAAQnC,GAAAA,EACV6e,IAAAA,CAAKE,KAAAA,EAAAA;oBAAAA,UAEM9c,EAAE2hB,aAAAA;oBAAAA,MACN;oBAAA,IACF3hB,EAAE2hB,aAAAA;gBAAAA,EAAAA;gBAAAA,IAKL5jB,IAAMgC,aAAaC;gBAAAA,IAAAA,CAClBohB,QAAAA,GAAW/Y,aACfuU,IAAAA,CAAK5f,IAAAA,GAAO,0BAAA,eACCoD,cAAcJ,KAAAA,OAAOjC,IAAAA,MAGhC6e,IAAAA,CAAK3G,MAAAA,CAAOsJ,UAAAA,IAAAA,CAAAA,KACP3C,IAAAA,CAAK3Z,MAAAA,GAASjD,EAAEG,QAAAA,CAAS1B,MAAAA,EAAAA,IAAAA,CAC3BmjB,UAAAA,GAAavZ,aACjB,gBAAA,eACajI,cAAcJ,KAAAA,OAAOjC,IAAAA,IAAAA,GAIjC6e,IAAAA,CAAKE,KAAAA,CAAM/b,MAAAA,IAAAA,IAAAA,CAAe2R,GAAAA,CAAIvV,WAAAA,CAAYyf,IAAAA,CAAK8E,OAAAA,GAAAA,IAAAA,CAC7ChP,GAAAA,CAAIvV,WAAAA,CAAYyf,IAAAA,CAAKwE,QAAAA,GACvBxE,IAAAA,CAAK3G,MAAAA,CAAOsJ,UAAAA,IAAAA,IAAAA,CAAmB7M,GAAAA,CAAIvV,WAAAA,CAAYyf,IAAAA,CAAKgF,UAAAA,GAAAA,IAAAA,CAElDC,eAAAA,CAAgBzhB,cAAcJ,IAAID,aAAaC;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGrCkJ,CAAAA,EAAGhG,CAAAA;gBAAAA,IAAAA,CACb0d,GAAAA,CAAI/Y,MAAAA,GAAAA;oBAAAA,GACLqB;oBAAAA,GACAhG;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAIoBie,UAAAA,GAAa,IAAIW;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAEnC3X,CAAAA;gBACFA,KAAAA,QACK6Q,KAAAA,CAAM,uBAAA,IAAA,CAEV7Q,IAAAA,GAAOyS,IAAAA,CAAKgC,WAAAA,CAAYzU,IAAAA,IAAAA,CACxB6W,IAAAA,IAAAA,IAAAA,CACAK,MAAAA,CAAOzE,IAAAA,CAAKuE,UAAAA,EAAYvE,IAAAA,CAAK3G,MAAAA,CAAO+I,OAAAA,GAAAA,IAAAA,CACpCuC,YAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAGCJ,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAWvE,IAAAA,CAAKuE,UAAAA,EAAYnC,IAAAA,CAAAA,CAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,AAAAA,KAAAA,SAAAA,CAAAA,EAC/BpC;gBAAAA,IAAAA,CAAK3G,MAAAA,CAAO8I,WAAAA,IAAAA,IAAAA,CAETa,QAAAA,CAASvY,GAAAA,CAAI,SAAA,CAAA;oBAAA,OAAK/B,EAAE6B,UAAAA,CAAWyK,WAAAA,CAAYtM;gBAAAA;gBAAAA,IAG7CoM,IAAAA,EAAAA;gBAAAA,EAEOqO,OAAAA,CAAQ,SAAA,CAAA;oBAAA,IACErO,EAAkBrQ,MAAAA,CAAOyc,EAAEwD,MAAAA,CAAOtC;gBAAAA,IAEpDtN,EAAkB3Q,MAAAA,GAAS,IAAA,CAAA,iBACZ6b,IAAAA,CAAK3J,SAAAA,EAAW2J,IAAAA,CAAKlK,GAAAA,EAAKhB,IAAAA,WAChC;oBAAA,EACCqO,OAAAA,CAAQ,SAAA,CAAA;wBAAA,OAAKjC,EAAEiE,IAAAA;oBAAAA,IAAAA,EACrBC,SAAAA;gBAAAA,GACH7G,2BAAAA,IAAAA,CAAAA,EAEQ4E,OAAAA,CAAQ,SAAA,CAAA;oBAAA,OAAKjC,EAAEiE,IAAAA;gBAAAA,IAAAA,IAAAA,CACrBC,SAAAA,EAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAKHpF,IAAAA,CAAK3G,MAAAA,CAAO8I,WAAAA,IAAAA,CAAAA,IAAAA,CACTf,WAAAA,IAAAA,IAAAA,CACAiE,SAAAA,EAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAMSlB,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EACXnE;gBAAAA,IAAAA,CAAK3G,MAAAA,CAAO8I,WAAAA,IAEbgC,KAAAA,CAAAA,IAAAA,CACGmB,WAAAA,IAAAA,IAAAA,CAEAC,UAAAA,GAAAA;oBAAAA,IACEvF,IAAAA,CAAKwF,UAAAA,CAAWC,IAAAA,CAAKzF,IAAAA;oBAAAA,IACrBA,IAAAA,CAAK0F,WAAAA,CAAYD,IAAAA,CAAKzF,IAAAA;oBAAAA,IACtBA,IAAAA,CAAK2F,SAAAA,CAAUF,IAAAA,CAAKzF,IAAAA;oBAAAA,IACpBA,IAAAA,CAAK4F,YAAAA,CAAaH,IAAAA,CAAKzF,IAAAA;oBAAAA,IACvBA,IAAAA,CAAK6F,WAAAA,CAAYJ,IAAAA,CAAKzF,IAAAA;gBAAAA,GAAAA,SAGpBI,gBAAAA,CAAiB,WAAW,SAAC0F,CAAAA;oBAClClkB,oBAAoBmkB,EAAK1P,SAAAA,KAAAA,CAAAA,IACvByP,KAAKhkB,OAAOkkB,KAAAA,EACbD,EAAKR,UAAAA,CAAWO,EAAEG,OAAAA,CAAAA,IAAAA,EACfV,UAAAA,CAAWO,EAAEG,OAAAA,CAAAA,EAAAA;gBAAAA,EAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IA2BlBC,IAAWrQ,iBAAiBmK,IAAAA,CAAKlK,GAAAA;gBAAAA,aACxBkK,IAAAA,CAAKE,KAAAA,IAAS,SAAA;oBAAUgG;iBAAAA;YAAAA;QAAAA;KAAAA,GAAAA;AAAAA,KAAAA,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,EAAAA,UAAAA,GAAAA,EAAAA,UAAAA,IAAAA,CAAAA,GAAAA,EAAAA,YAAAA,GAAAA,CAAAA,GAAAA,WAAAA,KAAAA,CAAAA,EAAAA,QAAAA,GAAAA,CAAAA,CAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA;QAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,OAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA;IAAAA;AAAAA,KAAAA,SAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,SAAAA,KAAAA,CAAAA,IAAAA,SAAAA,SAAAA,AAAAA;IAAAA,IAAAA,IAAAA,OAAAA,wBAAAA,CAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA,cAAAA,CAAAA;QAAAA,OAAAA,SAAAA,IAAAA,KAAAA,IAAAA,EAAAA,GAAAA,GAAAA;IAAAA;IAAAA,IAAAA,WAAAA,GAAAA,OAAAA,EAAAA,KAAAA;IAAAA,IAAAA,IAAAA,EAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA,OAAAA,EAAAA,IAAAA,CAAAA;AAAAA,GC3TlBC,mBAAAA,SAAAA,CAAAA;IAAAA,SAAAA,EACR/a,CAAAA,EAAQO,CAAAA;QAAAA,OAAAA,kBAAAA,IAAAA,EAAAA,IAAAA,6BAAAA,IAAAA,EAAAA,AAAAA,CAAAA,EAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACbP,GAAQO;IAAAA;IAAAA,OAAAA,YAAAA,GAAAA,IAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGLA,CAAAA;gBAAAA,OAAAA,EAAAA,SAAAA,CAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,SAAAA,GAAAA,aAAAA,IAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACOA,IAAAA,IAAAA,CAEX0N,MAAAA,CAAO+M,cAAAA,GAAAA,AAAkBza,CAAAA,EAAK0a,cAAAA,IAAAA,CAAAA,CAAAA,EAAsBD,cAAAA,EAAAA,IAAAA,CACpD/M,MAAAA,CAAOiN,SAAAA,GAAY3a,EAAK2a,SAAAA,IAAa,IAAA,IAAA,CACrCjN,MAAAA,CAAOkN,eAAAA,GAAkB5a,EAAK4a,eAAAA,IAAmB;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,IAAA,IAAA,EAIlDC,IAAIxG,IAAAA,CAAK8C,KAAAA,EACTwD,IAAYtG,IAAAA,CAAK3G,MAAAA,CAAOiN,SAAAA;gBAAAA,EAC1BG,WAAAA,GAAAA,EAAAA;gBAAAA,IAEEC,IAAY1G,IAAAA,CAAKzS,IAAAA,CAAKqP,MAAAA,CAAOnS,GAAAA,CAAI,SAACzD,CAAAA,EAAOY,CAAAA;oBAAAA,IACxC+e,IAAQ;oBAAA,OAAA,EACPpZ,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAA,CAAA;wBAAA,KACbqb,EAAElL,MAAAA,CAAOhT,EAAAA;oBAAAA,IAAAA;wBAEX+e;wBAAO3f;qBAAAA;gBAAAA,GACbkS,MAAAA,CAAO,SAAA,CAAA;oBAAA,OAAcrV,CAAAA,CAAE,EAAA,IAAM;gBAAA,IAE5B+iB,IAASF;gBAAAA,IACVA,EAAUviB,MAAAA,GAASmiB,GAAW;oBAAA,EAEtBO,IAAAA,CAAK,SAAC7d,CAAAA,EAAGa,CAAAA;wBAAAA,OAAeA,CAAAA,CAAE,EAAA,GAAKb,CAAAA,CAAE,EAAA;oBAAA,IAAA,IAElC0d,EAAU5f,KAAAA,CAAM,GAAGwf,IAAU;oBAAA,IAGlCQ,IAAiB;oBAFLJ,EAAU5f,KAAAA,CAAMwf,IAAU,GAGhC7b,GAAAA,CAAI,SAAA,CAAA;wBAAA,KAAwB5G,CAAAA,CAAE,EAAA;oBAAA,IAAA,EACjCgE,IAAAA,CAAAA;wBAAMif;wBAAgB;qBAAA,GAAA,IAAA,CACxBtH,MAAAA,CAAO8G,IAAU,EAAA,GAAK;gBAAA;gBAAA,EAG1B1J,MAAAA,GAAAA,EAAAA,EAAAA,EACKnS,GAAAA,CAAI,SAAA,CAAA;oBAAA,EACRgc,WAAAA,CAAY5e,IAAAA,CAAKnC,MAAM7B,CAAAA,CAAE,EAAA,IAAA,EACzB+Y,MAAAA,CAAO/U,IAAAA,CAAKhE,CAAAA,CAAE,EAAA;gBAAA,IAAA,EAGfkjB,UAAAA,GAAaP,EAAEC,WAAAA,CAAY5d,MAAAA,CAAO,SAACG,CAAAA,EAAGa,CAAAA;oBAAAA,OAAMb,IAAIa;gBAAAA,GAAG,IAAA,IAAA,CAEhDqC,MAAAA,GAAAA;oBAAAA,GACD8T,IAAAA,CAAK1U,KAAAA,GAAQ;oBAAA,GACb0U,IAAAA,CAAK3Z,MAAAA,GAAS;gBAAA;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,IAAA,IAAA,EAKdmgB,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,IAAAA,CACRkC,UAAAA,CAAWgC,WAAAA,GAAc,IAAA,IAAA,CACzBC,YAAAA,GAAeT,EAAEC,WAAAA,CAAY3f,KAAAA,CAAM,GAAGkZ,IAAAA,CAAK3G,MAAAA,CAAOkN,eAAAA;gBAAAA,IAEnDtiB,IAAQ,GACRqC,IAAI;gBAAA,IAAA,CACH2gB,YAAAA,CAAaxc,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;oBAAAA,IACrBsf,IAAW,KACXC,IAAU7iB,KAAK6C,KAAAA,CAAAA,AACjBigB,CAAAA,EAAK9b,KAAAA,GAAQ3H,cAAcyjB,EAAK9E,QAAAA,CAAAA,IAAW4E;oBAEzCE,EAAKH,YAAAA,CAAa9iB,MAAAA,GAASgjB,KAAAA,CAAAA,IACnBC,EAAK9b,KAAAA,GAAM8b,EAAKH,YAAAA,CAAa9iB,MAAAA,AAAAA,GAEtCF,IAAQkjB,KAAAA,CAAAA,IACF,GAAA,KACH,EAAA;oBAAA,IAEF7a,IAAI4a,IAAWjjB,IAAQ,GACvB+C,IAAQogB,EAAK/N,MAAAA,CAAOgJ,eAAAA,GAAkB1b,eAAe6f,EAAE5J,MAAAA,CAAOhV,EAAAA,EAAIsf,IAAS,MAAMV,EAAE5J,MAAAA,CAAOhV,EAAAA,EAC1F2Y,IAAY6G,EAAK/N,MAAAA,CAAO+M,cAAAA,GAAiBgB,EAAK/N,MAAAA,CAAO+M,cAAAA,CAAeviB,KAAKA,GACzEkM,IAAMjC,UACTxB,GACAhG,GACA,GACA8gB,EAAK5H,MAAAA,CAAO5X,EAAAA,EACTZ,IAAAA,OAAUuZ,GAAAA,CACb;oBAAA,EAEIyE,UAAAA,CAAWzkB,WAAAA,CAAYwP,IAAAA;gBAAAA;YAAAA;QAAAA;KAAAA,GAAAA;AAAAA,EApFe6R,YRJjCyF,oBAAoB,IACpB3P,qBAAqB,GAErBG,eAAe,KACfD,aAAa,OAEbM,cAAAA;IAAe;IAAW;IAAY;IAAS;IAAS;IACpE;IAAQ;IAAQ;IAAU;IAAa;IAAW;IAAY;CAAA,EAIlDoP,kBAAAA;IAAmB;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;CAAA,EAAA,mBAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,IAAA,IAAA,EAAA,EAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,KAAA;QAAA,IAAA;YAAA,IAAA,IAAA,GAAA,IAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,CAAA,IAAA,AAAA,CAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,GAAA,CAAA,KAAA,EAAA,MAAA,KAAA,CAAA,GAAA,IAAA,CAAA;QAAA,EAAA,OAAA,GAAA;YAAA,IAAA,CAAA,GAAA,IAAA;QAAA,SAAA;YAAA,IAAA;gBAAA,CAAA,KAAA,EAAA,MAAA,IAAA,EAAA,MAAA;YAAA,SAAA;gBAAA,IAAA,GAAA,MAAA;YAAA;QAAA;QAAA,OAAA;IAAA;IAAA,OAAA,SAAA,CAAA,EAAA,CAAA;QAAA,IAAA,MAAA,OAAA,CAAA,IAAA,OAAA;QAAA,IAAA,OAAA,QAAA,IAAA,OAAA,IAAA,OAAA,EAAA,GAAA;QAAA,MAAA,IAAA,UAAA;IAAA;AAAA,KAAA,iBAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,EAAA,MAAA,EAAA,IAAA;YAAA,IAAA,IAAA,CAAA,CAAA,EAAA;YAAA,EAAA,UAAA,GAAA,EAAA,UAAA,IAAA,CAAA,GAAA,EAAA,YAAA,GAAA,CAAA,GAAA,WAAA,KAAA,CAAA,EAAA,QAAA,GAAA,CAAA,CAAA,GAAA,OAAA,cAAA,CAAA,GAAA,EAAA,GAAA,EAAA;QAAA;IAAA;IAAA,OAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA;QAAA,OAAA,KAAA,EAAA,EAAA,SAAA,EAAA,IAAA,KAAA,EAAA,GAAA,IAAA;IAAA;AAAA,KCNpE/N,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,EAEJgO,UAAAA,EAAAA,IAAAA,KAAAA,MAAAA,IAAa,KAAA,GAAA,IAAA,EACbC,cAAAA,EAAAA,IAAAA,KAAAA,MAAAA,IAAiB,KAAA,GACjB1O,IAAAA,EAAAA,SAAAA,EAEAC,IAAAA,EAAAA,OAAAA,EACA0O,IAAAA,EAAAA,YAAAA,EACAC,IAAAA,EAAAA,eAAAA;QAAAA,kBAAAA,IAAAA,EAAAA,IAAAA,IAAAA,CAEKF,cAAAA,GAAiBA,GAAAA,IAAAA,CACjB1O,SAAAA,GAAYA,GAAAA,IAAAA,CAEZ2O,YAAAA,GAAeA,GAAAA,IAAAA,CACf1O,OAAAA,GAAUA,GAAAA,IAAAA,CAEV2O,eAAAA,GAAkBA,GAAAA,IAAAA,CAElBC,KAAAA,GAAAA,EAAAA,EAAAA,IAAAA,CACA/K,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,CAEA2K,UAAAA,GAAaA,GAAAA,IAAAA,CACbA,UAAAA,GAAyC,cAAA,OAArBvH,IAAAA,CAAKuH,UAAAA,GAC3BvH,IAAAA,CAAKuH,UAAAA,KAAevH,IAAAA,CAAKuH,UAAAA,EAAAA,IAAAA,CAEvBxG,OAAAA;IAAAA;IAAAA,OAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGExT,CAAAA;gBAAAA,IAAAA,CACFA,IAAAA,GAAOA,KAAQyS,IAAAA,CAAKjH,OAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGpB3N,CAAAA;gBAAAA,IAAAA,CACAwc,KAAAA,GAAQnc,aAAauU,IAAAA,CAAKuH,UAAAA,EAAYvH,IAAAA,CAAKwH,cAAAA,EAAgBpc;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAI3DqZ,MAAAA,CAAOzE,IAAAA,CAAKzS,IAAAA,GAAAA,IAAAA,CACZsa,OAAAA,GAAU7H,IAAAA,CAAKzS,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGdA,CAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CACDoa,KAAAA,GAAQ3H,IAAAA,CAAKyH,YAAAA,CAAala,IAAAA,IAAAA,CAE1Bqa,KAAAA,CAAMZ,WAAAA,GAAc,IAAA,IAAA,CACpBW,KAAAA,CAAMxE,OAAAA,CAAQ,SAAA,CAAA;oBAAA,EACbyE,KAAAA,CAAMrnB,WAAAA,CAAYS;gBAAAA,IAAAA,IAAAA,CAEnB4b,MAAAA,CAAOuG,OAAAA,CAAQ,SAAA,CAAA;oBAAA,EACdyE,KAAAA,CAAMrnB,WAAAA,CAAYS;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAIlBohB,IAAAA,CAAAA,CAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,AAAAA,KAAAA,SAAAA,CAAAA,EAAAA;gBAAAA,IAAAA,CACDrB,OAAAA;gBAAAA,IACD2G,IAAAA,EAAAA;gBAAAA,OACDtF,KAAAA,CAAAA,IACgBpC,IAAAA,CAAK0H,eAAAA,CAAgB1H,IAAAA,CAAKzS,IAAAA,KAAAA,EAAAA,AAAAA,GAEtCma;YAAAA;QAAAA;KAAAA,GAAAA;AAAAA,KAILzO,mBAAAA;IAAAA,aAAAA;QAAAA,YAEU;QAAA,cAAA,SACC1L,CAAAA;YAAAA,OACLA,EAAKua,YAAAA,CAAard,GAAAA,CAAI,SAAC+b,CAAAA,EAAG5e,CAAAA;gBAAAA,IAC5Bd,IAAQ+E,SAAS2a,GAAG,cAAcjZ,EAAKiS,MAAAA,CAAO5X,EAAAA,EAAI,QAAQ2F,EAAKwa,WAAAA;gBAAAA,OAAAA,EAC7D7nB,KAAAA,CAAM8nB,UAAAA,GAAa,kBAClBlhB;YAAAA;QAAAA;QAAAA,iBAAAA,SAIOmhB,CAAAA;YAAAA,OACRjI,IAAAA,CAAK2H,KAAAA,CAAMld,GAAAA,CAAI,SAAC3D,CAAAA,EAAOc,CAAAA;gBAAAA,OAAMuL,eAAerM,GAAOmhB,EAAQH,YAAAA,CAAalgB,EAAAA;YAAAA;QAAAA;IAAAA;IAAAA,WAAAA;QAAAA,YAIpE;QAAA,cAAA,SACC2F,CAAAA;YAAAA,OACLA,EAAKua,YAAAA,CAAard,GAAAA,CAAI,SAAC+b,CAAAA,EAAG5e,CAAAA;gBAAAA,IAC5Bd,IAAQ+E,SAAS2a,GAAG,YAAY,QAAQjZ,EAAKiS,MAAAA,CAAO5X,EAAAA;gBAAAA,OAAAA,EAClD1H,KAAAA,CAAM8nB,UAAAA,GAAa,kBAClBlhB;YAAAA;QAAAA;QAAAA,iBAAAA,SAIOmhB,CAAAA;YAAAA,OACRjI,IAAAA,CAAK2H,KAAAA,CAAMld,GAAAA,CAAI,SAAC3D,CAAAA,EAAOc,CAAAA;gBAAAA,OAC7BuL,eAAerM,GAAOmhB,EAAQH,YAAAA,CAAalgB,EAAAA;YAAAA;QAAAA;IAAAA;IAAAA,gBAAAA;QAAAA,YAKjC;QAAA,cAAA,SACC2F,CAAAA;YAAAA,IAAAA,IAAAA,IAAAA;YAAAA,OACLA,EAAK2a,UAAAA,CAAWzd,GAAAA,CAAI,SAAC6B,CAAAA,EAAG1E,CAAAA;gBAAAA,OAEpBsF,cAAcZ,GADhB,GACsBiB,EAAK4a,MAAAA,CAAOvgB,EAAAA,EACzC0Y,EAAKxH,SAAAA,CAAUsP,SAAAA,EAAW9H,EAAKxH,SAAAA,CAAUuP,QAAAA,EAAU9a,EAAKiS,MAAAA,CAAO5X,EAAAA;YAAAA;QAAAA;QAAAA,iBAAAA,SAKlDqgB,CAAAA;YAAAA,IACZA,GAAS,OAAA,EAAA;QAAA;IAAA;IAAA,OAAA;QAAA,YAID;QAAA,cAAA,SACC1a,CAAAA;YAAAA,IAAAA,IAAAA,IAAAA;YAAAA,OACLA,EAAK+a,SAAAA,CAAU7d,GAAAA,CAAI,SAAC8d,CAAAA,EAAU3gB,CAAAA;gBAAAA,OACpCoH,MAAMuZ,GAAUhb,EAAKqP,MAAAA,CAAOhV,EAAAA,EAAIwf,EAAKtO,SAAAA,CAAUxN,KAAAA,EAAAA;oBAC7C4D,MAAMkY,EAAKtO,SAAAA,CAAU5J,IAAAA;oBAAMD,KAAKmY,EAAKtO,SAAAA,CAAU7J,GAAAA;oBAAKF,gBAAgBqY,EAAKtO,SAAAA,CAAU/J,cAAAA;gBAAAA;YAAAA;QAAAA;QAAAA,iBAAAA,SAIvEkZ,CAAAA;YAAAA,IACXO,IAASP,EAAQK,SAAAA,EACjBG,IAAYR,EAAQrL,MAAAA,EACpB8L,IAAS1I,IAAAA,CAAK6H,OAAAA,CAAQS,SAAAA,EACtBK,IAAY3I,IAAAA,CAAK6H,OAAAA,CAAQjL,MAAAA,EAAAA,IAEVrW,qBAAqBmiB,GAAQF,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IACvBjiB,qBAAqBoiB,GAAWF,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,OAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAEpDhE,MAAAA,CAAAA;gBAAAA,WACOiE;gBAAAA,QACHD;YAAAA,IAGFzI,IAAAA,CAAK2H,KAAAA,CAAMld,GAAAA,CAAI,SAAC3C,CAAAA,EAAMF,CAAAA;gBAAAA,OACrB0J,kBACNxJ,GAAM0gB,CAAAA,CAAO5gB,EAAAA,EAAI8gB,CAAAA,CAAO9gB,EAAAA;YAAAA;QAAAA;IAAAA;IAAAA,OAAAA;QAAAA,YAOf;QAAA,cAAA,SACC2F,CAAAA;YAAAA,IAAAA,IAAAA,IAAAA;YAAAA,OACLA,EAAK+a,SAAAA,CAAU7d,GAAAA,CAAI,SAAC8d,CAAAA,EAAU3gB,CAAAA;gBAAAA,OACpCwH,MAAMmZ,GAAUhb,EAAKqb,UAAAA,CAAWhhB,EAAAA,EAAIme,EAAKjN,SAAAA,CAAUzS,MAAAA,EAAAA;oBACjD6I,MAAM6W,EAAKjN,SAAAA,CAAU5J,IAAAA;oBAAMD,KAAK8W,EAAKjN,SAAAA,CAAU7J,GAAAA;gBAAAA;YAAAA;QAAAA;QAAAA,iBAAAA,SAInCgZ,CAAAA;YAAAA,IACXO,IAASP,EAAQK,SAAAA,EACjBG,IAAYR,EAAQW,UAAAA,EACpBF,IAAS1I,IAAAA,CAAK6H,OAAAA,CAAQS,SAAAA,EACtBK,IAAY3I,IAAAA,CAAK6H,OAAAA,CAAQe,UAAAA,EAAAA,IAEVriB,qBAAqBmiB,GAAQF,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IACvBjiB,qBAAqBoiB,GAAWF,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,OAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAEpDhE,MAAAA,CAAAA;gBAAAA,WACOiE;gBAAAA,YACCD;YAAAA,IAGNzI,IAAAA,CAAK2H,KAAAA,CAAMld,GAAAA,CAAI,SAAC3C,CAAAA,EAAMF,CAAAA;gBAAAA,OACrBsJ,kBACNpJ,GAAM0gB,CAAAA,CAAO5gB,EAAAA,EAAI8gB,CAAAA,CAAO9gB,EAAAA;YAAAA;QAAAA;IAAAA;IAAAA,UAAAA;QAAAA,YAOf;QAAA,cAAA,SACC2F,CAAAA;YAAAA,IAAAA,IAAAA,IAAAA;YAAAA,OACLA,EAAK9C,GAAAA,CAAI,SAAA,CAAA;gBAAA,OACf4E,QAAQjM,EAAEmlB,QAAAA,EAAUnlB,EAAE4D,KAAAA,EAAO6hB,EAAK/P,SAAAA,CAAUxN,KAAAA,EAAAA;oBAC1CgE,UAAUlM,EAAE6K,OAAAA,CAAQqB,QAAAA;oBAAUJ,MAAM;oBAAQJ,UAAU;gBAAA;YAAA;QAAA;QAAA,iBAAA,SAG1CmZ,CAAAA;YAAAA,IAAAA,IACW1hB,qBAAqByZ,IAAAA,CAAK6H,OAAAA,EAASI,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAvDJ,OAAAA,GAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAEFW,IAAAA,AAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,AAAAA,EAAiB/d,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAE0kB,QAAAA;YAAAA,IAC5BE,IAAYR,EAAQxd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEmD,KAAAA;YAAAA,IAC/B8hB,IAAab,EAAQxd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEoK,OAAAA;YAAAA,IAEhCya,IAAS1I,IAAAA,CAAK6H,OAAAA,CAAQpd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAE0kB,QAAAA;YAAAA;YAAAA,OAAAA,IAAAA,CAEhC9D,MAAAA,CAAOiE,EAAOje,GAAAA,CAAI,SAACwE,CAAAA,EAAKrH,CAAAA;gBAAAA,OAAAA;oBAAAA,UAEjB8gB,CAAAA,CAAO9gB,EAAAA;oBAAAA,OACV6gB,CAAAA,CAAU7gB,EAAAA;oBAAAA,SACRkhB,CAAAA,CAAWlhB,EAAAA;gBAAAA;YAAAA,KAIfoY,IAAAA,CAAK2H,KAAAA,CAAMld,GAAAA,CAAI,SAAC3C,CAAAA,EAAMF,CAAAA;gBAAAA,OACrB0J,kBACNxJ,GAAM0gB,CAAAA,CAAO5gB,EAAAA,EAAI8gB,CAAAA,CAAO9gB,EAAAA;YAAAA;QAAAA;IAAAA;IAAAA,UAAAA;QAAAA,YAOf;QAAA,cAAA,SACC2F,CAAAA;YAAAA,IAAAA,IAAAA,IAAAA;YAAAA,OACLA,EAAK9C,GAAAA,CAAI,SAAA,CAAA;gBAAA,OACf+E,QAAQpG,EAAE2f,QAAAA,EAAU3f,EAAE4f,MAAAA,EAAQC,EAAKnQ,SAAAA,CAAUxN,KAAAA,EAC5ClC,EAAEpC,KAAAA,EAAAA;oBAAQsI,UAAUlG,EAAE6E,OAAAA,CAAQqB,QAAAA;gBAAAA;YAAAA;QAAAA;QAAAA,iBAAAA,SAGjB2Y,CAAAA;YAAAA,IAAAA,IACW1hB,qBAAqByZ,IAAAA,CAAK6H,OAAAA,EAASI,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAvDJ,OAAAA,GAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAEFW,IAAAA,AAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,AAAAA,EAAiB/d,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEmlB,MAAAA;YAAAA,IAC5BP,IAAYR,EAAQxd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEmD,KAAAA;YAAAA,IAC/BkiB,IAAYjB,EAAQxd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEklB,QAAAA;YAAAA,IAC/BD,IAAab,EAAQxd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEoK,OAAAA;YAAAA,IAEhCya,IAAS1I,IAAAA,CAAK6H,OAAAA,CAAQpd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEmlB,MAAAA;YAAAA,IACjCG,IAAYnJ,IAAAA,CAAK6H,OAAAA,CAAQpd,GAAAA,CAAI,SAAA,CAAA;gBAAA,OAAK5G,EAAEklB,QAAAA;YAAAA;YAAAA,IAAAA,CAEnCtE,MAAAA,CAAOiE,EAAOje,GAAAA,CAAI,SAACwE,CAAAA,EAAKrH,CAAAA;gBAAAA,OAAAA;oBAAAA,UAEjBuhB,CAAAA,CAAUvhB,EAAAA;oBAAAA,QACZ8gB,CAAAA,CAAO9gB,EAAAA;oBAAAA,OACR6gB,CAAAA,CAAU7gB,EAAAA;oBAAAA,SACRkhB,CAAAA,CAAWlhB,EAAAA;gBAAAA;YAAAA;YAAAA,IAIlB8f,IAAAA,EAAAA;YAAAA,OAAAA,IAAAA,CAECC,KAAAA,CAAMld,GAAAA,CAAI,SAACiH,CAAAA,EAAW9J,CAAAA;gBAAAA,IACR8f,EAAgBjjB,MAAAA,CAAOgN,cACxCC,GAAWwX,CAAAA,CAAUthB,EAAAA,EAAI4gB,CAAAA,CAAO5gB,EAAAA,EAAI8gB,CAAAA,CAAO9gB,EAAAA;YAAAA,IAItC8f;QAAAA;IAAAA;IAAAA,YAAAA;QAAAA,YAKI;YAAA,OAAoB,wBAAwB1H,IAAAA,CAAKlH,SAAAA,CAAUnJ,KAAAA;QAAAA;QAAAA,cAAAA,SAC1DpC,CAAAA;YAAAA,IAAAA,IAAAA,IAAAA,EAAAA,IACuDyS,IAAAA,CAAKlH,SAAAA,EAAnEnJ,IAAAA,EAAAA,KAAAA,EAAOyZ,IAAAA,EAAAA,QAAAA,EAAUC,IAAAA,EAAAA,SAAAA,EAAWC,IAAAA,EAAAA,UAAAA,EAAYvkB,IAAAA,EAAAA,MAAAA,EAEzCuH,IAAAA,EAFiDid,UAAAA,EAEjCjjB,IAAI;YAAA,OAAA,IAAA,CAEnBkjB,oBAAAA,GAAAA,EAAAA,EAAAA,EAEAC,IAAAA,CAAKhf,GAAAA,CAAI,SAACif,CAAAA,EAAMC,CAAAA;gBACN,MAAXA,KAAAA,EACG/M,MAAAA,CAAO/U,IAAAA,CACXkG,SAAS,eAAezB,GAAAA,KAAoByL,aAAapI,GAAAA,CAAO,GAAMia,WAAAA,IAAAA;oBAAAA,UAE1D;gBAAA,KAAA,EAKTnf,GAAAA,CAAI,SAAC8N,CAAAA,EAAK3Q,CAAAA;oBAAAA,IACX2Q,EAAI/T,IAAAA,EAAM;wBAAA,IACR+I,IAAAA;4BAAAA,aACUgL,EAAIsR,QAAAA;4BAAAA,cACHtR,EAAIuR,SAAAA;4BAAAA,YACNliB;wBAAAA,GAETmiB,IAAS1c,WAAW,OAAOf,GAAGhG,GAAGgjB,GAAYvkB,GAAQwT,EAAI/T,IAAAA,EAAM+I;wBAAAA,EAC9Dic,oBAAAA,CAAqB3hB,IAAAA,CAAKkiB;oBAAAA;oBAAAA,KAE3BV;gBAAAA,IAAAA,IAEF,GAAA,KACCD;YAAAA,IAGCpJ,IAAAA,CAAKwJ,oBAAAA;QAAAA;QAAAA,iBAAAA,SAGGvB,CAAAA;YAAAA,IACZA,GAAS,OAAA,EAAA;QAAA;IAAA;IAAA,UAAA;QAAA,YAKD;YAAA,OAAoB,wCAAwCjI,IAAAA,CAAKlH,SAAAA,CAAUnJ,KAAAA;QAAAA;QAAAA,cAAAA,SAC1EpC,CAAAA;YAAAA,IACR2T,IAAIlB,IAAAA,CAAKlH,SAAAA;YAAAA,OAAAA,IAAAA,CACRkR,QAAAA,GAAW,OAAA,IAAA,CACXC,KAAAA,GAAQ1c,EAAK2c,UAAAA,CAAWzf,GAAAA,CAAI,SAACnE,CAAAA,EAAGrD,CAAAA;gBAAAA,OAC7ByM,WACNnC,EAAK2a,UAAAA,CAAWjlB,EAAAA,EAChBqD,GACAiH,EAAK2Z,QAAAA,EACLhG,EAAE5X,KAAAA,EACFiE,EAAKqP,MAAAA,CAAO3Z,EAAAA,EACZA,GACAsK,EAAK4c,OAAAA,CAAQlnB,EAAAA,EAAAA;oBAAAA,UAEFsK,EAAKnH,QAAAA;oBAAAA,WACJmH,EAAK6c,SAAAA;oBAAAA,WACLlJ,EAAErR,SAAAA;gBAAAA;YAAAA,IAITmQ,IAAAA,CAAKiK,KAAAA;QAAAA;QAAAA,iBAAAA,SAEGhC,CAAAA;YAAAA,IACXoC,IAAUpC,EAAQC,UAAAA,EAClBoC,IAAUrC,EAAQiC,UAAAA,EAClBK,IAAatC,EAAQkC,OAAAA,EACrB1B,IAAYR,EAAQrL,MAAAA,EAEpB4N,IAAUxK,IAAAA,CAAK6H,OAAAA,CAAQK,UAAAA,EACvBuC,IAAUzK,IAAAA,CAAK6H,OAAAA,CAAQqC,UAAAA,EACvBQ,IAAa1K,IAAAA,CAAK6H,OAAAA,CAAQsC,OAAAA,EAC1BxB,IAAY3I,IAAAA,CAAK6H,OAAAA,CAAQjL,MAAAA,EAAAA,IAERrW,qBAAqBikB,GAASH,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IAC9B9jB,qBAAqBkkB,GAASH,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IACxB/jB,qBAAqBmkB,GAAYH,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IACnChkB,qBAAqBoiB,GAAWF,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAEpDhE,MAAAA,CAAAA;gBAAAA,YACQ+F;gBAAAA,YACAC;gBAAAA,SACHC;gBAAAA,QACDjC;gBAAAA,UAEEzI,IAAAA,CAAK6H,OAAAA,CAAQzhB,QAAAA;gBAAAA,WACZ4Z,IAAAA,CAAK6H,OAAAA,CAAQuC,SAAAA;gBAAAA,UACdpK,IAAAA,CAAK6H,OAAAA,CAAQX,QAAAA;YAAAA;YAAAA,IAGpBQ,IAAAA,EAAAA;YAAAA,OAAAA,IAAAA,CAECC,KAAAA,CAAMld,GAAAA,CAAI,SAAC0H,CAAAA,EAAKvK,CAAAA;gBAAAA,IACF8f,EAAgBjjB,MAAAA,CAAOyN,WACxCC,GAAKkY,CAAAA,CAAQziB,EAAAA,EAAI0iB,CAAAA,CAAQ1iB,EAAAA,EAAIqgB,EAAQf,QAAAA,EAAUqD,CAAAA,CAAW3iB,EAAAA,EAAAA;oBACzDxB,UAAU6hB,EAAQ7hB,QAAAA;gBAAAA;YAAAA,IAIdshB;QAAAA;IAAAA;IAAAA,WAAAA;QAAAA,YAKI;YAAA,OAAoB,wCAAwC1H,IAAAA,CAAKlH,SAAAA,CAAUnJ,KAAAA;QAAAA;QAAAA,cAAAA,SAC1EpC,CAAAA;YAAAA,IACR2T,IAAIlB,IAAAA,CAAKlH,SAAAA;YAAAA,OAAAA,IAAAA,CACRkR,QAAAA,GAAW,OAAA,IAAA,CACXxZ,KAAAA,GAAAA,CAAAA,GACD0Q,EAAEyJ,QAAAA,IAAAA,CAAAA,IAAAA,CACAna,KAAAA,GAAQR,SACZzC,EAAK2a,UAAAA,EACL3a,EAAK2c,UAAAA,EACLhJ,EAAE5X,KAAAA,EAAAA;gBAAAA,UAES4X,EAAE7Q,QAAAA;gBAAAA,YACA6Q,EAAEzQ,UAAAA;gBAAAA,QACNyQ,EAAE/Q,MAAAA;YAAAA,GAAAA;gBAAAA,SAGD+Q,EAAE3Q,OAAAA;gBAAAA,UACDhD,EAAKnH,QAAAA;YAAAA,EAAAA,GAAAA,IAAAA,CAKb6jB,KAAAA,GAAAA,EAAAA,EACD/I,EAAE0J,QAAAA,IAAAA,CAAAA,IAAAA,CACAX,KAAAA,GAAQ1c,EAAK2c,UAAAA,CAAWzf,GAAAA,CAAI,SAACnE,CAAAA,EAAGrD,CAAAA;gBAAAA,OAC7B6M,WACNvC,EAAK2a,UAAAA,CAAWjlB,EAAAA,EAChBqD,GACAiH,EAAKxI,MAAAA,EACLmc,EAAE5X,KAAAA,EACD4X,EAAE2J,gBAAAA,GAAmBtd,EAAKqN,MAAAA,CAAO3X,EAAAA,GAAK,IACvCA;YAAAA,EAAAA,GAKI+V,OAAO4B,MAAAA,CAAOoF,IAAAA,CAAKxP,KAAAA,EAAO/L,MAAAA,CAAOub,IAAAA,CAAKiK,KAAAA;QAAAA;QAAAA,iBAAAA,SAE9BhC,CAAAA;YAAAA,IACXoC,IAAUpC,EAAQC,UAAAA,EAClBoC,IAAUrC,EAAQiC,UAAAA,EAClBY,IAAY7C,EAAQrN,MAAAA,EAEpB4P,IAAUxK,IAAAA,CAAK6H,OAAAA,CAAQK,UAAAA,EACvBuC,IAAUzK,IAAAA,CAAK6H,OAAAA,CAAQqC,UAAAA,EACvBzW,IAAYuM,IAAAA,CAAK6H,OAAAA,CAAQjN,MAAAA,EAAAA,IAERrU,qBAAqBikB,GAASH,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IAC9B9jB,qBAAqBkkB,GAASH,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IAC1B/jB,qBAAqBkN,GAAWqX,IAAAA,IAAAA,iBAAAA,GAAAA;YAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAEpDrG,MAAAA,CAAAA;gBAAAA,YACQ+F;gBAAAA,YACAC;gBAAAA,QACJK;gBAAAA,UAEE9K,IAAAA,CAAK6H,OAAAA,CAAQzhB,QAAAA;gBAAAA,QACf4Z,IAAAA,CAAK6H,OAAAA,CAAQ9iB,MAAAA;YAAAA;YAAAA,IAGlB2iB,IAAAA,EAAAA;YAAAA,OAED1O,OAAOxO,IAAAA,CAAKwV,IAAAA,CAAKxP,KAAAA,EAAOrM,MAAAA,IAAAA,CAAAA,IACRujB,EAAgBjjB,MAAAA,CAAOiO,YACxCsN,IAAAA,CAAKxP,KAAAA,EAAO6Z,GAASC,GAASrC,EAAQ7hB,QAAAA,EAAU4Z,IAAAA,CAAKlH,SAAAA,CAAU3I,MAAAA,EAAAA,GAG9D6P,IAAAA,CAAKiK,KAAAA,CAAM9lB,MAAAA,IAAAA,IAAAA,CACR8lB,KAAAA,CAAMxf,GAAAA,CAAI,SAACsF,CAAAA,EAAKnI,CAAAA;gBAAAA,IACF8f,EAAgBjjB,MAAAA,CAAO8N,WACxCxC,GAAKsa,CAAAA,CAAQziB,EAAAA,EAAI0iB,CAAAA,CAAQ1iB,EAAAA;YAAAA,IAIrB8f;QAAAA;IAAAA;AAAAA,GAAAA,eAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,EAAAA,UAAAA,GAAAA,EAAAA,UAAAA,IAAAA,CAAAA,GAAAA,EAAAA,YAAAA,GAAAA,CAAAA,GAAAA,WAAAA,KAAAA,CAAAA,EAAAA,QAAAA,GAAAA,CAAAA,CAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA;QAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,OAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA;IAAAA;AAAAA,KAAAA,OAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,SAAAA,KAAAA,CAAAA,IAAAA,SAAAA,SAAAA,AAAAA;IAAAA,IAAAA,IAAAA,OAAAA,wBAAAA,CAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA,cAAAA,CAAAA;QAAAA,OAAAA,SAAAA,IAAAA,KAAAA,IAAAA,EAAAA,GAAAA,GAAAA;IAAAA;IAAAA,IAAAA,WAAAA,GAAAA,OAAAA,EAAAA,KAAAA;IAAAA,IAAAA,IAAAA,EAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA,OAAAA,EAAAA,IAAAA,CAAAA;AAAAA,GQ3aWqD,kBAAAA,SAAAA,CAAAA;IAAAA,SAAAA,EACR3f,CAAAA,EAAQO,CAAAA;QAAAA,kBAAAA,IAAAA,EAAAA;QAAAA,IAAAA,IAAAA,2BAAAA,IAAAA,EAAAA,AAAAA,CAAAA,EAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACbP,GAAQO;QAAAA,OAAAA,EACTvL,IAAAA,GAAO,cAAA,EACPyf,KAAAA,IAAAA;IAAAA;IAAAA,OAAAA,UAAAA,GAAAA,IAAAA,aAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGM5R,CAAAA;gBAAAA,IACP7K,IAAI4c,IAAAA,CAAKsC,QAAAA;gBAAAA,IAAAA,CACR0I,UAAAA,GAAa/c,EAAQ+c,UAAAA,IAAAA,CAAAA;gBAAAA,IAEtBnhB,IAAImW,IAAAA,CAAKgL,UAAAA;gBAAAA,EACX3kB,MAAAA,GAASwD,EAAExD,MAAAA,IAAUyY,+BAAAA,EACrB3R,KAAAA,GAAQtD,EAAEsD,KAAAA,IAASC,8BAAAA,EAEnB7J,QAAAA,CAAStB,KAAAA,GAAQ,IAAA,EACjByB,YAAAA,GAAe,IAAA,EACfmf,UAAAA,GAA0C,IAA5BhZ,CAAAA,EAAExD,MAAAA,GAAmB,KAAVwD,EAAEsD,KAAAA,AAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAIzBqZ,IAAIxG,IAAAA,CAAK8C,KAAAA,EAET7J,IAAAA;oBAAAA;wBAEF;wBAAA;4BAAA,WAEY+G,IAAAA,CAAKgL,UAAAA,CAAW3kB,MAAAA;4BAAAA,UACjB2Z,IAAAA,CAAKgL,UAAAA,CAAW7d,KAAAA;wBAAAA;wBAE3B,CAAA;4BAAA,OAAA;gCAAA,YAEcqZ,EAAE0B,UAAAA;gCAAAA,QACN1B,EAAE2B,MAAAA;gCAAAA,QACFnI,IAAAA,CAAKR,MAAAA;4BAAAA;wBAAAA,CAAAA,EAEbiG,IAAAA,CAAKzF,IAAAA;qBAAAA;iBAAAA;gBAAAA,IAAAA,CAIJuE,UAAAA,GAAa,IAAIW,IAAIjM,EACxBxO,GAAAA,CAAI,SAAA,CAAA;oBAAA,IACAwgB,IAAYrS,aAAAA,KAAAA,CAAAA,KAAAA,GAAAA,mBAAgBjN;oBAAAA,OAAAA;wBACxBA,CAAAA,CAAK,EAAA;wBAAIsf;qBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,KAAAA,EAAAA,SAAAA,CAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,SAAAA,GAAAA,QAAAA,IAAAA,EAAAA,IAAAA,CAAAA,IAAAA;gBAAAA,IAMfzE,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,EAEXoF,UAAAA,GAAAA,EAAAA,EAAAA,EACAC,MAAAA,GAAAA,EAAAA;gBAAAA,IAEE+C,IAAO;gBAAA,EACTzE,WAAAA,CAAYhc,GAAAA,CAAI,SAAC5E,CAAAA;oBAAAA,IACdyF,IAAQgV,EAAKhV,KAAAA,GAAQzF,IAAQ2gB,EAAEO,UAAAA;oBAAAA,EACjCoB,MAAAA,CAAOtgB,IAAAA,CAAKyD,IAAAA,EACZ4c,UAAAA,CAAWrgB,IAAAA,CAAKqjB,IAAAA,KACV5f;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAOLkb,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,IAAAA,CACRzM,SAAAA,CAAU+J,gBAAAA,CAAiB,aAAa,SAAC0F,CAAAA;oBAAAA,IACzCqF,IAAO/D,EAAK7C,UAAAA,CAAW6G,GAAAA,CAAI,kBAAkBzD,KAAAA,EAC7CxV,IAAM2T,EAAEljB,MAAAA;oBAAAA,IACTuoB,EAAKhS,QAAAA,CAAShH,IAAM;wBAAA,IAElBvK,IAAIujB,EAAK3P,OAAAA,CAAQrJ,IACjBkZ,IAAOtqB,UAAUqmB,EAAK/Q,SAAAA,GAAYiV,IAAOvqB,UAAUoR,IAEnD7F,IAAIgf,EAAK/pB,IAAAA,GAAO8pB,EAAK9pB,IAAAA,GAAOqI,SAASuI,EAAIF,YAAAA,CAAa,YAAU,GAChE3L,IAAIglB,EAAKnqB,GAAAA,GAAMkqB,EAAKlqB,GAAAA,EACpB+e,IAAAA,AAASkH,CAAAA,EAAKmE,eAAAA,IAAmBnE,EAAKmE,eAAAA,CAAgBpnB,MAAAA,GAAO,IAC9DijB,EAAKmE,eAAAA,CAAgB3jB,EAAAA,GAAKwf,EAAKtE,KAAAA,CAAMlG,MAAAA,CAAOhV,EAAAA,AAAAA,IAAM,MACjD4jB,IAAWhF,EAAEC,WAAAA,CAAY7e,EAAAA,GAAG4e,EAAEO,UAAAA;wBAAAA,EAE7B/C,GAAAA,CAAIyH,SAAAA,CAAUnf,GAAGhG,GAAAA;4BAAIuS,MAAMqH;4BAAOra,OAAAA,AAAiB,CAAA,MAAT2lB,CAAAA,EAAc1nB,OAAAA,CAAQ,KAAK;wBAAA,IAAA,EACrEkgB,GAAAA,CAAI0H,OAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;KAAAA,GAAAA;AAAAA,EAlFgCvF,mBAAAA,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,EAAAA,UAAAA,GAAAA,EAAAA,UAAAA,IAAAA,CAAAA,GAAAA,EAAAA,YAAAA,GAAAA,CAAAA,GAAAA,WAAAA,KAAAA,CAAAA,EAAAA,QAAAA,GAAAA,CAAAA,CAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA;QAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,OAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA;IAAAA;AAAAA,KAAAA,SAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,SAAAA,KAAAA,CAAAA,IAAAA,SAAAA,SAAAA,AAAAA;IAAAA,IAAAA,IAAAA,OAAAA,wBAAAA,CAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA,cAAAA,CAAAA;QAAAA,OAAAA,SAAAA,IAAAA,KAAAA,IAAAA,EAAAA,GAAAA,GAAAA;IAAAA;IAAAA,IAAAA,WAAAA,GAAAA,OAAAA,EAAAA,KAAAA;IAAAA,IAAAA,IAAAA,EAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA,OAAAA,EAAAA,IAAAA,CAAAA;AAAAA,GCIxBwF,WAAAA,SAAAA,CAAAA;IAAAA,SAAAA,EACRvgB,CAAAA,EAAQO,CAAAA;QAAAA,kBAAAA,IAAAA,EAAAA;QAAAA,IAAAA,IAAAA,6BAAAA,IAAAA,EAAAA,AAAAA,CAAAA,EAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACbP,GAAQO;QAAAA,OAAAA,EACTvL,IAAAA,GAAO,OAAA,EACP2iB,WAAAA,GAAc,GAAA,EACdoB,IAAAA,GAAO,GAAA,EAEPtE,KAAAA,IAAAA;IAAAA;IAAAA,OAAAA,YAAAA,GAAAA,IAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGIlU,CAAAA;gBAAAA,OAAAA,EAAAA,SAAAA,CAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,SAAAA,GAAAA,aAAAA,IAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACOA,IAAAA,IAAAA,CACXigB,SAAAA,GAAY5L,IAAAA,CAAK4L,SAAAA,CAAUnG,IAAAA,CAAKzF,IAAAA,GAAAA,IAAAA,CAChC6L,UAAAA,GAAa7L,IAAAA,CAAK6L,UAAAA,CAAWpG,IAAAA,CAAKzF,IAAAA,GAAAA,IAAAA,CAElC8L,UAAAA,GAAangB,EAAKmgB,UAAAA,IAAc,IAAA,IAAA,CAChCzS,MAAAA,CAAO0S,UAAAA,GAAapgB,EAAKogB,UAAAA,IAAc,GAAA,IAAA,CAEvC5f,SAAAA,GAAYR,EAAKQ,SAAAA,IAAAA,CAAa;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,IAAA,IAAA;gBAAA,OAAA,EAAA,SAAA,CAAA,SAAA,IAAA,OAAA,cAAA,CAAA,EAAA,SAAA,GAAA,QAAA,IAAA,EAAA,IAAA,CAAA,IAAA;gBAAA,IAK/Bqa,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,IAAAA,CACR/d,MAAAA,GAAUib,IAAAA,CAAK3Z,MAAAA,GAAS2Z,IAAAA,CAAK1U,KAAAA,GAAQ0U,IAAAA,CAAK9T,MAAAA,CAAOI,CAAAA,GAAI0T,IAAAA,CAAK9T,MAAAA,CAAO5F,CAAAA;gBAAAA,IAE9DvB,IAAsBib,IAAAA,CAAtBjb,MAAAA,EAAQoH,IAAc6T,IAAAA,CAAd7T,SAAAA,EAEV6f,IAAuBxF,EAAEyF,gBAAAA,IAAAA,EAAAA;gBAAAA,EAC7BnE,YAAAA,GAAAA,EAAAA,EAAAA,EACAmE,gBAAAA,GAAAA,EAAAA;gBAAAA,IACEC,IAAW,MAAMlM,IAAAA,CAAK3G,MAAAA,CAAO0S,UAAAA;gBAAAA,EAC/BtF,WAAAA,CAAYhc,GAAAA,CAAI,SAACkc,CAAAA,EAAO/e,CAAAA;oBAAAA,IACnBmkB,IAAaG,GACbC,IAAmBxF,IAAQH,EAAEO,UAAAA,GAAczH,YAC3ClT,IAAW+f,IAAkB,MAAM,IAAG,GACtCC,IAAYjgB,IAAAA,CAAaggB,IAAkBA,GAC3CE,IAAWH,KAAsBE,GACjCpgB,IAAgBnH,mBAAmBknB,GAAYhnB,IAC/CkH,IAAcpH,mBAAmBwnB,GAAUtnB,IAE3CunB,IAAehM,EAAK6D,IAAAA,IAAQ6H,CAAAA,CAAqBpkB,EAAAA,EAEnD2kB,IAAAA,KAAAA,GAASC,IAAAA,KAAAA;oBACVlM,EAAK6D,IAAAA,GAAAA,CAAAA,IACImI,IAAeA,EAAatgB,aAAAA,GAAgBA,GAAAA,IAC9CsgB,IAAeA,EAAargB,WAAAA,GAAcD,CAAAA,IAAAA,CAAAA,IAExCA,GAAAA,IACFC,CAAAA;oBAAAA,IAEJwgB,IACe,QAApBN,IACGzf,cAAc6f,GAAUC,GAAQlM,EAAKpU,MAAAA,EAAQoU,EAAKvb,MAAAA,EAAQoH,GAAWC,KACrEL,eAAewgB,GAAUC,GAAQlM,EAAKpU,MAAAA,EAAQoU,EAAKvb,MAAAA,EAAQoH,GAAWC;oBAAAA,EAExE0b,YAAAA,CAAajgB,IAAAA,CAAK4kB,IAAAA,EAClBR,gBAAAA,CAAiBpkB,IAAAA,CAAAA;wBAAAA,eAAAA;wBAAAA,aAAAA;wBAAAA,OAGX8e;wBAAAA,OACAH,EAAEO,UAAAA;wBAAAA,YAAAA;wBAAAA,UAAAA;wBAAAA,OAGFqF;oBAAAA;gBAAAA,IAAAA,IAAAA,CAIJjI,IAAAA,GAAO;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAIRqC,IAAIxG,IAAAA,CAAK8C,KAAAA,EAET7J,IAAAA;oBAAAA;wBAEF;wBAAA,CAAA;wBAEA,CAAA;4BAAA,OAAA;gCAAA,cAEgBuN,EAAEsB,YAAAA;gCAAAA,QACR9H,IAAAA,CAAKR,MAAAA;4BAAAA;wBAAAA,CAAAA,EAEbiG,IAAAA,CAAKzF,IAAAA;qBAAAA;iBAAAA;gBAAAA,IAAAA,CAIJuE,UAAAA,GAAa,IAAIW,IAAIjM,EACxBxO,GAAAA,CAAI,SAAA,CAAA;oBAAA,IACAwgB,IAAYrS,aAAAA,KAAAA,CAAAA,KAAAA,GAAAA,qBAAgBjN;oBAAAA,OAAAA;wBACxBA,CAAAA,CAAK,EAAA;wBAAIsf;qBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAIAyB,CAAAA;gBAAAA,IACb3nB,IAAqBib,IAAAA,CAArBjb,MAAAA,EAAO+mB,IAAc9L,IAAAA,CAAd8L,UAAAA,EACPvD,IAAW1jB,mBAAmB6nB,EAASX,UAAAA,GAAYW,EAAS5nB,KAAAA,GAAQ,GAAGC;gBAAAA,OAAAA,iBACtDwjB,EAASjc,CAAAA,GAAKwf,IAAAA,QAAiBvD,EAASjiB,CAAAA,GAAKwlB,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAG1D1b,CAAAA,EAAKxI,CAAAA,EAAE+kB,CAAAA,EAAK7G,CAAAA;gBAAAA,IAClB1V,GAAAA;oBAAAA,IACE9G,IAAQ0W,IAAAA,CAAKR,MAAAA,CAAO5X,EAAAA;oBAAAA,IACvB+kB,GAAM;wBAAA,UACEvc,GAAM4P,IAAAA,CAAK4M,mBAAAA,CAAoB5M,IAAAA,CAAK8C,KAAAA,CAAMmJ,gBAAAA,CAAiBrkB,EAAAA,IAAAA,EAChE1H,KAAAA,CAAMsE,IAAAA,GAAO6E,mBAAmBC,GAAO;wBAAA,IACxCujB,IAAQ9rB,UAAUif,IAAAA,CAAKlK,GAAAA,GACvBxJ,IAAIwZ,EAAEgH,KAAAA,GAAQD,EAAMtrB,IAAAA,GAAO,IAC3B+E,IAAIwf,EAAEiH,KAAAA,GAAQF,EAAM1rB,GAAAA,GAAM,IAC1B+e,IAAAA,AAASF,CAAAA,IAAAA,CAAKgN,gBAAAA,IAAoBhN,IAAAA,CAAKgN,gBAAAA,CAAiB7oB,MAAAA,GAAS,IAClE6b,IAAAA,CAAKgN,gBAAAA,CAAiBplB,EAAAA,GAAKoY,IAAAA,CAAK8C,KAAAA,CAAMlG,MAAAA,CAAOhV,EAAAA,AAAAA,IAAM,MAClDqlB,IAAAA,AAAuC,CAAA,MAA5BjN,IAAAA,CAAK8C,KAAAA,CAAM2D,WAAAA,CAAY7e,EAAAA,GAAWoY,IAAAA,CAAK8C,KAAAA,CAAMiE,UAAAA,AAAAA,EAAYjjB,OAAAA,CAAQ;wBAAA,IAAA,CAC3EkgB,GAAAA,CAAIyH,SAAAA,CAAUnf,GAAGhG,GAAAA;4BAAIuS,MAAMqH;4BAAOra,OAAOonB,IAAU;wBAAA,IAAA,IAAA,CACnDjJ,GAAAA,CAAI0H,OAAAA;oBAAAA,OAAAA,UAECtb,GAAK,uBAAA,IAAA,CACV4T,GAAAA,CAAI/D,OAAAA,IAAAA,EACJ/f,KAAAA,CAAMsE,IAAAA,GAAO8E;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAKd+M,SAAAA,CAAU+J,gBAAAA,CAAiB,aAAaJ,IAAAA,CAAK4L,SAAAA,GAAAA,IAAAA,CAC7CvV,SAAAA,CAAU+J,gBAAAA,CAAiB,cAAcJ,IAAAA,CAAK6L,UAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAG1C/F,CAAAA;gBAAAA,IACHljB,IAASkjB,EAAEljB,MAAAA,EACbsqB,IAASlN,IAAAA,CAAKuE,UAAAA,CAAW6G,GAAAA,CAAI,aAAazD,KAAAA,EAC1CwF,IAAYnN,IAAAA,CAAKoN,mBAAAA,EACjBC,IAAarN,IAAAA,CAAKsN,cAAAA;gBAAAA,IACnBJ,EAAO/T,QAAAA,CAASvW,IAAS;oBAAA,IACvBgF,IAAIslB,EAAO1R,OAAAA,CAAQ5Y;oBAAAA,IAAAA,CAClB2qB,UAAAA,CAAWF,GAAYF,GAAAA,CAAU,IAAA,IAAA,CACjCG,cAAAA,GAAiB1qB,GAAAA,IAAAA,CACjBwqB,mBAAAA,GAAsBxlB,GAAAA,IAAAA,CACtB2lB,UAAAA,CAAW3qB,GAAQgF,GAAAA,CAAG,GAAMke;gBAAAA,OAAAA,IAAAA,CAE5B+F,UAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAKD0B,UAAAA,CAAWvN,IAAAA,CAAKsN,cAAAA,EAAetN,IAAAA,CAAKoN,mBAAAA,EAAAA,CAAoB;YAAA;QAAA;KAAA,GAAA;AAAA,EA/IzBjH,mBAAAA,mBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,IAAAA,CAAAA,GAAAA,IAAAA,CAAAA,GAAAA,IAAAA,KAAAA;QAAAA,IAAAA;YAAAA,IAAAA,IAAAA,GAAAA,IAAAA,CAAAA,CAAAA,OAAAA,QAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAAAA,AAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,KAAAA,CAAAA,EAAAA,IAAAA,CAAAA,EAAAA,KAAAA,GAAAA,CAAAA,KAAAA,EAAAA,MAAAA,KAAAA,CAAAA,GAAAA,IAAAA,CAAAA;QAAAA,EAAAA,OAAAA,GAAAA;YAAAA,IAAAA,CAAAA,GAAAA,IAAAA;QAAAA,SAAAA;YAAAA,IAAAA;gBAAAA,CAAAA,KAAAA,EAAAA,MAAAA,IAAAA,EAAAA,MAAAA;YAAAA,SAAAA;gBAAAA,IAAAA,GAAAA,MAAAA;YAAAA;QAAAA;QAAAA,OAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,MAAAA,OAAAA,CAAAA,IAAAA,OAAAA;QAAAA,IAAAA,OAAAA,QAAAA,IAAAA,OAAAA,IAAAA,OAAAA,EAAAA,GAAAA;QAAAA,MAAAA,IAAAA,UAAAA;IAAAA;AAAAA,KAAAA,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,EAAAA,UAAAA,GAAAA,EAAAA,UAAAA,IAAAA,CAAAA,GAAAA,EAAAA,YAAAA,GAAAA,CAAAA,GAAAA,WAAAA,KAAAA,CAAAA,EAAAA,QAAAA,GAAAA,CAAAA,CAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA;QAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,OAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA;IAAAA;AAAAA,KCAhCqH,YAAYxO,sBAAsBC,qBAClCwO,aAAaD,WAGEE,UAAAA,SAAAA,CAAAA;IAAAA,SAAAA,EACRtiB,CAAAA,EAAQ6C,CAAAA;QAAAA,kBAAAA,IAAAA,EAAAA;QAAAA,IAAAA,IAAAA,6BAAAA,IAAAA,EAAAA,AAAAA,CAAAA,EAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACb7C,GAAQ6C;QAAAA,EACT7N,IAAAA,GAAO,WAAA,EAEPutB,UAAAA,GAAa1f,EAAQ0f,UAAAA,IAAc;QAAA,IAEpCC,IAAAA;YAAe;YAAU;SAAA,EACzBC,IAAiBD,EAAYzU,QAAAA,CAASlL,EAAQ4f,cAAAA,IAC/C5f,EAAQ4f,cAAAA,GAAiB;QAAA,OAAA,EACvBC,mBAAAA,GAAsBF,EAAYpS,OAAAA,CAAQqS,IAAAA,EAE1ChO,KAAAA,IAAAA;IAAAA;IAAAA,OAAAA,YAAAA,GAAAA,IAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGM5R,CAAAA;gBAAAA,IACP7K,IAAI4c,IAAAA,CAAKsC,QAAAA;gBAAAA,IAAAA,CACRyL,eAAAA,GAA8C,MAA5B9f,EAAQ8f,eAAAA,GAAwB,IAAI,GAAA,EAEzDxqB,QAAAA,CAASpC,GAAAA,GAAmB,IAAbssB,YAAAA,EACflqB,QAAAA,CAAS1B,MAAAA,GAAS,GAAA,EAClB6B,YAAAA,GAA4B,IAAb+pB,YAAAA,EACf5K,UAAAA,GAAa4K,aAAa/V,qBACzBjU,eAAeL;gBAAAA,IAEdS,IAAImc,IAAAA,CAAKzS,IAAAA,EACTygB,IAAUhO,IAAAA,CAAK+N,eAAAA,GAAkB1G,oBAAoB;gBAAA,IAAA,CACpDtD,gBAAAA,GAAAA,AAAoB5M,CAAAA,gBAAgBtT,EAAEK,KAAAA,EAAOL,EAAEuZ,GAAAA,IACjD4Q,CAAAA,IAAWR,YAAY7pB,cAAcP;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAIpC4qB,IAAUhO,IAAAA,CAAK+N,eAAAA,GAAkB1G,oBAAoB,GACrD4G,IAAYjO,IAAAA,CAAK8C,KAAAA,CAAMmL,SAAAA,GAAYjO,IAAAA,CAAK8C,KAAAA,CAAMmL,SAAAA,GAAY;gBAAA,IAAA,CACzDpJ,SAAAA,GAAAA,AAAaoJ,CAAAA,IAAYD,CAAAA,IAAWR,YACtC7pB,cAAcqc,IAAAA,CAAKsC,QAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAGX/U,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAKyS,IAAAA,CAAKzS,IAAAA;gBAAAA,IAClBA,EAAKrJ,KAAAA,IAASqJ,EAAK6P,GAAAA,IAAO7P,EAAKrJ,KAAAA,GAAQqJ,EAAK6P,GAAAA,EAAAA,MACxC,IAAI0E,MAAM;gBAAA,IAGbvU,EAAKrJ,KAAAA,IAAAA,CAAAA,EACHA,KAAAA,GAAQ,IAAI6B,MAAAA,EACZ7B,KAAAA,CAAMgqB,WAAAA,CAAa3gB,EAAKrJ,KAAAA,CAAMgT,WAAAA,KAAgB,EAAA,GAEhD3J,EAAK6P,GAAAA,IAAAA,CAAAA,EAAYA,GAAAA,GAAM,IAAIrX,IAAAA,GAAAA,EAC1BooB,UAAAA,GAAa5gB,EAAK4gB,UAAAA,IAAAA,CAAAA,GAEpBvkB,SAASoP,OAAOxO,IAAAA,CAAK+C,EAAK4gB,UAAAA,CAAAA,CAAY,EAAA,IAAM,KAAQ;oBAAA,IAClDxmB,IAAAA,CAAAA;oBAAAA,OACG6C,IAAAA,CAAK+C,EAAK4gB,UAAAA,EAAYhL,OAAAA,CAAQ,SAAA,CAAA;wBAAA,IAChC3M,IAAO,IAAIzQ,KAAKqoB,IAAevW;wBAAAA,CAAAA,CAC5BhB,YAAYL,GAAAA,GAASjJ,EAAK4gB,UAAAA,CAAWC,EAAAA;oBAAAA,IAAAA,EAExCD,UAAAA,GAAaxmB;gBAAAA;gBAAAA,OAGZ4F;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAIHiZ,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,EAEX5e,KAAAA,GAAQ6R,MAAMiK,IAAAA,CAAKzS,IAAAA,CAAKrJ,KAAAA,GAAAA,EACxBkZ,GAAAA,GAAMrH,MAAMiK,IAAAA,CAAKzS,IAAAA,CAAK6P,GAAAA,GAAAA,EAEtBiR,cAAAA,GAAiBtY,MAAMyQ,EAAEtiB,KAAAA,GAAAA,EACzB+pB,SAAAA,GAAY9W,gBAAgBqP,EAAEtiB,KAAAA,EAAOsiB,EAAEpJ,GAAAA,GAAAA,EACvCZ,YAAAA,GAAeJ,iBAChBpD,OAAO4B,MAAAA,CAAOoF,IAAAA,CAAKzS,IAAAA,CAAK4gB,UAAAA,GAAapP,4BAAAA,EAEpCuP,aAAAA,GAAgBtO,IAAAA,CAAKuO,UAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAInB/H,IAAIxG,IAAAA,CAAK8C,KAAAA,EACT0L,IAAUxO,IAAAA,CAAK+N,eAAAA,GAAkB,IAAI,GAErC9U,IAAmBuN,EAAE8H,aAAAA,CAAc7jB,GAAAA,CAAI,SAAC4O,CAAAA,EAAQzR,CAAAA;oBAAAA,OAAAA;wBACnD;wBAAA;4BAAA,OAEQyR,EAAO1J,KAAAA;4BAAAA,UACJ6d;4BAAAA,WACCC;4BAAAA,YACCzO;4BAAAA,QACJsB,EAAKyB,YAAAA,CAAahd,MAAAA,IAAU;4BAAA,YACxByhB,EAAE8H,aAAAA,CACZpV,MAAAA,CAAO,SAACG,CAAAA,EAAQpW,CAAAA;gCAAAA,OAAMA,IAAI2E;4BAAAA,GAC1B6C,GAAAA,CAAI,SAAA,CAAA;gCAAA,OAAU4O,EAAOoQ,IAAAA,CAAKtlB,MAAAA,GAASqqB;4BAAAA,GACnC3lB,MAAAA,CAAO,SAACG,CAAAA,EAAGa,CAAAA;gCAAAA,OAAMb,IAAIa;4BAAAA,GAAG,KACvB2jB;wBAAAA;wBAEJ,CAAA;4BAAA,OACQhH,EAAE8H,aAAAA,CAAc1mB,EAAAA;wBAAAA,CAAAA,EACtB6d,IAAAA,CAAKnF;qBAAAA;gBAAAA;gBAAAA,IAAAA,CAIHiE,UAAAA,GAAa,IAAIW,IAAIjM,EACxBxO,GAAAA,CAAI,SAACkB,CAAAA,EAAM/D,CAAAA;oBAAAA,IACPqjB,IAAYrS,aAAAA,KAAAA,CAAAA,KAAAA,GAAAA,qBAAgBjN;oBAAAA,OAAAA;wBACxBA,CAAAA,CAAK,EAAA,GAAK,MAAM/D;wBAAGqjB;qBAAAA;gBAAAA;gBAAAA,IAIzB3kB,IAAI;gBAAA,gBACQ6c,OAAAA,CAAQ,SAACsL,CAAAA,EAAS7mB,CAAAA;oBAAAA,IAAAA;wBAC7B;wBAAG;wBAAG;qBAAA,CAAGuR,QAAAA,CAASvR,IAAI;wBAAA,IACrB8mB,IAAU3gB,SAAS,kBAAA,CAAmByf,YAAU,GAAGlnB,GAAGmoB,GAAAA;4BAAAA,UAE9CzP;4BAAAA,IACN;4BAAA,YACQ;wBAAA;wBAAA,EAGTwF,QAAAA,CAASjkB,WAAAA,CAAYmuB;oBAAAA;oBAAAA,KAEtBjB;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAIAlgB,CAAAA;gBACFA,KAAAA,QACK6Q,KAAAA,CAAM,uBAAA,IAAA,CAGV7Q,IAAAA,GAAOyS,IAAAA,CAAKgC,WAAAA,CAAYzU,IAAAA,IAAAA,CACxBgW,IAAAA,IAAAA,IAAAA,CACAU,WAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAIA5N,SAAAA,CAAU+J,gBAAAA,CAAiB,aAAa,SAAC0F,CAAAA;oBAAAA,EACxCvB,UAAAA,CAAWpB,OAAAA,CAAQ,SAAA,CAAA;wBAAA,IACnBwL,IAAaC,EAAKjH,KAAAA,EAClBkH,IAAY/I,EAAEljB,MAAAA;wBAAAA,IACf+rB,EAAWxV,QAAAA,CAAS0V,IAAY;4BAAA,IAE9B5qB,IAAQ4qB,EAAU5c,YAAAA,CAAa,eAC/B6c,IAAYD,EAAU5c,YAAAA,CAAa,aAAaK,KAAAA,CAAM,MAEtD8F,IAAQL,aAAanO,SAASklB,CAAAA,CAAU,EAAA,IAAI,GAAA,CAAG,IAE/CzD,IAAOjE,EAAK/Q,SAAAA,CAAUnV,qBAAAA,IAAyBoqB,IAAOuD,EAAU3tB,qBAAAA,IAEhEoK,IAAQ1B,SAASkc,EAAEljB,MAAAA,CAAOqP,YAAAA,CAAa,WACvC3F,IAAIgf,EAAK/pB,IAAAA,GAAO8pB,EAAK9pB,IAAAA,GAAO+J,IAAM,GAClChF,IAAIglB,EAAKnqB,GAAAA,GAAMkqB,EAAKlqB,GAAAA,EACpB0E,IAAQ5B,IAAQ,MAAMmjB,EAAKuG,UAAAA,EAC3B9U,IAAO,SAAST,IAAQ,MAAM0W,CAAAA,CAAU,EAAA,GAAK,OAAOA,CAAAA,CAAU,EAAA;4BAAA,EAE7D9K,GAAAA,CAAIyH,SAAAA,CAAUnf,GAAGhG,GAAAA;gCAAIuS,MAAMA;gCAAMhT,OAAOA;gCAAOib,YAAY;4BAAA,GAAA,EAAA,GAAA,EAC3DkD,GAAAA,CAAI0H,OAAAA;wBAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAOP1G,UAAAA,CAAWgC,WAAAA,GAAc;gBAAA,IAC1B1a,IAAI,GACJhG,IAAImnB,YACJ1oB,IAASib,IAAAA,CAAK+B,YAAAA,CAAahd,MAAAA,IAAU,GAErCgqB,IAAWhhB,SAAS,kBAAkBzB,GAAGhG,GAAG,QAAA;oBAAA,UAEpC0Y,sBAAsB;oBAAA,IAC5B;gBAAA;gBAAA,IAGW,IAAZwO,YAAiBA,YAAU,GAAA,IAAA,CAC3BxI,UAAAA,CAAWzkB,WAAAA,CAAYwuB,IAAAA,IAAAA,CAEvBvP,MAAAA,CAAO1Y,KAAAA,CAAM,GAAGiY,2BAA2BtU,GAAAA,CAAI,SAACnB,CAAAA,EAAO1B,CAAAA;oBAAAA,IACrDmiB,IAAS1c,WAAW,uBAAuBf,IAAAA,AAAKkhB,CAAAA,YAAY,CAAA,IAAK5lB,GACtEtB,GAAG0Y,qBAAqBja,GAAQuE;oBAAAA,EAC5B0b,UAAAA,CAAWzkB,WAAAA,CAAYwpB;gBAAAA;gBAAAA,IAIzBiF,IAAWjhB,SAAS,kBADRzB,IAAIyS,4BAA6ByO,CAAAA,YAAY,CAAA,IAAKA,YAAU,GACvBlnB,GAAG,QAAA;oBAAA,UAE5C0Y,sBAAsB;oBAAA,IAC5B;gBAAA;gBAAA,IAAA,CAGDgG,UAAAA,CAAWzkB,WAAAA,CAAYyuB;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAaxB,IATAxI,IAAIxG,IAAAA,CAAK8C,KAAAA,EAAAA,IAAAA;oBACoB0D,EAAEtiB,KAAAA,CAAM+S,QAAAA;oBAAYuP,EAAEtiB,KAAAA,CAAMgT,WAAAA;iBAAAA,EAAtD+X,IAAAA,CAAAA,CAAAA,EAAAA,EAAYC,IAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA;oBACU1I,EAAEpJ,GAAAA,CAAInG,QAAAA;oBAAYuP,EAAEpJ,GAAAA,CAAIlG,WAAAA;iBAAAA,EAE/CiY,IAAAA,CAAAA,CAAAA,EAAAA,GAAyBF,IAAa,IAA6B,KAAA,CAAA,CAAA,CAAA,EAAA,GAAbC,CAAAA,GAExDZ,IAAAA,EAAAA,EAEAc,IAAerZ,MAAMyQ,EAAEtiB,KAAAA,GACnB0D,IAAI,GAAGA,IAAIunB,GAAYvnB,IAAK;oBAAA,IAC/ByP,IAAUmP,EAAEpJ,GAAAA;oBAAAA,IAAAA,CACZtF,eAAesX,GAAc5I,EAAEpJ,GAAAA,GAAM;wBAAA,IAAA,IAAA;4BACnBgS,EAAanY,QAAAA;4BAAYmY,EAAalY,WAAAA;yBAAAA;wBAAAA,IACjDiB,mBAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA;oBAAAA;oBAAAA,EAEGtQ,IAAAA,CAAKmY,IAAAA,CAAKqP,eAAAA,CAAgBD,GAAc/X,KAAAA,QAE9CA,GAAS,IAAA,IACFA;gBAAAA;gBAAAA,OAGTiX;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGQlX,CAAAA;gBAAAA,IAAWC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAQ,IAAA,IAAA;oBACbD,EAAUH,QAAAA;oBAAYG,EAAUF,WAAAA;iBAAAA,EAAhDkB,IAAAA,CAAAA,CAAAA,EAAAA,EAAOC,IAAAA,CAAAA,CAAAA,EAAAA,EACRiX,IAAc/X,eAAeH,IAG7BmY,IAAAA;oBAAAA,OACInX;oBAAAA,MAAAA,EAAAA;gBAAAA;gBAAAA,QAAAA,IAHErC,MAAMsB,MAAYc,mBAAmBC,GAAOC,IAOrC;gBAAA,IAIb,IAHAmX,IAAiBrY,gBAAgBmY,GAAajY,IAE9CoS,IAAAA,EAAAA,EAAWjgB,IAAAA,KAAAA,GACP5B,IAAI,GAAGA,IAAI4nB,GAAgB5nB,IAAAA,IAC5BoY,IAAAA,CAAKyP,MAAAA,CAAOH,GAAalX,IAAAA,EAC1BvQ,IAAAA,CAAK2B,IAAAA,QAAAA,IAEI,IAAIzD,KAAKyD,CAAAA,CAAIkO,qBAAqB,EAAA,CAAGmS,QAAAA,GAC9B;gBAAA,OAAA,KAGuBrkB,MAA1CgE,CAAAA,CAAIkO,qBAAqB,EAAA,CAAGoS,SAAAA,IAAAA,CAAAA,QACtBwF,GAAa,IAAA,EAChBznB,IAAAA,CAAKmY,IAAAA,CAAKyP,MAAAA,CAAOH,GAAalX,GAAAA,CAAO,GAAA,GAAA,EAG9BqR,IAAAA,GAAOA,GAEb8F;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGDnY,CAAAA,EAAWgB,CAAAA;gBAAAA,IAOb,IAPoBsX,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EACpBlJ,IAAIxG,IAAAA,CAAK8C,KAAAA,EAGT6M,IAAc5Z,MAAMqB,IACpB5N,IAAAA,EAAAA,EAEI5B,IAAI,GAAGA,IAAI8P,oBAAoB9P,KAAK6Q,QAAQkX,GAAa,GAAI;oBAAA,IAChEtW,IAAAA,CAAAA,GAGAuW,IAAwBD,KAAenJ,EAAEtiB,KAAAA,IAASyrB,KAAenJ,EAAEpJ,GAEpEsS;oBAAAA,KAASC,EAAY1Y,QAAAA,OAAemB,KAAAA,CAAUwX,IAAAA,EACzC/F,QAAAA,GAAWhT,YAAY8Y,KAAAA,IAErB3P,IAAAA,CAAK6P,kBAAAA,CAAmBF,IAAAA,EAE9B9nB,IAAAA,CAAKwR;gBAAAA;gBAAAA,OAGH7P;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGWgN,CAAAA;gBAAAA,IACdqT,IAAWhT,YAAYL,IACvBsT,IAAY9J,IAAAA,CAAKzS,IAAAA,CAAK4gB,UAAAA,CAAWtE,EAAAA;gBAAAA,OAAAA;oBAAAA,UAE1BA;oBAAAA,WACCC,KAAa;oBAAA,MAClB9J,IAAAA,CAAKR,MAAAA,CAAO9C,iBAAiBoN,GAAW9J,IAAAA,CAAK8C,KAAAA,CAAMtG,YAAAA,EAAAA;gBAAAA;YAAAA;QAAAA;KAAAA,GAAAA;AAAAA,EAtRvBoF,YAAAA,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,EAAAA,UAAAA,GAAAA,EAAAA,UAAAA,IAAAA,CAAAA,GAAAA,EAAAA,YAAAA,GAAAA,CAAAA,GAAAA,WAAAA,KAAAA,CAAAA,EAAAA,QAAAA,GAAAA,CAAAA,CAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA;QAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,OAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA;IAAAA;AAAAA,KAAAA,SAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,SAAAA,KAAAA,CAAAA,IAAAA,SAAAA,SAAAA,AAAAA;IAAAA,IAAAA,IAAAA,OAAAA,wBAAAA,CAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA,cAAAA,CAAAA;QAAAA,OAAAA,SAAAA,IAAAA,KAAAA,IAAAA,EAAAA,GAAAA,GAAAA;IAAAA;IAAAA,IAAAA,WAAAA,GAAAA,OAAAA,EAAAA,KAAAA;IAAAA,IAAAA,IAAAA,EAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA,OAAAA,EAAAA,IAAAA,CAAAA;AAAAA,GCFhB1D,YAAAA,SAAAA,CAAAA;IAAAA,SAAAA,EACR9S,CAAAA,EAAQO,CAAAA;QAAAA,kBAAAA,IAAAA,EAAAA;QAAAA,IAAAA,IAAAA,6BAAAA,IAAAA,EAAAA,AAAAA,CAAAA,EAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACbP,GAAQO;QAAAA,OAAAA,EAETqf,UAAAA,GAAarf,EAAKqf,UAAAA,IAAAA,CAAAA,GAAAA,EAClB8E,WAAAA,GAAcnkB,EAAKmkB,WAAAA,IAAAA,CAAAA,GAAAA,EAEnB1vB,IAAAA,GAAOuL,EAAKvL,IAAAA,IAAQ,QAAA,EACpB+jB,IAAAA,GAAO,GAAA,EAEPtE,KAAAA,IAAAA;IAAAA;IAAAA,OAAAA,YAAAA,GAAAA,IAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAIFG,IAAAA,CAAKzS,IAAAA,CAAKuP,QAAAA,CAAS3Y,MAAAA,IAAU,KAAA,CAAA,IAAA,CAC1BkV,MAAAA,CAAOsJ,UAAAA,GAAa,GAAA,IAAA,CACpBL,QAAAA,CAAS/e,QAAAA,CAAS1B,MAAAA,GAAS,EAAA;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA,SAIxBoM,CAAAA;gBAAAA,OAAAA,EAAAA,SAAAA,CAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,SAAAA,GAAAA,aAAAA,IAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACOA,IAAAA,EAER8hB,WAAAA,GAAc9hB,EAAQ8hB,WAAAA,IAAAA,CAAAA,GAAAA,EACtB1J,cAAAA,GAAiBpY,EAAQoY,cAAAA,IAAAA,CAAAA,GAAAA,IAAAA,CAE5BhN,MAAAA,CAAO2W,SAAAA,GAAY/hB,EAAQ8hB,WAAAA,CAAYC,SAAAA,IAAa,QAAA,IAAA,CACpD3W,MAAAA,CAAO4W,SAAAA,GAAYhiB,EAAQ8hB,WAAAA,CAAYE,SAAAA,IAAa,QAAA,IAAA,CACpD5W,MAAAA,CAAO6W,SAAAA,GAAYjiB,EAAQ8hB,WAAAA,CAAYG,SAAAA,IAAa,GAAA,IAAA,CACpD7W,MAAAA,CAAO8W,mBAAAA,GAAsBliB,EAAQ8hB,WAAAA,CAAYI,mBAAAA,IAAuB,GAAA,IAAA,CAExE9W,MAAAA,CAAO+W,cAAAA,GAAiBniB,EAAQoY,cAAAA,CAAe+J,cAAAA,EAAAA,IAAAA,CAC/C/W,MAAAA,CAAO+M,cAAAA,GAAiBnY,EAAQoY,cAAAA,CAAeD,cAAAA,EAAAA,IAAAA,CAE/C/M,MAAAA,CAAOwR,gBAAAA,GAAmB5c,EAAQ4c,gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,OAIhClO,SAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GADSqD,IAAAA,CAAKzS,IAAAA,EACCyS,IAAAA,CAAK5f,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,OAIpBid,aAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GADc2C,IAAAA,CAAKzS,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAItB2W,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA;gBAAAA,IAAAA,CACCmM,cAAAA,IACDnM,KAAAA,IAAAA,CACEoM,mBAAAA,CAAoBtQ,IAAAA,CAAKuQ,aAAAA,IAA+B,WAAdvQ,IAAAA,CAAK5f,IAAAA,GAAAA,IAAAA,CAEhDowB,eAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAIDhK,IAAIxG,IAAAA,CAAK8C,KAAAA,EACTlG,IAASoD,IAAAA,CAAKzS,IAAAA,CAAKqP,MAAAA;gBAAAA,EACrBC,aAAAA,GAAgBD,EAAOzY,MAAAA,EAAAA,EAEvBssB,SAAAA,GAAYzQ,IAAAA,CAAK1U,KAAAA,GAAOkb,EAAE3J,aAAAA,EAAAA,EAE1B6T,OAAAA,GAAUlK,EAAEiK,SAAAA,GAAU,GAAA,EAMtBE,KAAAA,GAAAA;oBAAAA,QACO/T;oBAAAA,WACGA,EAAOnS,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;wBAAAA,OACzBhE,SAAS4iB,EAAEkK,OAAAA,GAAU9oB,IAAI4e,EAAEiK,SAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAKVG,CAAAA;gBAAAA,IACbvV,IAAOV,mBAAmBiW,GAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GADa,UAEvC/U,IAAkBmE,IAAAA,CAAK3Z,MAAAA,GAASqV,cAAcL,IAC9CwV,IAAiBtV,gBAAgBF,KAAQQ,GACzCzV,IAAW4Z,IAAAA,CAAK3Z,MAAAA,GAAU+U,aAAaC,KAAQwV;gBAAAA,IAAAA,CAEhD/N,KAAAA,CAAMlH,KAAAA,GAAAA;oBAAAA,QACFP;oBAAAA,WACGA,EAAK5Q,GAAAA,CAAI,SAAA,CAAA;wBAAA,OAAKrE,IAAWvC,IAAIgY;oBAAAA;oBAAAA,iBACvBA;oBAAAA,UACPzV;gBAAAA,GAAAA,IAAAA,CAIN0qB,iBAAAA,IAAAA,IAAAA,CACAC,aAAAA,IAAAA,IAAAA,CACAC,YAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAIDxK,IAAIxG,IAAAA,CAAK8C,KAAAA,EACTmO,IAAW,SAAA,CAAA;oBAAA,OAAUrW,EAAOnQ,GAAAA,CAAI,SAAA,CAAA;wBAAA,OAAOkR,MAAMrR,GAAKkc,EAAE5K,KAAAA;oBAAAA;gBAAAA;gBAAAA,EAEtDkB,QAAAA,GAAWkD,IAAAA,CAAKzS,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;oBAAAA,IACnCgT,IAAS/W,EAAE+W,MAAAA,EACXsW,IAAertB,EAAEqtB,YAAAA,IAAAA,EAAAA;oBAAAA,OAAAA;wBAAAA,MAEdrtB,EAAEgV,IAAAA,IAAQhV,EAAEgV,IAAAA,CAAKsY,OAAAA,CAAQ,UAAU,SAACC,CAAAA;4BAAAA,OAAiB,OAARA,IAAc,UAAkB,OAARA,IAAc,SAAS;wBAAA;wBAAA,OAC3FxpB;wBAAAA,WACI/D,EAAEoZ,SAAAA;wBAAAA,QAELrC;wBAAAA,YACIqW,EAASrW;wBAAAA,cAEPsW;wBAAAA,gBACED,EAASC;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAMvB1K,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,IACV9C,IAAAA,CAAKgL,UAAAA,CAAWqG,OAAAA,EAAAA,OAAAA,KAAAA,CAAAA,EAChBC,SAAAA,GAAY9K,EAAE1J,QAAAA,CAAS0J,EAAE1J,QAAAA,CAAS3Y,MAAAA,GAAS,EAAA,CAAGotB,cAAAA,AAAAA;gBAAAA,EAG/CD,SAAAA,GAAY,IAAIjtB,MAAMmiB,EAAE3J,aAAAA,EAAerY,IAAAA,CAAK,OAAA,EAC5CsY,QAAAA,CAASrS,GAAAA,CAAI,SAAA,CAAA;oBAAA,EACZyf,UAAAA,CAAWzf,GAAAA,CAAI,SAACwE,CAAAA,EAAKhM,CAAAA;wBACnBgM,IAAMuX,EAAE8K,SAAAA,CAAUruB,EAAAA,IAAAA,CAAAA,EAClBquB,SAAAA,CAAUruB,EAAAA,GAAKgM,CAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAOhBuX,IAAIxG,IAAAA,CAAK8C,KACV9C;gBAAAA,IAAAA,CAAKzS,IAAAA,CAAKiQ,QAAAA,IAAAA,CAAAA,IAAAA,CACPsF,KAAAA,CAAMtF,QAAAA,GAAWwC,IAAAA,CAAKzS,IAAAA,CAAKiQ,QAAAA,CAAS/S,GAAAA,CAAI,SAAA,CAAA;oBAAA,OAAA,EAC1C8d,QAAAA,GAAW5M,MAAM9X,EAAEgC,KAAAA,EAAO2gB,EAAE5K,KAAAA,GAC1B/X,EAAEoK,OAAAA,IAASpK,CAAAA,EAAEoK,OAAAA,GAAAA,CAAAA,CAAAA,GAIVpK;gBAAAA,EAAAA,GAGNmc,IAAAA,CAAKzS,IAAAA,CAAK4P,QAAAA,IAAAA,CAAAA,IAAAA,CACP2F,KAAAA,CAAM3F,QAAAA,GAAW6C,IAAAA,CAAKzS,IAAAA,CAAK4P,QAAAA,CAAS1S,GAAAA,CAAI,SAAA,CAAA;oBAAA,OAAA,EAC1Cse,QAAAA,GAAWpN,MAAM9X,EAAEK,KAAAA,EAAOsiB,EAAE5K,KAAAA,GAAAA,EAC5BoN,MAAAA,GAASrN,MAAM9X,EAAEuZ,GAAAA,EAAKoJ,EAAE5K,KAAAA,GACtB/X,EAAEoK,OAAAA,IAASpK,CAAAA,EAAEoK,OAAAA,GAAAA,CAAAA,CAAAA,GACVpK;gBAAAA,EAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,GAAAA,IAAAA,IAAAA,EAMLiC,IAAM;gBAAA,IAEPka,IAAAA,CAAKgL,UAAAA,CAAWqG,OAAAA,EAAS;oBAAA,IACrB;oBAAA,IACFG,IAAa,IAAIntB,MAAM2b,IAAAA,CAAK8C,KAAAA,CAAMjG,aAAAA,EAAerY,IAAAA,CAAK;oBAAA,IAAA,CACrD+I,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;wBAAAA,IACtBgT,IAAS0F,EAAK/S,IAAAA,CAAKuP,QAAAA,CAASlV,EAAAA,CAAGgT,MAAAA;wBAAAA,CAAAA,CACjC9U,EAAAA,GAAO0rB,IAAaA,EAAW/mB,GAAAA,CAAI,SAACyW,CAAAA,EAAGtZ,CAAAA;4BAAAA,OAAMsZ,IAAItG,CAAAA,CAAOhT,EAAAA;wBAAAA;oBAAAA;gBAAAA;gBAAAA,IAIxD6pB,IAAgBzR,IAAAA,CAAKzS,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAA,CAAA;oBAAA,OAAK5G,CAAAA,CAAEiC,EAAAA;gBAAAA;gBAAAA,OAC/Cka,IAAAA,CAAKzS,IAAAA,CAAKiQ,QAAAA,IAAAA,EACE3V,IAAAA,CAAKmY,IAAAA,CAAKzS,IAAAA,CAAKiQ,QAAAA,CAAS/S,GAAAA,CAAI,SAAA,CAAA;oBAAA,OAAK5G,EAAEgC,KAAAA;gBAAAA,KAE/Cma,IAAAA,CAAKzS,IAAAA,CAAK4P,QAAAA,IAAAA,IAAAA,CACP5P,IAAAA,CAAK4P,QAAAA,CAAS1S,GAAAA,CAAI,SAAA,CAAA;oBAAA,EACR5C,IAAAA,CAAAA;wBAAMhE,EAAEuZ,GAAAA;wBAAKvZ,EAAEK,KAAAA;qBAAAA;gBAAAA,IAAAA,AAAAA,CAAAA,IAAAA,EAAAA,AAAAA,EAIrBO,MAAAA,CAAAA,KAAAA,CAAAA,GAAAA,qBAAUgtB;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAIhBxY,IAAAA;oBAAAA;wBAEF;wBAAA;4BAAA,MAEO+G,IAAAA,CAAK3G,MAAAA,CAAO4W,SAAAA;4BAAAA,OACXjQ,IAAAA,CAAK1U,KAAAA;4BAAAA,gBACI0U,IAAAA,CAAK3G,MAAAA,CAAO8W,mBAAAA;wBAAAA;wBAG7B,CAAA;4BAAA,OACQnQ,IAAAA,CAAK8C,KAAAA,CAAMlH,KAAAA;wBAAAA,CAAAA,EACjB6J,IAAAA,CAAKzF,IAAAA;qBAAAA;oBAAAA;wBAIP;wBAAA;4BAAA,MAEOA,IAAAA,CAAK3G,MAAAA,CAAO2W,SAAAA;4BAAAA,QACVhQ,IAAAA,CAAK3Z,MAAAA;wBAAAA;wBAGd,CAAA;4BAAA,IACKmgB,IAAIxG,IAAAA,CAAK8C,KAAAA;4BAAAA,OAAAA,EACX6N,KAAAA,CAAM/H,UAAAA,GAAanL,mBAAmBuC,IAAAA,CAAK1U,KAAAA,EAC5Ckb,EAAEmK,KAAAA,CAAM/T,MAAAA,EAAQoD,IAAAA,CAAK3G,MAAAA,CAAO6W,SAAAA,GAEtB1J,EAAEmK,KAAAA;wBAAAA,CAAAA,EACRlL,IAAAA,CAAKzF,IAAAA;qBAAAA;oBAAAA;wBAIP;wBAAA;4BAAA,OAEQA,IAAAA,CAAK1U,KAAAA;4BAAAA,KACP;wBAAA;wBAEN,CAAA;4BAAA,OACQ0U,IAAAA,CAAK8C,KAAAA,CAAM3F,QAAAA;wBAAAA,CAAAA,EACjBsI,IAAAA,CAAKzF,IAAAA;qBAAAA;iBAAAA,EAIL0R,IAAc1R,IAAAA,CAAK8C,KAAAA,CAAMhG,QAAAA,CAAS5D,MAAAA,CAAO,SAAA,CAAA;oBAAA,OAAqB,UAAhBrV,EAAEoZ,SAAAA;gBAAAA,IAChD0U,IAAe3R,IAAAA,CAAK8C,KAAAA,CAAMhG,QAAAA,CAAS5D,MAAAA,CAAO,SAAA,CAAA;oBAAA,OAAqB,WAAhBrV,EAAEoZ,SAAAA;gBAAAA,IAEjD2U,IAAcF,EAAYjnB,GAAAA,CAAI,SAAA,CAAA;oBAAA,IAC7BkF,IAAQ9L,EAAE8L,KAAAA;oBAAAA,OAAAA;wBAEb,cAAmB9L,EAAE8L,KAAAA;wBAAAA;4BAAAA,OAEbA;4BAAAA,OACAyX,EAAK5H,MAAAA,CAAO7P,EAAAA;4BAAAA,SACVyX,EAAK4D,UAAAA,CAAWqG,OAAAA;4BAAAA,kBAGPjK,EAAK/N,MAAAA,CAAOwR,gBAAAA;4BAAAA,WACnBzD,EAAK/gB,MAAAA,GAASsY;wBAAAA;wBAE1B,CAAA;4BAAA,IACK6H,IAAIxG,IAAAA,CAAK8C,KAAAA,EACTjf,IAAI2iB,EAAE1J,QAAAA,CAASnN,EAAAA,EACf0hB,IAAUrR,IAAAA,CAAKgL,UAAAA,CAAWqG,OAAAA,EAE1BQ,IAAa7R,IAAAA,CAAKgL,UAAAA,CAAW6G,UAAAA,IAAcnT,uBAC3C0L,IAAY5D,EAAEiK,SAAAA,GAAa,CAAA,IAAIoB,CAAAA,GAC/B3K,IAAWkD,IAAWiH,CAAAA,IAAU,IAAIK,EAAYvtB,MAAAA,AAAAA,GAEhD+jB,IAAa1B,EAAEmK,KAAAA,CAAMrI,SAAAA,CAAU7d,GAAAA,CAAI,SAAA,CAAA;gCAAA,OAAK6B,IAAI8d,IAAU;4BAAA;4BACtDiH,KAAAA,CAAAA,IACUnJ,EAAWzd,GAAAA,CAAI,SAAA,CAAA;gCAAA,OAAKvD,IAAIggB,IAAWvX;4BAAAA,EAAAA;4BAAAA,IAG7CiN,IAAS,IAAIvY,MAAMmiB,EAAE3J,aAAAA,EAAerY,IAAAA,CAAK;4BAC1Cwb,IAAAA,CAAK3G,MAAAA,CAAOwR,gBAAAA,IAAAA,CAAAA,IACXwG,KAAWxtB,EAAE8L,KAAAA,KAAU6W,EAAE1J,QAAAA,CAAS3Y,MAAAA,GAAS,IACpCN,EAAEqtB,YAAAA,GAEFrtB,EAAE+W,MAAAA,AAAAA;4BAAAA,IAITuP,IAAU,IAAI9lB,MAAMmiB,EAAE3J,aAAAA,EAAerY,IAAAA,CAAK;4BAAA,OAC3C6sB,KAAAA,CAAAA,IACQxtB,EAAEqmB,UAAAA,CAAWzf,GAAAA,CAAI,SAACnE,CAAAA,EAAGrD,CAAAA;gCAAAA,OAAMqD,IAAIzC,EAAE0tB,cAAAA,CAAetuB,EAAAA;4BAAAA,EAAAA,GAAAA;gCAAAA,YAI9CilB;gCAAAA,YACArkB,EAAEqmB,UAAAA;gCAAAA,SACLC;gCAAAA,QAEDvN;gCAAAA,UAEE4J,EAAE5K,KAAAA,CAAMxV,QAAAA;gCAAAA,WACPgkB;gCAAAA,UACDlD;4BAAAA;wBAAAA,CAAAA,EAEVzB,IAAAA,CAAK2B;qBAAAA;gBAAAA,IAIL0K,IAAcH,EAAalnB,GAAAA,CAAI,SAAA,CAAA;oBAAA,IAC9BkF,IAAQ9L,EAAE8L,KAAAA;oBAAAA,OAAAA;wBAEb,eAAoB9L,EAAE8L,KAAAA;wBAAAA;4BAAAA,OAEdA;4BAAAA,OACAyX,EAAK5H,MAAAA,CAAO7P,EAAAA;4BAAAA,SACVyX,EAAK7W,OAAAA;4BAAAA,UACJ6W,EAAK0I,WAAAA,CAAYzf,QAAAA;4BAAAA,YACf+W,EAAK0I,WAAAA,CAAYrf,UAAAA;4BAAAA,QACrB2W,EAAK0I,WAAAA,CAAY3f,MAAAA;4BAAAA,UACfiX,EAAK0I,WAAAA,CAAYlF,QAAAA;4BAAAA,UACjBxD,EAAK0I,WAAAA,CAAYnF,QAAAA;4BAAAA,kBAGTvD,EAAK/N,MAAAA,CAAOwR,gBAAAA;wBAAAA;wBAE/B,CAAA;4BAAA,IACKrE,IAAIxG,IAAAA,CAAK8C,KAAAA,EACTjf,IAAI2iB,EAAE1J,QAAAA,CAASnN,EAAAA,EACfoiB,IAAUvL,EAAE5K,KAAAA,CAAM0M,SAAAA,CAAU,EAAA,GAAK9B,EAAE5K,KAAAA,CAAMxV,QAAAA,GAC1CogB,EAAE5K,KAAAA,CAAM0M,SAAAA,CAAU,EAAA,GAAK9B,EAAE5K,KAAAA,CAAMxV,QAAAA;4BAAAA,OAAAA;gCAAAA,YAGrBogB,EAAEmK,KAAAA,CAAMrI,SAAAA;gCAAAA,YACRzkB,EAAEqmB,UAAAA;gCAAAA,QAENrmB,EAAE+W,MAAAA;gCAAAA,UAEAmX;gCAAAA,QACF/R,IAAAA,CAAK8P,WAAAA,CAAYkC,OAAAA,IAAWpT;4BAAAA;wBAAAA,CAAAA,EAEpC6G,IAAAA,CAAK2B;qBAAAA;gBAAAA,IAIL6K,IAAAA;oBAAAA;wBAEF;wBAAA;4BAAA,OAEQjS,IAAAA,CAAK1U,KAAAA;4BAAAA,KACP;wBAAA;wBAEN,CAAA;4BAAA,OACQ0U,IAAAA,CAAK8C,KAAAA,CAAMtF,QAAAA;wBAAAA,CAAAA,EACjBiI,IAAAA,CAAKzF,IAAAA;qBAAAA;iBAAAA;gBAAAA,IAIU/G,EAAiBxU,MAAAA,CAAOmtB,GAAaE,GAAaG;gBAAAA,IAEjEC,IAAAA;oBAAa;oBAAY;iBAAA;gBAAA,IAAA,CACxBC,kBAAAA,GAAAA,EAAAA,EAAAA,IAAAA,CAEA5N,UAAAA,GAAa,IAAIW,IAAIjM,EACxBC,MAAAA,CAAO,SAAA,CAAA;oBAAA,OAAA,CAASgZ,EAAU/Y,QAAAA,CAASxN,CAAAA,CAAK,EAAA,KAAOyb,EAAKtE,KAAAA,CAAMnX,CAAAA,CAAK,EAAA,CAAA;gBAAA,GAC/DlB,GAAAA,CAAI,SAAA,CAAA;oBAAA,IACAwgB,IAAYrS,aAAAA,KAAAA,CAAAA,KAAAA,GAAAA,qBAAgBjN;oBAAAA,OAAAA,AAC7BA,CAAAA,CAAAA,CAAK,EAAA,CAAGwN,QAAAA,CAAS,gBAAgBxN,CAAAA,CAAK,EAAA,CAAGwN,QAAAA,CAAS,WAAA,KAAA,EAC/CgZ,kBAAAA,CAAmBtqB,IAAAA,CAAKojB,IAAAA;wBAEtBtf,CAAAA,CAAK,EAAA;wBAAIsf;qBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAKdmH,WAAAA,GAAAA,CAAAA;gBAAAA,IAED5L,IAAIxG,IAAAA,CAAK8C,KAAAA,EACTuP,IAAUrS,IAAAA,CAAK3G,MAAAA,CAAO+W,cAAAA,EACtBkC,IAAUtS,IAAAA,CAAK3G,MAAAA,CAAO+M,cACbI;gBAAAA,EAAEmK,KAAAA,CAAM/T,MAAAA,CAEdnS,GAAAA,CAAI,SAACzD,CAAAA,EAAO2I,CAAAA;oBAAAA,IACdiL,IAASmL,EAAKjD,KAAAA,CAAMhG,QAAAA,CAASrS,GAAAA,CAAI,SAAC4V,CAAAA,EAAKzY,CAAAA;wBAAAA,IACtC/B,IAAQwa,EAAIzF,MAAAA,CAAOjL,EAAAA;wBAAAA,OAAAA;4BAAAA,OAEf0Q,EAAIxH,IAAAA;4BAAAA,OACJhT;4BAAAA,MACDwa,EAAI6J,UAAAA,CAAWva,EAAAA;4BAAAA,OACdoW,EAAKvG,MAAAA,CAAO5X,EAAAA;4BAAAA,WACR0qB,IAAUA,EAAQzsB,KAASA;wBAAAA;oBAAAA;oBAAAA,EAInCusB,WAAAA,CAAYziB,EAAAA,GAAAA;wBAAAA,OACT3I;wBAAAA,gBACSqrB,IAAUA,EAAQrrB,KAASA;wBAAAA,MACrCwf,EAAEmK,KAAAA,CAAMrI,SAAAA,CAAU3Y,EAAAA;wBAAAA,QAChBiL;wBAAAA,UACE4L,EAAE8K,SAAAA,CAAU3hB,EAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAOnB0G,SAAAA,CAAU+J,gBAAAA,CAAiB,aAAa,SAAC0F,CAAAA;oBAAAA,IACzC1iB,IAAIylB,EAAKvG,QAAAA,EACT5Z,IAAI3H,UAAU8nB,EAAKxS,SAAAA,GACnBkc,IAAOzM,EAAEgH,KAAAA,GAAQpkB,EAAEnH,IAAAA,GAAOiC,cAAcJ,IACxCovB,IAAO1M,EAAEiH,KAAAA,GAAQrkB,EAAEvH,GAEpBqxB;oBAAAA,IAAO3J,EAAKxiB,MAAAA,GAASlD,aAAaC,MACjCovB,IAAQrvB,aAAaC,KAAAA,EACnBqvB,mBAAAA,CAAoBF,KAAAA,EAEpBvO,GAAAA,CAAI/D,OAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAKQsS,CAAAA;gBAAAA,IACf/L,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,IACT0D,EAAE8K,SAAAA,EAAAA;oBAAAA,IAEF3hB,IAAQmM,kBAAkByW,GAAM/L,EAAEmK,KAAAA,CAAMrI,SAAAA,EAAAA,CAAW;oBAAA,IACnD3Y,KAAS,GAAG;wBAAA,IACX+iB,IAAM1S,IAAAA,CAAKoS,WAAAA,CAAYziB,EAAAA;wBAAAA,IAAAA,CAEtBqU,GAAAA,CAAIyH,SAAAA,CACRiH,EAAIxH,IAAAA,GAAOlL,IAAAA,CAAKgE,GAAAA,CAAI/Y,MAAAA,CAAOqB,CAAAA,EAC3BomB,EAAIC,QAAAA,GAAW3S,IAAAA,CAAKgE,GAAAA,CAAI/Y,MAAAA,CAAO3E,CAAAA,EAAAA;4BAC9BuS,MAAM6Z,EAAIE,cAAAA;4BAAgB/sB,OAAO;wBAAA,GAClC6sB,EAAI9X,MAAAA,EACJjL,IAAAA,IAAAA,CAGIqU,GAAAA,CAAI0H,OAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA,EAKNlF,IAAIxG,IAAAA,CAAKzS,IACViZ;gBAAAA,EAAE1J,QAAAA,CAAS3Y,MAAAA,GAAS,KAAA,CAAA,IAAA,CACjB6gB,UAAAA,CAAWgC,WAAAA,GAAc,IAAA,EAC5BlK,QAAAA,CAASrS,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;oBAAAA,IACdsf,IAAWzI,sBAGXxd,IAAOuM,UAAAA,IAEC5F,GACX,KACAsf,GACA+B,EAAKzJ,MAAAA,CAAO5X,EAAAA,EACZ/D,EAAEgV,IAAAA,EACFoQ,EAAK5P,MAAAA,CAAOgJ,eAAAA;oBAAAA,EACR2C,UAAAA,CAAWzkB,WAAAA,CAAYU;gBAAAA,EAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAS3B+e,IAAAA,CAAKmE,IAAAA,EAAAA,OAAAA,KAAAA,CAAAA,IAAAA,CACFA,IAAAA,GAAO,CAAA;gBAGVnE,IAAAA,CAAK6S,aAAAA,IAAAA,IAAAA,CACFA,aAAAA,CAAc1P,OAAAA,CAAQ,SAAA,CAAA;oBAAA,IACtBza,IAAIoB,EAAEwX,OAAAA;oBAAAA,EACR/W,UAAAA,CAAWyK,WAAAA,CAAYtM;gBAAAA,IAAAA,IAAAA,CAItBmqB,aAAAA,GAAgB7S,IAAAA,CAAKmS,kBAAAA,CAAmB1nB,GAAAA,CAAI,SAAA,CAAA;oBAAA,OAAA;wBAAA,MAEzCyW,EAAE8I,QAAAA;wBAAAA,SAAAA,KACCxkB;wBAAAA,OACF0b,EAAE+I,KAAAA;oBAAAA;gBAAAA,IAAAA,KAIoBzkB,MAA5Bwa,IAAAA,CAAK8C,KAAAA,CAAMgQ,YAAAA,IAAAA,CAAAA,IAAAA,CACRhQ,KAAAA,CAAMgQ,YAAAA,GAAe9S,IAAAA,CAAK8C,KAAAA,CAAMjG,aAAAA,GAAgB,CAAA,GAAA,IAAA,CAIjDgW,aAAAA,CAAcpoB,GAAAA,CAAI,SAAA,CAAA;oBAAA,IAClBsoB,IAAclvB,EAAEomB,KAAAA,CAAM+I,EAAKlQ,KAAAA,CAAMgQ,YAAAA,CAAAA;oBAAAA,EAEnCxR,OAAAA,GAAUF,WAAAA,CAAYvd,EAAEzD,IAAAA,CAAAA,CAAM2yB,IAAAA,EAC3BvO,QAAAA,CAASjkB,WAAAA,CAAYsD,EAAEyd,OAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAK1BtB,IAAAA,CAAK6S,aAAAA,IAAAA,IAAAA,CACFA,aAAAA,CAAc1P,OAAAA,CAAQ,SAAA,CAAA;oBAAA,IACtBza,IAAIoB,EAAEwX,OAAAA;oBAAAA,EACR/W,UAAAA,CAAWyK,WAAAA,CAAYtM;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAMtB0C,MAAAA,CAAOgV,gBAAAA,CAAiB,eAAe;oBAAA,EACtCmB,aAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAKD4Q,kBAAAA,CAAmB1nB,GAAAA,CAAI,SAAA,CAAA;oBAAA,EACzBwf,KAAAA,CAAMxf,GAAAA,CAAI,SAAA,CAAA;wBAAA,EACN2V,gBAAAA,CAAiB,SAAS;4BAAA,IAC1BzQ,IAAQiB,EAAKqB,YAAAA,CAAa;4BAAA,EACzBghB,mBAAAA,CAAoBtjB;wBAAAA;oBAAAA;gBAAAA,IAAAA,IAAAA,CAMvBqU,GAAAA,CAAI3N,SAAAA,CAAU+J,gBAAAA,CAAiB,SAAS;oBAAA,IACxCzQ,IAAQujB,EAAKlP,GAAAA,CAAI3N,SAAAA,CAAUpE,YAAAA,CAAa;oBAAA,EACvCghB,mBAAAA,CAAoBtjB;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,IAAAA,IAAAA;gBAAAA,IAAAA,CAKrBkjB,aAAAA,CAAcpoB,GAAAA,CAAI,SAAA,CAAA;oBAAA,IAClBsoB,IAAclvB,EAAEomB,KAAAA,CAAMkJ,EAAKrQ,KAAAA,CAAMgQ,YAAAA,CAAAA;oBAAAA,aAAAA,CACvBjvB,EAAEzD,IAAAA,CAAAA,CAAM2yB,GAAalvB,EAAEyd,OAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAKjC2R,mBAAAA,CAAoBjT,IAAAA,CAAK8C,KAAAA,CAAMgQ,YAAAA,GAAe;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,CAI9CG,mBAAAA,CAAoBjT,IAAAA,CAAK8C,KAAAA,CAAMgQ,YAAAA,GAAe;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAGvCnjB,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAMqQ,IAAAA,CAAK8C,KAAAA,CAAMgQ,YAAAA,EACzBtM,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,OAAAA;oBAAAA,OAELnT;oBAAAA,OACA6W,EAAEmK,KAAAA,CAAM/T,MAAAA,CAAOjN,EAAAA;oBAAAA,QACd6W,EAAE1J,QAAAA,CAASrS,GAAAA,CAAI,SAAA,CAAA;wBAAA,OAAK5G,EAAE+W,MAAAA,CAAOjL,EAAAA;oBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAKnBA,CAAAA;gBAAAA,IACf6W,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,CAAAA,IACLlZ,SAAS+F,EAAAA,IACN,KAAGA,CAAAA,IAAQ,CAAA,GACnBA,KAAS6W,EAAEmK,KAAAA,CAAM/T,MAAAA,CAAOzY,MAAAA,IAAQwL,CAAAA,IAAQ6W,EAAEmK,KAAAA,CAAM/T,MAAAA,CAAOzY,MAAAA,GAAS,CAAA,GAChEwL,MAAU6W,EAAEsM,YAAAA,IAAAA,CAAAA,EACbA,YAAAA,GAAenjB,GAAAA,KACZqQ,IAAAA,CAAK5U,MAAAA,EAAQ,eAAe4U,IAAAA,CAAKoT,YAAAA,GAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAM1BpsB,CAAAA,EAAOqsB,CAAAA;gBAAAA,IAAe1jB,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAMqQ,IAAAA,CAAK8C,KAAAA,CAAMjG,aAAAA;gBAAAA,OAAAA,EAAAA,SAAAA,CAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,SAAAA,GAAAA,gBAAAA,IAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAChC7V,GAAOqsB,GAAe1jB,IAAAA,IAAAA,CACpCpC,IAAAA,CAAKqP,MAAAA,CAAO0W,MAAAA,CAAO3jB,GAAO,GAAG3I,IAAAA,IAAAA,CAC7BuG,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;oBAAAA,EACxBgT,MAAAA,CAAO0Y,MAAAA,CAAO3jB,GAAO,GAAG0jB,CAAAA,CAAczrB,EAAAA;gBAAAA,IAAAA,IAAAA,CAEpC8c,MAAAA,CAAO1E,IAAAA,CAAKzS,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAGFoC,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAQqQ,IAAAA,CAAK8C,KAAAA,CAAMjG,aAAAA,GAAc;gBAC5CmD,IAAAA,CAAKzS,IAAAA,CAAKqP,MAAAA,CAAOzY,MAAAA,IAAU,KAAA,CAAA,OAAA,EAAA,SAAA,CAAA,SAAA,IAAA,OAAA,cAAA,CAAA,EAAA,SAAA,GAAA,mBAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAGTwL,IAAAA,IAAAA,CACjBpC,IAAAA,CAAKqP,MAAAA,CAAO0W,MAAAA,CAAO3jB,GAAO,IAAA,IAAA,CAC1BpC,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAA,CAAA;oBAAA,EACpBmQ,MAAAA,CAAO0Y,MAAAA,CAAO3jB,GAAO;gBAAA,IAAA,IAAA,CAEnB+U,MAAAA,CAAO1E,IAAAA,CAAKzS,IAAAA,CAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGJ8lB,CAAAA;gBAAAA,IAAe1jB,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,GAAAA,SAAAA,CAAAA,EAAAA,GAAM;gBAAA,IAAA,CAC7BpC,IAAAA,CAAKuP,QAAAA,CAASnN,EAAAA,CAAOiL,MAAAA,GAASyY,GAAAA,IAAAA,CAC9B3O,MAAAA,CAAO1E,IAAAA,CAAKzS,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAKHuP,CAAAA;gBAAAA,IAAAA,CACTvP,IAAAA,CAAKuP,QAAAA,CAASrS,GAAAA,CAAI,SAAC5G,CAAAA,EAAG+D,CAAAA;oBACvBkV,CAAAA,CAASlV,EAAAA,IAAAA,CAAAA,EACTgT,MAAAA,GAASkC,CAAAA,CAASlV,EAAAA,AAAAA;gBAAAA,IAAAA,IAAAA,CAGjB8c,MAAAA,CAAO1E,IAAAA,CAAKzS,IAAAA;YAAAA;QAAAA;KAAAA,GAAAA;AAAAA,EA5jBoBqU,YAAAA,iBAAAA;IAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,EAAAA;YAAAA,EAAAA,UAAAA,GAAAA,EAAAA,UAAAA,IAAAA,CAAAA,GAAAA,EAAAA,YAAAA,GAAAA,CAAAA,GAAAA,WAAAA,KAAAA,CAAAA,EAAAA,QAAAA,GAAAA,CAAAA,CAAAA,GAAAA,OAAAA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA;QAAAA;IAAAA;IAAAA,OAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;QAAAA,OAAAA,KAAAA,EAAAA,EAAAA,SAAAA,EAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA;IAAAA;AAAAA,KAAAA,SAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,SAAAA,KAAAA,CAAAA,IAAAA,SAAAA,SAAAA,AAAAA;IAAAA,IAAAA,IAAAA,OAAAA,wBAAAA,CAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA,cAAAA,CAAAA;QAAAA,OAAAA,SAAAA,IAAAA,KAAAA,IAAAA,EAAAA,GAAAA,GAAAA;IAAAA;IAAAA,IAAAA,WAAAA,GAAAA,OAAAA,EAAAA,KAAAA;IAAAA,IAAAA,IAAAA,EAAAA,GAAAA;IAAAA,IAAAA,KAAAA,MAAAA,GAAAA,OAAAA,EAAAA,IAAAA,CAAAA;AAAAA,GCFlB2R,aAAAA,SAAAA,CAAAA;IAAAA,SAAAA,EACRnoB,CAAAA,EAAQO,CAAAA;QAAAA,kBAAAA,IAAAA,EAAAA;QAAAA,IAAAA,IAAAA,6BAAAA,IAAAA,EAAAA,AAAAA,CAAAA,EAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACbP,GAAQO;QAAAA,OAAAA,EACTvL,IAAAA,GAAO,SAAA,EACP2iB,WAAAA,GAAc,GAAA,EACdoB,IAAAA,GAAO,GAAA,EAEPtE,KAAAA,IAAAA;IAAAA;IAAAA,OAAAA,YAAAA,GAAAA,IAAAA,eAAAA,GAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAGIlU,CAAAA;gBAAAA,OAAAA,EAAAA,SAAAA,CAAAA,SAAAA,IAAAA,OAAAA,cAAAA,CAAAA,EAAAA,SAAAA,GAAAA,aAAAA,IAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EACOA,IAAAA,IAAAA,CACXigB,SAAAA,GAAY5L,IAAAA,CAAK4L,SAAAA,CAAUnG,IAAAA,CAAKzF,IAAAA,GAAAA,IAAAA,CAChC6L,UAAAA,GAAa7L,IAAAA,CAAK6L,UAAAA,CAAWpG,IAAAA,CAAKzF,IAAAA,GAAAA,IAAAA,CAElC8L,UAAAA,GAAangB,EAAKmgB,UAAAA,IAAc,IAAA,IAAA,CAChCzS,MAAAA,CAAO0S,UAAAA,GAAapgB,EAAKogB,UAAAA,IAAc,GAAA,IAAA,CAEvC5f,SAAAA,GAAYR,EAAKQ,SAAAA,IAAAA,CAAa,GAAA,IAAA,CAC9B4b,WAAAA,GAAcpc,EAAKoc,WAAAA,IAAe;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAAA,IAAA,IAAA;gBAAA,OAAA,EAAA,SAAA,CAAA,SAAA,IAAA,OAAA,cAAA,CAAA,EAAA,SAAA,GAAA,QAAA,IAAA,EAAA,IAAA,CAAA,IAAA;gBAAA,IAKnCvB,IAAIxG,IAAAA,CAAK8C,KAAAA;gBAAAA,IAAAA,CACR/d,MAAAA,GACJib,IAAAA,CAAK3Z,MAAAA,GAAS2Z,IAAAA,CAAK1U,KAAAA,GAChB0U,IAAAA,CAAK9T,MAAAA,CAAOI,CAAAA,GAAI0T,IAAAA,CAAK+H,WAAAA,GAAc,IACnC/H,IAAAA,CAAK9T,MAAAA,CAAO5F,CAAAA,GAAI0Z,IAAAA,CAAK+H,WAAAA,GAAc;gBAAA,IAE/BhjB,IAAsBib,IAAAA,CAAtBjb,MAAAA,EAAQoH,IAAc6T,IAAAA,CAAd7T,SAAAA,EAEV6f,IAAuBxF,EAAEyF,gBAAAA,IAAAA,EAAAA;gBAAAA,EAC7BnE,YAAAA,GAAAA,EAAAA,EAAAA,EACAmE,gBAAAA,GAAAA,EAAAA;gBAAAA,IACEC,IAAW,MAAMlM,IAAAA,CAAK3G,MAAAA,CAAO0S,UAAAA;gBAAAA,EAE/BtF,WAAAA,CAAYhc,GAAAA,CAAI,SAACkc,CAAAA,EAAO/e,CAAAA;oBAAAA,IACnBmkB,IAAaG,GACbC,IAAmBxF,IAAQH,EAAEO,UAAAA,GAAczH,YAC3ClT,IAAW+f,IAAkB,MAAM,IAAG,GACtCC,IAAYjgB,IAAAA,CAAaggB,IAAkBA,GAC3CE,IAAWH,KAAsBE,GACjCpgB,IAAgBnH,mBAAmBknB,GAAYhnB,IAC/CkH,IAAcpH,mBAAmBwnB,GAAUtnB,IAE3CunB,IAAehM,EAAK6D,IAAAA,IAAQ6H,CAAAA,CAAqBpkB,EAAAA,EAEnD2kB,IAAAA,KAAAA,GAASC,IAAAA,KAAAA;oBACVlM,EAAK6D,IAAAA,GAAAA,CAAAA,IACImI,IAAeA,EAAatgB,aAAAA,GAAgBA,GAAAA,IAC9CsgB,IAAeA,EAAargB,WAAAA,GAAcD,CAAAA,IAAAA,CAAAA,IAExCA,GAAAA,IACFC,CAAAA;oBAAAA,IAEJwgB,IACe,QAApBN,IACGtf,oBAAoB0f,GAAUC,GAAQlM,EAAKpU,MAAAA,EAAQoU,EAAKvb,MAAAA,EAAQub,EAAKnU,SAAAA,EAAWC,KAChFQ,qBAAqB2f,GAAUC,GAAQlM,EAAKpU,MAAAA,EAAQoU,EAAKvb,MAAAA,EAAQub,EAAKnU,SAAAA,EAAWC;oBAAAA,EAEnF0b,YAAAA,CAAajgB,IAAAA,CAAK4kB,IAAAA,EAClBR,gBAAAA,CAAiBpkB,IAAAA,CAAAA;wBAAAA,eAAAA;wBAAAA,aAAAA;wBAAAA,OAGX8e;wBAAAA,OACAH,EAAEO,UAAAA;wBAAAA,YAAAA;wBAAAA,UAAAA;wBAAAA,OAGFqF;oBAAAA;gBAAAA,IAAAA,IAAAA,CAIJjI,IAAAA,GAAO;YAAA;QAAA;QAAA;YAAA,KAAA;YAAA,OAAA;gBAAA,IAIRqC,IAAIxG,IAAAA,CAAK8C,KAAAA,EAET7J,IAAAA;oBAAAA;wBAEF;wBAAA,CAAA;wBAEA,CAAA;4BAAA,OAAA;gCAAA,cAEgBuN,EAAEsB,YAAAA;gCAAAA,QACR9H,IAAAA,CAAKR,MAAAA;gCAAAA,aACAQ,IAAAA,CAAK+H,WAAAA;4BAAAA;wBAAAA,CAAAA,EAElBtC,IAAAA,CAAKzF,IAAAA;qBAAAA;iBAAAA;gBAAAA,IAAAA,CAIJuE,UAAAA,GAAa,IAAIW,IAAIjM,EACxBxO,GAAAA,CAAI,SAAA,CAAA;oBAAA,IACAwgB,IAAYrS,aAAAA,KAAAA,CAAAA,KAAAA,GAAAA,qBAAgBjN;oBAAAA,OAAAA;wBACxBA,CAAAA,CAAK,EAAA;wBAAIsf;qBAAAA;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAIAyB,CAAAA;gBAAAA,IACZ3nB,IAAuBib,IAAAA,CAAvBjb,MAAAA,EAAQ+mB,IAAe9L,IAAAA,CAAf8L,UAAAA,EACTvD,IAAW1jB,mBAAmB6nB,EAASX,UAAAA,GAAYW,EAAS5nB,KAAAA,GAAQ,GAAGC;gBAAAA,OAAAA,iBACtDwjB,EAASjc,CAAAA,GAAKwf,IAAAA,QAAiBvD,EAASjiB,CAAAA,GAAKwlB,IAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAG1D1b,CAAAA,EAAKxI,CAAAA,EAAE+kB,CAAAA,EAAK7G,CAAAA;gBAAAA,IAClB1V,GAAAA;oBAAAA,IACE9G,IAAQ0W,IAAAA,CAAKR,MAAAA,CAAO5X,EAAAA;oBAAAA,IACvB+kB,GAAM;wBAAA,UACEvc,GAAM4P,IAAAA,CAAK4M,mBAAAA,CAAoB5M,IAAAA,CAAK8C,KAAAA,CAAMmJ,gBAAAA,CAAiBrkB,EAAAA,IAAAA,EAChE1H,KAAAA,CAAMsO,MAAAA,GAASnF,mBAAmBC,GAAO;wBAAA,IAC1CujB,IAAQ9rB,UAAUif,IAAAA,CAAKlK,GAAAA,GACvBxJ,IAAIwZ,EAAEgH,KAAAA,GAAQD,EAAMtrB,IAAAA,GAAO,IAC3B+E,IAAIwf,EAAEiH,KAAAA,GAAQF,EAAM1rB,GAAAA,GAAM,IAC1B+e,IAAAA,AAASF,CAAAA,IAAAA,CAAKgN,gBAAAA,IAAoBhN,IAAAA,CAAKgN,gBAAAA,CAAiB7oB,MAAAA,GAAS,IAClE6b,IAAAA,CAAKgN,gBAAAA,CAAiBplB,EAAAA,GAAKoY,IAAAA,CAAK8C,KAAAA,CAAMlG,MAAAA,CAAOhV,EAAAA,AAAAA,IAAM,MAClDqlB,IAAAA,AAAuC,CAAA,MAA5BjN,IAAAA,CAAK8C,KAAAA,CAAM2D,WAAAA,CAAY7e,EAAAA,GAAWoY,IAAAA,CAAK8C,KAAAA,CAAMiE,UAAAA,AAAAA,EAAYjjB,OAAAA,CAAQ;wBAAA,IAAA,CAC3EkgB,GAAAA,CAAIyH,SAAAA,CAAUnf,GAAGhG,GAAAA;4BAAIuS,MAAMqH;4BAAOra,OAAOonB,IAAU;wBAAA,IAAA,IAAA,CACnDjJ,GAAAA,CAAI0H,OAAAA;oBAAAA,OAAAA,UAECtb,GAAK,uBAAA,IAAA,CACV4T,GAAAA,CAAI/D,OAAAA,IAAAA,EACJ/f,KAAAA,CAAMsO,MAAAA,GAASlF;gBAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAKhB+M,SAAAA,CAAU+J,gBAAAA,CAAiB,aAAaJ,IAAAA,CAAK4L,SAAAA,GAAAA,IAAAA,CAC7CvV,SAAAA,CAAU+J,gBAAAA,CAAiB,cAAcJ,IAAAA,CAAK6L,UAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA,SAG1C/F,CAAAA;gBAAAA,IACHljB,IAASkjB,EAAEljB,MAAAA,EACbsqB,IAASlN,IAAAA,CAAKuE,UAAAA,CAAW6G,GAAAA,CAAI,eAAezD,KAAAA,EAC5CwF,IAAYnN,IAAAA,CAAKoN,mBAAAA,EACjBC,IAAarN,IAAAA,CAAKsN,cAAAA;gBAAAA,IACnBJ,EAAO/T,QAAAA,CAASvW,IAAS;oBAAA,IACvBgF,IAAIslB,EAAO1R,OAAAA,CAAQ5Y;oBAAAA,IAAAA,CAClB2qB,UAAAA,CAAWF,GAAYF,GAAAA,CAAU,IAAA,IAAA,CACjCG,cAAAA,GAAiB1qB,GAAAA,IAAAA,CACjBwqB,mBAAAA,GAAsBxlB,GAAAA,IAAAA,CACtB2lB,UAAAA,CAAW3qB,GAAQgF,GAAAA,CAAG,GAAMke;gBAAAA,OAAAA,IAAAA,CAE5B+F,UAAAA;YAAAA;QAAAA;QAAAA;YAAAA,KAAAA;YAAAA,OAAAA;gBAAAA,IAAAA,CAKD0B,UAAAA,CAAWvN,IAAAA,CAAKsN,cAAAA,EAAetN,IAAAA,CAAKoN,mBAAAA,EAAAA,CAAoB;YAAA;QAAA;KAAA,GAAA;AAAA,EArJvBjH,mBTAlChI,aAAAA;IAAAA,KACAD;IAAAA,MACCA;IAAAA,YAEM6M;IAAAA,SACH2C;IAAAA,KACJ/B;IAAAA,OACE4H;AAAAA,GAiBFC,QACL,SAAA,EAAYpoB,CAAAA,EAAQ6C,CAAAA;IAAAA,OAAAA,gBAAAA,IAAAA,EAAAA,IACZgQ,eAAehQ,EAAQ7N,IAAAA,EAAMgL,GAAQ6C;AdnC9C;;;AwBAA,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IACE,QAAQ,aACR,QAAQ,gBACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAE3C;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF;;;;;kBClCe,OAAO;IAClB;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAG;IACzC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAC;IACvC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;IACxC;QAAC,QAAO;QAAsB,SAAQ;IAAE;CAC3C","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-d09374408c53c542.js","index.js","node_modules/frappe-charts/dist/frappe-charts.min.esm.js","node_modules/frappe-charts/node_modules/style-inject/dist/style-inject.es.js","node_modules/frappe-charts/src/js/utils/dom.js","node_modules/frappe-charts/src/js/utils/constants.js","node_modules/frappe-charts/src/js/utils/helpers.js","node_modules/frappe-charts/src/js/utils/draw-utils.js","node_modules/frappe-charts/src/js/utils/colors.js","node_modules/frappe-charts/src/js/utils/draw.js","node_modules/frappe-charts/src/js/utils/animate.js","node_modules/frappe-charts/src/js/utils/animation.js","node_modules/frappe-charts/src/js/utils/export.js","node_modules/frappe-charts/src/js/utils/date-utils.js","node_modules/frappe-charts/src/js/objects/ChartComponents.js","node_modules/frappe-charts/src/js/utils/intervals.js","node_modules/frappe-charts/src/js/utils/axis-chart-utils.js","node_modules/frappe-charts/src/js/chart.js","node_modules/frappe-charts/src/js/objects/SvgTip.js","node_modules/frappe-charts/src/css/chartsCss.js","node_modules/frappe-charts/src/js/charts/BaseChart.js","node_modules/frappe-charts/src/js/charts/AggregationChart.js","node_modules/frappe-charts/src/js/charts/PercentageChart.js","node_modules/frappe-charts/src/js/charts/PieChart.js","node_modules/frappe-charts/src/js/charts/Heatmap.js","node_modules/frappe-charts/src/js/charts/AxisChart.js","node_modules/frappe-charts/src/js/charts/DonutChart.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","../data.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"0a8ecb283d214d75\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { Chart } from \"frappe-charts/dist/frappe-charts.min.esm\";\nimport data from '../data.js';\n\nconst trans = {\n    labels: data.map(row => row.date),\n    datasets: [\n        {\n            name: \"Some Data\", type: \"bar\",\n            values: data.map(row => row.count)\n        },\n    ]\n}\n\nnew Chart(\"#chart\", {\n    data: trans,\n    type: 'line', \n    height: 550,\n    yMarkers: [\n        {\n            label: \"Threshold\",\n            value: 230,\n            options: { labelPos: 'left' } // default: 'right'\n        }\n    ],\n\n    yRegions: [\n        {\n            label: \"Optimum Value\",\n            start: 10,\n            end: 50,\n            options: { labelPos: 'right' }\n        }\n    ],\n    lineOptions: {\n        hideDots: 1,\n    },\n    axisOptions: {\n        xIsSeries: true // default: false\n    },\n})\n",null,"function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\nimport { lightenDarkenColor } from './colors';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from  '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export default data = [\n    {\"date\":\"2024-05-25 11:00:26\",\"count\":58},\n    {\"date\":\"2024-05-25 11:05:27\",\"count\":57},\n    {\"date\":\"2024-05-25 11:10:28\",\"count\":59},\n    {\"date\":\"2024-05-25 11:15:29\",\"count\":60},\n    {\"date\":\"2024-05-25 11:20:30\",\"count\":61},\n    {\"date\":\"2024-05-25 11:25:31\",\"count\":62},\n    {\"date\":\"2024-05-25 11:30:34\",\"count\":62},\n    {\"date\":\"2024-05-25 11:35:35\",\"count\":63},\n    {\"date\":\"2024-05-25 11:40:36\",\"count\":65},\n    {\"date\":\"2024-05-25 11:45:37\",\"count\":67},\n    {\"date\":\"2024-05-25 11:50:38\",\"count\":66},\n    {\"date\":\"2024-05-25 11:55:39\",\"count\":67},\n    {\"date\":\"2024-05-25 12:00:42\",\"count\":70},\n    {\"date\":\"2024-05-25 12:05:43\",\"count\":69},\n    {\"date\":\"2024-05-25 12:10:44\",\"count\":72},\n    {\"date\":\"2024-05-25 12:15:45\",\"count\":69},\n    {\"date\":\"2024-05-25 12:20:46\",\"count\":67},\n    {\"date\":\"2024-05-25 12:25:47\",\"count\":67},\n    {\"date\":\"2024-05-25 12:30:50\",\"count\":65},\n    {\"date\":\"2024-05-25 12:35:51\",\"count\":66},\n    {\"date\":\"2024-05-25 12:40:52\",\"count\":70},\n    {\"date\":\"2024-05-25 12:45:53\",\"count\":72},\n    {\"date\":\"2024-05-25 12:50:54\",\"count\":70},\n    {\"date\":\"2024-05-25 12:55:55\",\"count\":69},\n    {\"date\":\"2024-05-25 13:00:59\",\"count\":68},\n    {\"date\":\"2024-05-25 13:06:00\",\"count\":69},\n    {\"date\":\"2024-05-25 13:11:01\",\"count\":68},\n    {\"date\":\"2024-05-25 13:16:02\",\"count\":68},\n    {\"date\":\"2024-05-25 13:21:03\",\"count\":65},\n    {\"date\":\"2024-05-25 13:26:04\",\"count\":66},\n    {\"date\":\"2024-05-25 13:31:07\",\"count\":66},\n    {\"date\":\"2024-05-25 13:36:08\",\"count\":76},\n    {\"date\":\"2024-05-25 13:41:09\",\"count\":77},\n    {\"date\":\"2024-05-25 13:46:10\",\"count\":79},\n    {\"date\":\"2024-05-25 13:51:10\",\"count\":77},\n    {\"date\":\"2024-05-25 13:56:12\",\"count\":79},\n    {\"date\":\"2024-05-25 14:01:15\",\"count\":81},\n    {\"date\":\"2024-05-25 14:06:16\",\"count\":80},\n    {\"date\":\"2024-05-25 14:11:17\",\"count\":82},\n    {\"date\":\"2024-05-25 14:16:18\",\"count\":77},\n    {\"date\":\"2024-05-25 14:21:19\",\"count\":83},\n    {\"date\":\"2024-05-25 14:26:20\",\"count\":79},\n    {\"date\":\"2024-05-25 14:31:23\",\"count\":85},\n    {\"date\":\"2024-05-25 14:36:24\",\"count\":86},\n    {\"date\":\"2024-05-25 14:41:25\",\"count\":82},\n    {\"date\":\"2024-05-25 14:46:25\",\"count\":80},\n    {\"date\":\"2024-05-25 14:51:26\",\"count\":81},\n    {\"date\":\"2024-05-25 14:56:28\",\"count\":84},\n    {\"date\":\"2024-05-25 15:01:31\",\"count\":90},\n    {\"date\":\"2024-05-25 15:06:32\",\"count\":84},\n    {\"date\":\"2024-05-25 15:11:33\",\"count\":81},\n    {\"date\":\"2024-05-25 15:16:34\",\"count\":74},\n    {\"date\":\"2024-05-25 15:21:35\",\"count\":75},\n    {\"date\":\"2024-05-25 15:26:36\",\"count\":73},\n    {\"date\":\"2024-05-25 15:31:39\",\"count\":78},\n    {\"date\":\"2024-05-25 15:36:40\",\"count\":73},\n    {\"date\":\"2024-05-25 15:41:41\",\"count\":70},\n    {\"date\":\"2024-05-25 15:46:41\",\"count\":68},\n    {\"date\":\"2024-05-25 15:51:42\",\"count\":66},\n    {\"date\":\"2024-05-25 15:56:44\",\"count\":66},\n    {\"date\":\"2024-05-25 16:01:47\",\"count\":66},\n    {\"date\":\"2024-05-25 16:06:48\",\"count\":65},\n    {\"date\":\"2024-05-25 16:11:49\",\"count\":62},\n    {\"date\":\"2024-05-25 16:16:50\",\"count\":59},\n    {\"date\":\"2024-05-25 16:21:51\",\"count\":57},\n    {\"date\":\"2024-05-25 16:26:52\",\"count\":57},\n    {\"date\":\"2024-05-25 16:31:55\",\"count\":55},\n    {\"date\":\"2024-05-25 16:36:56\",\"count\":56},\n    {\"date\":\"2024-05-25 16:41:57\",\"count\":51},\n    {\"date\":\"2024-05-25 16:46:58\",\"count\":51},\n    {\"date\":\"2024-05-25 16:51:59\",\"count\":51},\n    {\"date\":\"2024-05-25 16:57:00\",\"count\":49},\n    {\"date\":\"2024-05-25 17:02:04\",\"count\":50},\n    {\"date\":\"2024-05-25 17:07:05\",\"count\":53},\n    {\"date\":\"2024-05-25 17:12:06\",\"count\":52},\n    {\"date\":\"2024-05-25 17:17:07\",\"count\":55},\n    {\"date\":\"2024-05-25 17:22:08\",\"count\":53},\n    {\"date\":\"2024-05-25 17:27:09\",\"count\":52},\n    {\"date\":\"2024-05-25 17:32:13\",\"count\":51},\n    {\"date\":\"2024-05-25 17:37:14\",\"count\":50},\n    {\"date\":\"2024-05-25 17:42:15\",\"count\":49},\n    {\"date\":\"2024-05-25 17:47:16\",\"count\":49},\n    {\"date\":\"2024-05-25 17:52:17\",\"count\":51},\n    {\"date\":\"2024-05-25 17:57:18\",\"count\":49},\n    {\"date\":\"2024-05-25 18:02:21\",\"count\":54},\n    {\"date\":\"2024-05-25 18:07:22\",\"count\":53},\n    {\"date\":\"2024-05-25 18:12:23\",\"count\":52},\n    {\"date\":\"2024-05-25 18:17:25\",\"count\":53},\n    {\"date\":\"2024-05-25 18:22:26\",\"count\":50},\n    {\"date\":\"2024-05-25 18:27:27\",\"count\":49},\n    {\"date\":\"2024-05-25 18:32:30\",\"count\":47},\n    {\"date\":\"2024-05-25 18:37:31\",\"count\":52},\n    {\"date\":\"2024-05-25 18:42:32\",\"count\":55},\n    {\"date\":\"2024-05-25 18:47:33\",\"count\":59},\n    {\"date\":\"2024-05-25 18:52:34\",\"count\":60},\n    {\"date\":\"2024-05-25 18:57:35\",\"count\":63},\n    {\"date\":\"2024-05-25 19:02:38\",\"count\":62},\n    {\"date\":\"2024-05-25 19:07:39\",\"count\":57},\n    {\"date\":\"2024-05-25 19:12:40\",\"count\":55},\n    {\"date\":\"2024-05-25 19:17:41\",\"count\":58},\n    {\"date\":\"2024-05-25 19:22:41\",\"count\":57},\n    {\"date\":\"2024-05-25 19:27:42\",\"count\":56},\n    {\"date\":\"2024-05-25 19:32:46\",\"count\":52},\n    {\"date\":\"2024-05-25 19:37:46\",\"count\":49},\n    {\"date\":\"2024-05-25 19:42:47\",\"count\":45},\n    {\"date\":\"2024-05-25 19:47:48\",\"count\":48},\n    {\"date\":\"2024-05-25 19:52:49\",\"count\":50},\n    {\"date\":\"2024-05-25 19:57:50\",\"count\":46},\n    {\"date\":\"2024-05-25 20:02:53\",\"count\":43},\n    {\"date\":\"2024-05-25 20:07:54\",\"count\":45},\n    {\"date\":\"2024-05-25 20:12:55\",\"count\":41},\n    {\"date\":\"2024-05-25 20:17:56\",\"count\":40},\n    {\"date\":\"2024-05-25 20:22:57\",\"count\":38},\n    {\"date\":\"2024-05-25 20:27:57\",\"count\":38},\n    {\"date\":\"2024-05-25 20:33:01\",\"count\":37},\n    {\"date\":\"2024-05-25 20:38:02\",\"count\":34},\n    {\"date\":\"2024-05-25 20:43:03\",\"count\":31},\n    {\"date\":\"2024-05-25 20:48:04\",\"count\":31},\n    {\"date\":\"2024-05-25 20:53:04\",\"count\":32},\n    {\"date\":\"2024-05-25 20:58:05\",\"count\":34},\n    {\"date\":\"2024-05-25 21:03:08\",\"count\":38},\n    {\"date\":\"2024-05-25 21:08:09\",\"count\":38},\n    {\"date\":\"2024-05-25 21:13:10\",\"count\":36},\n    {\"date\":\"2024-05-25 21:18:11\",\"count\":32},\n    {\"date\":\"2024-05-25 21:23:13\",\"count\":33},\n    {\"date\":\"2024-05-25 21:28:13\",\"count\":33},\n    {\"date\":\"2024-05-25 21:33:17\",\"count\":33},\n    {\"date\":\"2024-05-25 21:38:18\",\"count\":33},\n    {\"date\":\"2024-05-25 21:43:19\",\"count\":30},\n    {\"date\":\"2024-05-25 21:48:20\",\"count\":29},\n    {\"date\":\"2024-05-25 21:53:20\",\"count\":33},\n    {\"date\":\"2024-05-25 21:58:21\",\"count\":33},\n    {\"date\":\"2024-05-25 22:03:24\",\"count\":28},\n    {\"date\":\"2024-05-25 22:08:25\",\"count\":27},\n    {\"date\":\"2024-05-25 22:13:26\",\"count\":27},\n    {\"date\":\"2024-05-25 22:18:27\",\"count\":27},\n    {\"date\":\"2024-05-25 22:23:27\",\"count\":26},\n    {\"date\":\"2024-05-25 22:28:28\",\"count\":26},\n    {\"date\":\"2024-05-25 22:33:31\",\"count\":26},\n    {\"date\":\"2024-05-25 22:38:32\",\"count\":25},\n    {\"date\":\"2024-05-25 22:43:33\",\"count\":24},\n    {\"date\":\"2024-05-25 22:48:34\",\"count\":21},\n    {\"date\":\"2024-05-25 22:53:35\",\"count\":20},\n    {\"date\":\"2024-05-25 22:58:36\",\"count\":21},\n    {\"date\":\"2024-05-25 23:03:39\",\"count\":19},\n    {\"date\":\"2024-05-25 23:08:40\",\"count\":18},\n    {\"date\":\"2024-05-25 23:13:41\",\"count\":18},\n    {\"date\":\"2024-05-25 23:18:41\",\"count\":17},\n    {\"date\":\"2024-05-25 23:23:42\",\"count\":13},\n    {\"date\":\"2024-05-25 23:28:43\",\"count\":13},\n    {\"date\":\"2024-05-25 23:33:46\",\"count\":12},\n    {\"date\":\"2024-05-25 23:38:47\",\"count\":12},\n    {\"date\":\"2024-05-25 23:43:48\",\"count\":11},\n    {\"date\":\"2024-05-25 23:48:49\",\"count\":9},\n    {\"date\":\"2024-05-25 23:53:49\",\"count\":9},\n    {\"date\":\"2024-05-25 23:58:50\",\"count\":9},\n    {\"date\":\"2024-05-26 00:03:53\",\"count\":9},\n    {\"date\":\"2024-05-26 00:08:53\",\"count\":9},\n    {\"date\":\"2024-05-26 00:13:54\",\"count\":9},\n    {\"date\":\"2024-05-26 00:18:55\",\"count\":9},\n    {\"date\":\"2024-05-26 00:23:56\",\"count\":9},\n    {\"date\":\"2024-05-26 00:28:57\",\"count\":8},\n    {\"date\":\"2024-05-26 00:34:00\",\"count\":8},\n    {\"date\":\"2024-05-26 00:39:01\",\"count\":8},\n    {\"date\":\"2024-05-26 00:44:01\",\"count\":8},\n    {\"date\":\"2024-05-26 00:49:02\",\"count\":8},\n    {\"date\":\"2024-05-26 00:54:03\",\"count\":8},\n    {\"date\":\"2024-05-26 00:59:04\",\"count\":8},\n    {\"date\":\"2024-05-26 01:04:07\",\"count\":8},\n    {\"date\":\"2024-05-26 01:09:08\",\"count\":8},\n    {\"date\":\"2024-05-26 01:14:08\",\"count\":8},\n    {\"date\":\"2024-05-26 01:19:09\",\"count\":8},\n    {\"date\":\"2024-05-26 01:24:10\",\"count\":8},\n    {\"date\":\"2024-05-26 01:29:11\",\"count\":7},\n    {\"date\":\"2024-05-26 01:34:14\",\"count\":7},\n    {\"date\":\"2024-05-26 01:39:14\",\"count\":8},\n    {\"date\":\"2024-05-26 01:44:15\",\"count\":8},\n    {\"date\":\"2024-05-26 01:49:16\",\"count\":8},\n    {\"date\":\"2024-05-26 01:54:17\",\"count\":8},\n    {\"date\":\"2024-05-26 01:59:17\",\"count\":8},\n    {\"date\":\"2024-05-26 02:04:21\",\"count\":8},\n    {\"date\":\"2024-05-26 02:09:21\",\"count\":8},\n    {\"date\":\"2024-05-26 02:14:22\",\"count\":8},\n    {\"date\":\"2024-05-26 02:19:23\",\"count\":9},\n    {\"date\":\"2024-05-26 02:24:24\",\"count\":11},\n    {\"date\":\"2024-05-26 02:29:24\",\"count\":11},\n    {\"date\":\"2024-05-26 02:34:27\",\"count\":11},\n    {\"date\":\"2024-05-26 02:39:28\",\"count\":11},\n    {\"date\":\"2024-05-26 02:44:29\",\"count\":11},\n    {\"date\":\"2024-05-26 02:49:29\",\"count\":11},\n    {\"date\":\"2024-05-26 02:54:30\",\"count\":11},\n    {\"date\":\"2024-05-26 02:59:31\",\"count\":11},\n    {\"date\":\"2024-05-26 03:04:34\",\"count\":11},\n    {\"date\":\"2024-05-26 03:09:35\",\"count\":12},\n    {\"date\":\"2024-05-26 03:14:36\",\"count\":12},\n    {\"date\":\"2024-05-26 03:19:36\",\"count\":12},\n    {\"date\":\"2024-05-26 03:24:37\",\"count\":12},\n    {\"date\":\"2024-05-26 03:29:38\",\"count\":14},\n    {\"date\":\"2024-05-26 03:34:41\",\"count\":14},\n    {\"date\":\"2024-05-26 03:39:41\",\"count\":14},\n    {\"date\":\"2024-05-26 03:44:42\",\"count\":13},\n    {\"date\":\"2024-05-26 03:49:43\",\"count\":13},\n    {\"date\":\"2024-05-26 03:54:44\",\"count\":11},\n    {\"date\":\"2024-05-26 03:59:44\",\"count\":12},\n    {\"date\":\"2024-05-26 04:04:47\",\"count\":12},\n    {\"date\":\"2024-05-26 04:09:48\",\"count\":13},\n    {\"date\":\"2024-05-26 04:14:49\",\"count\":15},\n    {\"date\":\"2024-05-26 04:19:50\",\"count\":16},\n    {\"date\":\"2024-05-26 04:24:51\",\"count\":17},\n    {\"date\":\"2024-05-26 04:29:52\",\"count\":17},\n    {\"date\":\"2024-05-26 04:34:55\",\"count\":17},\n    {\"date\":\"2024-05-26 04:39:56\",\"count\":20},\n    {\"date\":\"2024-05-26 04:44:56\",\"count\":20},\n    {\"date\":\"2024-05-26 04:49:57\",\"count\":19},\n    {\"date\":\"2024-05-26 04:54:58\",\"count\":17},\n    {\"date\":\"2024-05-26 04:59:58\",\"count\":16},\n    {\"date\":\"2024-05-26 05:05:02\",\"count\":12},\n    {\"date\":\"2024-05-26 05:10:02\",\"count\":12},\n    {\"date\":\"2024-05-26 05:15:03\",\"count\":14},\n    {\"date\":\"2024-05-26 05:20:04\",\"count\":14},\n    {\"date\":\"2024-05-26 05:25:05\",\"count\":15},\n    {\"date\":\"2024-05-26 05:30:06\",\"count\":15},\n    {\"date\":\"2024-05-26 05:35:08\",\"count\":17},\n    {\"date\":\"2024-05-26 05:40:09\",\"count\":18},\n    {\"date\":\"2024-05-26 05:45:10\",\"count\":19},\n    {\"date\":\"2024-05-26 05:50:11\",\"count\":21},\n    {\"date\":\"2024-05-26 05:55:11\",\"count\":21},\n    {\"date\":\"2024-05-26 06:00:12\",\"count\":24},\n    {\"date\":\"2024-05-26 06:05:15\",\"count\":24},\n    {\"date\":\"2024-05-26 06:10:16\",\"count\":24},\n    {\"date\":\"2024-05-26 06:15:17\",\"count\":27},\n    {\"date\":\"2024-05-26 06:20:18\",\"count\":31},\n    {\"date\":\"2024-05-26 06:25:18\",\"count\":31},\n    {\"date\":\"2024-05-26 06:30:19\",\"count\":33},\n    {\"date\":\"2024-05-26 06:35:22\",\"count\":31},\n    {\"date\":\"2024-05-26 06:40:23\",\"count\":29},\n    {\"date\":\"2024-05-26 06:45:23\",\"count\":30},\n    {\"date\":\"2024-05-26 06:50:24\",\"count\":34},\n    {\"date\":\"2024-05-26 06:55:25\",\"count\":37},\n    {\"date\":\"2024-05-26 07:00:26\",\"count\":38},\n    {\"date\":\"2024-05-26 07:05:29\",\"count\":40},\n    {\"date\":\"2024-05-26 07:10:29\",\"count\":41},\n    {\"date\":\"2024-05-26 07:15:30\",\"count\":44},\n    {\"date\":\"2024-05-26 07:20:31\",\"count\":47},\n    {\"date\":\"2024-05-26 07:25:32\",\"count\":51},\n    {\"date\":\"2024-05-26 07:30:34\",\"count\":53},\n    {\"date\":\"2024-05-26 07:35:37\",\"count\":54},\n    {\"date\":\"2024-05-26 07:40:38\",\"count\":58},\n    {\"date\":\"2024-05-26 07:45:38\",\"count\":60},\n    {\"date\":\"2024-05-26 07:50:39\",\"count\":70},\n    {\"date\":\"2024-05-26 07:55:40\",\"count\":78},\n    {\"date\":\"2024-05-26 08:00:41\",\"count\":85},\n    {\"date\":\"2024-05-26 08:05:43\",\"count\":86},\n    {\"date\":\"2024-05-26 08:10:44\",\"count\":89},\n    {\"date\":\"2024-05-26 08:15:45\",\"count\":94},\n    {\"date\":\"2024-05-26 08:20:49\",\"count\":100},\n    {\"date\":\"2024-05-26 08:25:50\",\"count\":106},\n    {\"date\":\"2024-05-26 08:30:51\",\"count\":107},\n    {\"date\":\"2024-05-26 08:35:54\",\"count\":110},\n    {\"date\":\"2024-05-26 08:40:55\",\"count\":112},\n    {\"date\":\"2024-05-26 08:45:56\",\"count\":114},\n    {\"date\":\"2024-05-26 08:50:57\",\"count\":109},\n    {\"date\":\"2024-05-26 08:55:58\",\"count\":109},\n    {\"date\":\"2024-05-26 09:00:59\",\"count\":111},\n    {\"date\":\"2024-05-26 09:06:03\",\"count\":103},\n    {\"date\":\"2024-05-26 09:11:03\",\"count\":100},\n    {\"date\":\"2024-05-26 09:16:04\",\"count\":96},\n    {\"date\":\"2024-05-26 09:21:05\",\"count\":92},\n    {\"date\":\"2024-05-26 09:26:06\",\"count\":90},\n    {\"date\":\"2024-05-26 09:31:07\",\"count\":88},\n    {\"date\":\"2024-05-26 09:36:10\",\"count\":77},\n    {\"date\":\"2024-05-26 09:41:11\",\"count\":80},\n    {\"date\":\"2024-05-26 09:46:13\",\"count\":80},\n    {\"date\":\"2024-05-26 09:51:14\",\"count\":77},\n    {\"date\":\"2024-05-26 09:56:15\",\"count\":77},\n    {\"date\":\"2024-05-26 10:01:16\",\"count\":84},\n    {\"date\":\"2024-05-26 10:06:20\",\"count\":84},\n    {\"date\":\"2024-05-26 10:11:21\",\"count\":87},\n    {\"date\":\"2024-05-26 10:16:22\",\"count\":80},\n    {\"date\":\"2024-05-26 10:21:22\",\"count\":84},\n    {\"date\":\"2024-05-26 10:26:23\",\"count\":86},\n    {\"date\":\"2024-05-26 10:31:24\",\"count\":86},\n    {\"date\":\"2024-05-26 10:36:27\",\"count\":86},\n    {\"date\":\"2024-05-26 10:41:28\",\"count\":85},\n    {\"date\":\"2024-05-26 10:46:29\",\"count\":85},\n    {\"date\":\"2024-05-26 10:51:30\",\"count\":83},\n    {\"date\":\"2024-05-26 10:56:31\",\"count\":80},\n    {\"date\":\"2024-05-26 11:01:31\",\"count\":82},\n    {\"date\":\"2024-05-26 11:06:35\",\"count\":85},\n    {\"date\":\"2024-05-26 11:11:36\",\"count\":92},\n    {\"date\":\"2024-05-26 11:16:37\",\"count\":90},\n    {\"date\":\"2024-05-26 11:21:38\",\"count\":89},\n    {\"date\":\"2024-05-26 11:26:39\",\"count\":85},\n    {\"date\":\"2024-05-26 11:31:40\",\"count\":80},\n    {\"date\":\"2024-05-26 11:36:43\",\"count\":77},\n    {\"date\":\"2024-05-26 11:41:44\",\"count\":80},\n    {\"date\":\"2024-05-26 11:46:45\",\"count\":74},\n    {\"date\":\"2024-05-26 11:51:46\",\"count\":72},\n    {\"date\":\"2024-05-26 11:56:47\",\"count\":72},\n    {\"date\":\"2024-05-26 12:01:48\",\"count\":70},\n    {\"date\":\"2024-05-26 12:06:51\",\"count\":73},\n    {\"date\":\"2024-05-26 12:11:52\",\"count\":76},\n    {\"date\":\"2024-05-26 12:16:53\",\"count\":72},\n    {\"date\":\"2024-05-26 12:21:54\",\"count\":70},\n    {\"date\":\"2024-05-26 12:26:55\",\"count\":65},\n    {\"date\":\"2024-05-26 12:31:56\",\"count\":67},\n    {\"date\":\"2024-05-26 12:36:59\",\"count\":69},\n    {\"date\":\"2024-05-26 12:42:00\",\"count\":67},\n    {\"date\":\"2024-05-26 12:47:01\",\"count\":71},\n    {\"date\":\"2024-05-26 12:52:02\",\"count\":70},\n    {\"date\":\"2024-05-26 12:57:03\",\"count\":68},\n    {\"date\":\"2024-05-26 13:02:04\",\"count\":69},\n    {\"date\":\"2024-05-26 13:07:08\",\"count\":68},\n    {\"date\":\"2024-05-26 13:12:08\",\"count\":70},\n    {\"date\":\"2024-05-26 13:17:09\",\"count\":69},\n    {\"date\":\"2024-05-26 13:22:11\",\"count\":67},\n    {\"date\":\"2024-05-26 13:27:12\",\"count\":68},\n    {\"date\":\"2024-05-26 13:32:13\",\"count\":68},\n    {\"date\":\"2024-05-26 13:37:17\",\"count\":66},\n    {\"date\":\"2024-05-26 13:42:18\",\"count\":74},\n    {\"date\":\"2024-05-26 13:47:19\",\"count\":74},\n    {\"date\":\"2024-05-26 13:52:20\",\"count\":81},\n    {\"date\":\"2024-05-26 13:57:20\",\"count\":80},\n    {\"date\":\"2024-05-26 14:02:21\",\"count\":80},\n    {\"date\":\"2024-05-26 14:07:25\",\"count\":81},\n    {\"date\":\"2024-05-26 14:12:25\",\"count\":87},\n    {\"date\":\"2024-05-26 14:17:27\",\"count\":90},\n    {\"date\":\"2024-05-26 14:22:28\",\"count\":99},\n    {\"date\":\"2024-05-26 14:27:28\",\"count\":99},\n    {\"date\":\"2024-05-26 14:32:29\",\"count\":99},\n    {\"date\":\"2024-05-26 14:37:33\",\"count\":98},\n    {\"date\":\"2024-05-26 14:42:34\",\"count\":96},\n    {\"date\":\"2024-05-26 14:47:35\",\"count\":93},\n    {\"date\":\"2024-05-26 14:52:36\",\"count\":88},\n    {\"date\":\"2024-05-26 14:57:37\",\"count\":87},\n    {\"date\":\"2024-05-26 15:02:38\",\"count\":90},\n    {\"date\":\"2024-05-26 15:07:41\",\"count\":89},\n    {\"date\":\"2024-05-26 15:12:42\",\"count\":90},\n    {\"date\":\"2024-05-26 15:17:43\",\"count\":97},\n    {\"date\":\"2024-05-26 15:22:44\",\"count\":103},\n    {\"date\":\"2024-05-26 15:27:45\",\"count\":102},\n    {\"date\":\"2024-05-26 15:32:46\",\"count\":102},\n    {\"date\":\"2024-05-26 15:37:49\",\"count\":98},\n    {\"date\":\"2024-05-26 15:42:50\",\"count\":99},\n    {\"date\":\"2024-05-26 15:47:51\",\"count\":103},\n    {\"date\":\"2024-05-26 15:52:52\",\"count\":102},\n    {\"date\":\"2024-05-26 15:57:53\",\"count\":108},\n    {\"date\":\"2024-05-26 16:02:54\",\"count\":105},\n    {\"date\":\"2024-05-26 16:07:58\",\"count\":102},\n    {\"date\":\"2024-05-26 16:12:59\",\"count\":100},\n    {\"date\":\"2024-05-26 16:18:00\",\"count\":97},\n    {\"date\":\"2024-05-26 16:23:02\",\"count\":99},\n    {\"date\":\"2024-05-26 16:28:03\",\"count\":98},\n    {\"date\":\"2024-05-26 16:33:04\",\"count\":102},\n    {\"date\":\"2024-05-26 16:38:08\",\"count\":103},\n    {\"date\":\"2024-05-26 16:43:09\",\"count\":89},\n    {\"date\":\"2024-05-26 16:48:10\",\"count\":84},\n    {\"date\":\"2024-05-26 16:53:11\",\"count\":84},\n    {\"date\":\"2024-05-26 16:58:12\",\"count\":84},\n    {\"date\":\"2024-05-26 17:03:14\",\"count\":79},\n    {\"date\":\"2024-05-26 17:08:18\",\"count\":83},\n    {\"date\":\"2024-05-26 17:13:20\",\"count\":81},\n    {\"date\":\"2024-05-26 17:18:21\",\"count\":95},\n    {\"date\":\"2024-05-26 17:23:22\",\"count\":97},\n    {\"date\":\"2024-05-26 17:28:23\",\"count\":99},\n    {\"date\":\"2024-05-26 17:33:24\",\"count\":97},\n    {\"date\":\"2024-05-26 17:38:27\",\"count\":100},\n    {\"date\":\"2024-05-26 17:43:28\",\"count\":100},\n    {\"date\":\"2024-05-26 17:48:29\",\"count\":104},\n    {\"date\":\"2024-05-26 17:53:30\",\"count\":108},\n    {\"date\":\"2024-05-26 17:58:31\",\"count\":114},\n    {\"date\":\"2024-05-26 18:03:32\",\"count\":116},\n    {\"date\":\"2024-05-26 18:08:36\",\"count\":112},\n    {\"date\":\"2024-05-26 18:13:37\",\"count\":114},\n    {\"date\":\"2024-05-26 18:18:38\",\"count\":109},\n    {\"date\":\"2024-05-26 18:23:39\",\"count\":108},\n    {\"date\":\"2024-05-26 18:28:40\",\"count\":111},\n    {\"date\":\"2024-05-26 18:33:41\",\"count\":109},\n    {\"date\":\"2024-05-26 18:38:45\",\"count\":111},\n    {\"date\":\"2024-05-26 18:43:46\",\"count\":107},\n    {\"date\":\"2024-05-26 18:48:47\",\"count\":101},\n    {\"date\":\"2024-05-26 18:53:48\",\"count\":94},\n    {\"date\":\"2024-05-26 18:58:49\",\"count\":86},\n    {\"date\":\"2024-05-26 19:03:50\",\"count\":84},\n    {\"date\":\"2024-05-26 19:08:54\",\"count\":84},\n    {\"date\":\"2024-05-26 19:13:55\",\"count\":84},\n    {\"date\":\"2024-05-26 19:18:56\",\"count\":86},\n    {\"date\":\"2024-05-26 19:23:57\",\"count\":84},\n    {\"date\":\"2024-05-26 19:28:58\",\"count\":79},\n    {\"date\":\"2024-05-26 19:34:00\",\"count\":71},\n    {\"date\":\"2024-05-26 19:39:04\",\"count\":66},\n    {\"date\":\"2024-05-26 19:44:05\",\"count\":66},\n    {\"date\":\"2024-05-26 19:49:05\",\"count\":69},\n    {\"date\":\"2024-05-26 19:54:06\",\"count\":63},\n    {\"date\":\"2024-05-26 19:59:07\",\"count\":61},\n    {\"date\":\"2024-05-26 20:04:08\",\"count\":60},\n    {\"date\":\"2024-05-26 20:09:12\",\"count\":53},\n    {\"date\":\"2024-05-26 20:14:13\",\"count\":51},\n    {\"date\":\"2024-05-26 20:19:14\",\"count\":49},\n    {\"date\":\"2024-05-26 20:24:15\",\"count\":45},\n    {\"date\":\"2024-05-26 20:29:16\",\"count\":44},\n    {\"date\":\"2024-05-26 20:34:16\",\"count\":43},\n    {\"date\":\"2024-05-26 20:39:20\",\"count\":46},\n    {\"date\":\"2024-05-26 20:44:21\",\"count\":45},\n    {\"date\":\"2024-05-26 20:49:22\",\"count\":43},\n    {\"date\":\"2024-05-26 20:54:23\",\"count\":42},\n    {\"date\":\"2024-05-26 20:59:24\",\"count\":41},\n    {\"date\":\"2024-05-26 21:04:25\",\"count\":42},\n    {\"date\":\"2024-05-26 21:09:28\",\"count\":39},\n    {\"date\":\"2024-05-26 21:14:29\",\"count\":35},\n    {\"date\":\"2024-05-26 21:19:30\",\"count\":31},\n    {\"date\":\"2024-05-26 21:24:30\",\"count\":30},\n    {\"date\":\"2024-05-26 21:29:31\",\"count\":29},\n    {\"date\":\"2024-05-26 21:34:32\",\"count\":30},\n    {\"date\":\"2024-05-26 21:39:35\",\"count\":28},\n    {\"date\":\"2024-05-26 21:44:36\",\"count\":26},\n    {\"date\":\"2024-05-26 21:49:36\",\"count\":24},\n    {\"date\":\"2024-05-26 21:54:37\",\"count\":22},\n    {\"date\":\"2024-05-26 21:59:38\",\"count\":21},\n    {\"date\":\"2024-05-26 22:04:38\",\"count\":21},\n    {\"date\":\"2024-05-26 22:09:41\",\"count\":20},\n    {\"date\":\"2024-05-26 22:14:42\",\"count\":17},\n    {\"date\":\"2024-05-26 22:19:43\",\"count\":14},\n    {\"date\":\"2024-05-26 22:24:43\",\"count\":14},\n    {\"date\":\"2024-05-26 22:29:44\",\"count\":14},\n    {\"date\":\"2024-05-26 22:34:45\",\"count\":13},\n    {\"date\":\"2024-05-26 22:39:48\",\"count\":12},\n    {\"date\":\"2024-05-26 22:44:49\",\"count\":13},\n    {\"date\":\"2024-05-26 22:49:50\",\"count\":12},\n    {\"date\":\"2024-05-26 22:54:50\",\"count\":9},\n    {\"date\":\"2024-05-26 22:59:51\",\"count\":9},\n    {\"date\":\"2024-05-26 23:04:52\",\"count\":8},\n    {\"date\":\"2024-05-26 23:09:55\",\"count\":9},\n    {\"date\":\"2024-05-26 23:14:56\",\"count\":9},\n    {\"date\":\"2024-05-26 23:19:56\",\"count\":9},\n    {\"date\":\"2024-05-26 23:24:57\",\"count\":11},\n    {\"date\":\"2024-05-26 23:29:58\",\"count\":11},\n    {\"date\":\"2024-05-26 23:34:59\",\"count\":10},\n    {\"date\":\"2024-05-26 23:40:02\",\"count\":10},\n    {\"date\":\"2024-05-26 23:45:02\",\"count\":9},\n    {\"date\":\"2024-05-26 23:50:03\",\"count\":8},\n    {\"date\":\"2024-05-26 23:55:04\",\"count\":8},\n    {\"date\":\"2024-05-27 00:00:05\",\"count\":8},\n    {\"date\":\"2024-05-27 00:05:06\",\"count\":8},\n    {\"date\":\"2024-05-27 00:10:09\",\"count\":8},\n    {\"date\":\"2024-05-27 00:15:09\",\"count\":8},\n    {\"date\":\"2024-05-27 00:20:10\",\"count\":7},\n    {\"date\":\"2024-05-27 00:25:11\",\"count\":6},\n    {\"date\":\"2024-05-27 00:30:12\",\"count\":6},\n    {\"date\":\"2024-05-27 00:35:13\",\"count\":6},\n    {\"date\":\"2024-05-27 00:40:16\",\"count\":5},\n    {\"date\":\"2024-05-27 00:45:17\",\"count\":5},\n    {\"date\":\"2024-05-27 00:50:17\",\"count\":5},\n    {\"date\":\"2024-05-27 00:55:18\",\"count\":5},\n    {\"date\":\"2024-05-27 01:00:19\",\"count\":5},\n    {\"date\":\"2024-05-27 01:05:20\",\"count\":6},\n    {\"date\":\"2024-05-27 01:10:23\",\"count\":6},\n    {\"date\":\"2024-05-27 01:15:23\",\"count\":5},\n    {\"date\":\"2024-05-27 01:20:24\",\"count\":5},\n    {\"date\":\"2024-05-27 01:25:25\",\"count\":6},\n    {\"date\":\"2024-05-27 01:30:25\",\"count\":6},\n    {\"date\":\"2024-05-27 01:35:26\",\"count\":6},\n    {\"date\":\"2024-05-27 01:40:29\",\"count\":6},\n    {\"date\":\"2024-05-27 01:45:30\",\"count\":6},\n    {\"date\":\"2024-05-27 01:50:31\",\"count\":5},\n    {\"date\":\"2024-05-27 01:55:31\",\"count\":5},\n    {\"date\":\"2024-05-27 02:00:32\",\"count\":5},\n    {\"date\":\"2024-05-27 02:05:33\",\"count\":6},\n    {\"date\":\"2024-05-27 02:10:36\",\"count\":8},\n    {\"date\":\"2024-05-27 02:15:37\",\"count\":7},\n    {\"date\":\"2024-05-27 02:20:38\",\"count\":7},\n    {\"date\":\"2024-05-27 02:25:39\",\"count\":7},\n    {\"date\":\"2024-05-27 02:30:39\",\"count\":8},\n    {\"date\":\"2024-05-27 02:35:40\",\"count\":8},\n    {\"date\":\"2024-05-27 02:40:43\",\"count\":9},\n    {\"date\":\"2024-05-27 02:45:44\",\"count\":9},\n    {\"date\":\"2024-05-27 02:50:45\",\"count\":10},\n    {\"date\":\"2024-05-27 02:55:46\",\"count\":10},\n    {\"date\":\"2024-05-27 03:00:46\",\"count\":10},\n    {\"date\":\"2024-05-27 03:05:47\",\"count\":10},\n    {\"date\":\"2024-05-27 03:10:50\",\"count\":11},\n    {\"date\":\"2024-05-27 03:15:51\",\"count\":12},\n    {\"date\":\"2024-05-27 03:20:52\",\"count\":13},\n    {\"date\":\"2024-05-27 03:25:53\",\"count\":14},\n    {\"date\":\"2024-05-27 03:30:53\",\"count\":17},\n    {\"date\":\"2024-05-27 03:35:54\",\"count\":21},\n    {\"date\":\"2024-05-27 03:40:57\",\"count\":21},\n    {\"date\":\"2024-05-27 03:45:58\",\"count\":23},\n    {\"date\":\"2024-05-27 03:50:59\",\"count\":23},\n    {\"date\":\"2024-05-27 03:55:59\",\"count\":23},\n    {\"date\":\"2024-05-27 04:01:00\",\"count\":26},\n    {\"date\":\"2024-05-27 04:06:01\",\"count\":26},\n    {\"date\":\"2024-05-27 04:11:04\",\"count\":30},\n    {\"date\":\"2024-05-27 04:16:04\",\"count\":30},\n    {\"date\":\"2024-05-27 04:21:06\",\"count\":28},\n    {\"date\":\"2024-05-27 04:26:06\",\"count\":28},\n    {\"date\":\"2024-05-27 04:31:07\",\"count\":28},\n    {\"date\":\"2024-05-27 04:36:08\",\"count\":30},\n    {\"date\":\"2024-05-27 04:41:11\",\"count\":29},\n    {\"date\":\"2024-05-27 04:46:12\",\"count\":28},\n    {\"date\":\"2024-05-27 04:51:13\",\"count\":33},\n    {\"date\":\"2024-05-27 04:56:13\",\"count\":35},\n    {\"date\":\"2024-05-27 05:01:14\",\"count\":38},\n    {\"date\":\"2024-05-27 05:06:15\",\"count\":38},\n    {\"date\":\"2024-05-27 05:11:18\",\"count\":45},\n    {\"date\":\"2024-05-27 05:16:19\",\"count\":48},\n    {\"date\":\"2024-05-27 05:21:20\",\"count\":47},\n    {\"date\":\"2024-05-27 05:26:21\",\"count\":49},\n    {\"date\":\"2024-05-27 05:31:21\",\"count\":47},\n    {\"date\":\"2024-05-27 05:36:22\",\"count\":46},\n    {\"date\":\"2024-05-27 05:41:25\",\"count\":49},\n    {\"date\":\"2024-05-27 05:46:26\",\"count\":54},\n    {\"date\":\"2024-05-27 05:51:27\",\"count\":53},\n    {\"date\":\"2024-05-27 05:56:27\",\"count\":54},\n    {\"date\":\"2024-05-27 06:01:28\",\"count\":55},\n    {\"date\":\"2024-05-27 06:06:29\",\"count\":56},\n    {\"date\":\"2024-05-27 06:11:32\",\"count\":53},\n    {\"date\":\"2024-05-27 06:16:32\",\"count\":54},\n    {\"date\":\"2024-05-27 06:21:33\",\"count\":50},\n    {\"date\":\"2024-05-27 06:26:34\",\"count\":50},\n    {\"date\":\"2024-05-27 06:31:35\",\"count\":52},\n    {\"date\":\"2024-05-27 06:36:36\",\"count\":51},\n    {\"date\":\"2024-05-27 06:41:39\",\"count\":52},\n    {\"date\":\"2024-05-27 06:46:39\",\"count\":53},\n    {\"date\":\"2024-05-27 06:51:40\",\"count\":56},\n    {\"date\":\"2024-05-27 06:56:41\",\"count\":55},\n    {\"date\":\"2024-05-27 07:01:42\",\"count\":57},\n    {\"date\":\"2024-05-27 07:06:43\",\"count\":57},\n    {\"date\":\"2024-05-27 07:11:46\",\"count\":51},\n    {\"date\":\"2024-05-27 07:16:46\",\"count\":53},\n    {\"date\":\"2024-05-27 07:21:47\",\"count\":51},\n    {\"date\":\"2024-05-27 07:26:48\",\"count\":54},\n    {\"date\":\"2024-05-27 07:31:50\",\"count\":57},\n    {\"date\":\"2024-05-27 07:36:51\",\"count\":58},\n    {\"date\":\"2024-05-27 07:41:54\",\"count\":58},\n    {\"date\":\"2024-05-27 07:46:55\",\"count\":58},\n    {\"date\":\"2024-05-27 07:51:56\",\"count\":56},\n    {\"date\":\"2024-05-27 07:56:56\",\"count\":54},\n    {\"date\":\"2024-05-27 08:01:57\",\"count\":58},\n    {\"date\":\"2024-05-27 08:06:58\",\"count\":53},\n    {\"date\":\"2024-05-27 08:12:01\",\"count\":51},\n    {\"date\":\"2024-05-27 08:17:02\",\"count\":50},\n    {\"date\":\"2024-05-27 08:22:03\",\"count\":46},\n    {\"date\":\"2024-05-27 08:27:04\",\"count\":49},\n    {\"date\":\"2024-05-27 08:32:05\",\"count\":48},\n    {\"date\":\"2024-05-27 08:37:05\",\"count\":46},\n    {\"date\":\"2024-05-27 08:42:09\",\"count\":48},\n    {\"date\":\"2024-05-27 08:47:10\",\"count\":45},\n    {\"date\":\"2024-05-27 08:52:11\",\"count\":49},\n    {\"date\":\"2024-05-27 08:57:12\",\"count\":55},\n    {\"date\":\"2024-05-27 09:02:13\",\"count\":52},\n    {\"date\":\"2024-05-27 09:07:14\",\"count\":49},\n    {\"date\":\"2024-05-27 09:12:18\",\"count\":48},\n    {\"date\":\"2024-05-27 09:17:19\",\"count\":49},\n    {\"date\":\"2024-05-27 09:22:21\",\"count\":47},\n    {\"date\":\"2024-05-27 09:27:22\",\"count\":51},\n    {\"date\":\"2024-05-27 09:32:23\",\"count\":56},\n    {\"date\":\"2024-05-27 09:37:24\",\"count\":57},\n    {\"date\":\"2024-05-27 09:42:28\",\"count\":56},\n    {\"date\":\"2024-05-27 09:47:29\",\"count\":57},\n    {\"date\":\"2024-05-27 09:52:30\",\"count\":54},\n    {\"date\":\"2024-05-27 09:57:31\",\"count\":54},\n    {\"date\":\"2024-05-27 10:02:32\",\"count\":57},\n    {\"date\":\"2024-05-27 10:07:33\",\"count\":55},\n    {\"date\":\"2024-05-27 10:12:37\",\"count\":55},\n    {\"date\":\"2024-05-27 10:17:38\",\"count\":58},\n    {\"date\":\"2024-05-27 10:22:40\",\"count\":59},\n    {\"date\":\"2024-05-27 10:27:41\",\"count\":56},\n    {\"date\":\"2024-05-27 10:32:41\",\"count\":57},\n    {\"date\":\"2024-05-27 10:37:42\",\"count\":55},\n    {\"date\":\"2024-05-27 10:42:46\",\"count\":54},\n    {\"date\":\"2024-05-27 10:47:47\",\"count\":53},\n    {\"date\":\"2024-05-27 10:52:49\",\"count\":53},\n    {\"date\":\"2024-05-27 10:57:50\",\"count\":52},\n    {\"date\":\"2024-05-27 11:02:51\",\"count\":51},\n    {\"date\":\"2024-05-27 11:07:52\",\"count\":52},\n    {\"date\":\"2024-05-27 11:12:56\",\"count\":52},\n    {\"date\":\"2024-05-27 11:17:57\",\"count\":55},\n    {\"date\":\"2024-05-27 11:22:58\",\"count\":54},\n    {\"date\":\"2024-05-27 11:27:59\",\"count\":51},\n    {\"date\":\"2024-05-27 11:33:00\",\"count\":56},\n    {\"date\":\"2024-05-27 11:38:02\",\"count\":53},\n    {\"date\":\"2024-05-27 11:43:05\",\"count\":53},\n    {\"date\":\"2024-05-27 11:48:06\",\"count\":54},\n    {\"date\":\"2024-05-27 11:53:07\",\"count\":55},\n    {\"date\":\"2024-05-27 11:58:08\",\"count\":60},\n    {\"date\":\"2024-05-27 12:03:09\",\"count\":61},\n    {\"date\":\"2024-05-27 12:08:10\",\"count\":69},\n    {\"date\":\"2024-05-27 12:13:15\",\"count\":74},\n    {\"date\":\"2024-05-27 12:18:16\",\"count\":73},\n    {\"date\":\"2024-05-27 12:23:17\",\"count\":77},\n    {\"date\":\"2024-05-27 12:28:18\",\"count\":79},\n    {\"date\":\"2024-05-27 12:33:19\",\"count\":75},\n    {\"date\":\"2024-05-27 12:38:20\",\"count\":80},\n    {\"date\":\"2024-05-27 12:43:24\",\"count\":82},\n    {\"date\":\"2024-05-27 12:48:25\",\"count\":87},\n    {\"date\":\"2024-05-27 12:53:25\",\"count\":78},\n    {\"date\":\"2024-05-27 12:58:27\",\"count\":85},\n    {\"date\":\"2024-05-27 13:03:28\",\"count\":83},\n    {\"date\":\"2024-05-27 13:08:29\",\"count\":81},\n    {\"date\":\"2024-05-27 13:13:32\",\"count\":82},\n    {\"date\":\"2024-05-27 13:18:33\",\"count\":79},\n    {\"date\":\"2024-05-27 13:23:34\",\"count\":84},\n    {\"date\":\"2024-05-27 13:28:36\",\"count\":83},\n    {\"date\":\"2024-05-27 13:33:37\",\"count\":84},\n    {\"date\":\"2024-05-27 13:38:38\",\"count\":80},\n    {\"date\":\"2024-05-27 13:43:42\",\"count\":82},\n    {\"date\":\"2024-05-27 13:48:43\",\"count\":82},\n    {\"date\":\"2024-05-27 13:53:44\",\"count\":86},\n    {\"date\":\"2024-05-27 13:58:45\",\"count\":90},\n    {\"date\":\"2024-05-27 14:03:46\",\"count\":92},\n    {\"date\":\"2024-05-27 14:08:47\",\"count\":94},\n    {\"date\":\"2024-05-27 14:13:51\",\"count\":94},\n    {\"date\":\"2024-05-27 14:18:52\",\"count\":99},\n    {\"date\":\"2024-05-27 14:23:53\",\"count\":107},\n    {\"date\":\"2024-05-27 14:28:54\",\"count\":111},\n    {\"date\":\"2024-05-27 14:33:55\",\"count\":111},\n    {\"date\":\"2024-05-27 14:38:56\",\"count\":120},\n    {\"date\":\"2024-05-27 14:43:59\",\"count\":119},\n    {\"date\":\"2024-05-27 14:49:01\",\"count\":116},\n    {\"date\":\"2024-05-27 14:54:02\",\"count\":114},\n    {\"date\":\"2024-05-27 14:59:03\",\"count\":117},\n    {\"date\":\"2024-05-27 15:04:04\",\"count\":119},\n    {\"date\":\"2024-05-27 15:09:05\",\"count\":127},\n    {\"date\":\"2024-05-27 15:14:09\",\"count\":131},\n    {\"date\":\"2024-05-27 15:19:10\",\"count\":144},\n    {\"date\":\"2024-05-27 15:24:12\",\"count\":159},\n    {\"date\":\"2024-05-27 15:29:13\",\"count\":166},\n    {\"date\":\"2024-05-27 15:34:15\",\"count\":174},\n    {\"date\":\"2024-05-27 15:39:16\",\"count\":175},\n    {\"date\":\"2024-05-27 15:44:20\",\"count\":180},\n    {\"date\":\"2024-05-27 15:49:21\",\"count\":187},\n    {\"date\":\"2024-05-27 15:54:22\",\"count\":193},\n    {\"date\":\"2024-05-27 15:59:24\",\"count\":196},\n    {\"date\":\"2024-05-27 16:04:24\",\"count\":198},\n    {\"date\":\"2024-05-27 16:09:26\",\"count\":203},\n    {\"date\":\"2024-05-27 16:14:29\",\"count\":198},\n    {\"date\":\"2024-05-27 16:19:30\",\"count\":204},\n    {\"date\":\"2024-05-27 16:24:32\",\"count\":212},\n    {\"date\":\"2024-05-27 16:29:33\",\"count\":212},\n    {\"date\":\"2024-05-27 16:34:34\",\"count\":209},\n    {\"date\":\"2024-05-27 16:39:35\",\"count\":198},\n    {\"date\":\"2024-05-27 16:44:39\",\"count\":196},\n    {\"date\":\"2024-05-27 16:49:40\",\"count\":205},\n    {\"date\":\"2024-05-27 16:54:42\",\"count\":216},\n    {\"date\":\"2024-05-27 16:59:43\",\"count\":224},\n    {\"date\":\"2024-05-27 17:04:44\",\"count\":212},\n    {\"date\":\"2024-05-27 17:09:45\",\"count\":208},\n    {\"date\":\"2024-05-27 17:14:49\",\"count\":202},\n    {\"date\":\"2024-05-27 17:19:50\",\"count\":201},\n    {\"date\":\"2024-05-27 17:24:51\",\"count\":202},\n    {\"date\":\"2024-05-27 17:29:52\",\"count\":204},\n    {\"date\":\"2024-05-27 17:34:53\",\"count\":205},\n    {\"date\":\"2024-05-27 17:39:55\",\"count\":209},\n    {\"date\":\"2024-05-27 17:44:58\",\"count\":213},\n    {\"date\":\"2024-05-27 17:50:00\",\"count\":226},\n    {\"date\":\"2024-05-27 17:55:01\",\"count\":232},\n    {\"date\":\"2024-05-27 18:00:03\",\"count\":240},\n    {\"date\":\"2024-05-27 18:05:04\",\"count\":231},\n    {\"date\":\"2024-05-27 18:10:05\",\"count\":228},\n    {\"date\":\"2024-05-27 18:15:09\",\"count\":217},\n    {\"date\":\"2024-05-27 18:20:10\",\"count\":212},\n    {\"date\":\"2024-05-27 18:25:12\",\"count\":199},\n    {\"date\":\"2024-05-27 18:30:13\",\"count\":192},\n    {\"date\":\"2024-05-27 18:35:15\",\"count\":195},\n    {\"date\":\"2024-05-27 18:40:16\",\"count\":189},\n    {\"date\":\"2024-05-27 18:45:20\",\"count\":188},\n    {\"date\":\"2024-05-27 18:50:21\",\"count\":193},\n    {\"date\":\"2024-05-27 18:55:22\",\"count\":192},\n    {\"date\":\"2024-05-27 19:00:23\",\"count\":187},\n    {\"date\":\"2024-05-27 19:05:24\",\"count\":171},\n    {\"date\":\"2024-05-27 19:10:25\",\"count\":156},\n    {\"date\":\"2024-05-27 19:15:29\",\"count\":150},\n    {\"date\":\"2024-05-27 19:20:30\",\"count\":149},\n    {\"date\":\"2024-05-27 19:25:31\",\"count\":144},\n    {\"date\":\"2024-05-27 19:30:32\",\"count\":136},\n    {\"date\":\"2024-05-27 19:35:33\",\"count\":132},\n    {\"date\":\"2024-05-27 19:40:34\",\"count\":133},\n    {\"date\":\"2024-05-27 19:45:38\",\"count\":134},\n    {\"date\":\"2024-05-27 19:50:39\",\"count\":131},\n    {\"date\":\"2024-05-27 19:55:40\",\"count\":123},\n    {\"date\":\"2024-05-27 20:00:41\",\"count\":120},\n    {\"date\":\"2024-05-27 20:05:42\",\"count\":121},\n    {\"date\":\"2024-05-27 20:10:43\",\"count\":125},\n    {\"date\":\"2024-05-27 20:15:47\",\"count\":125},\n    {\"date\":\"2024-05-27 20:20:48\",\"count\":115},\n    {\"date\":\"2024-05-27 20:25:49\",\"count\":110},\n    {\"date\":\"2024-05-27 20:30:50\",\"count\":103},\n    {\"date\":\"2024-05-27 20:35:51\",\"count\":95},\n    {\"date\":\"2024-05-27 20:40:52\",\"count\":83},\n    {\"date\":\"2024-05-27 20:45:56\",\"count\":77},\n    {\"date\":\"2024-05-27 20:50:56\",\"count\":70},\n    {\"date\":\"2024-05-27 20:55:58\",\"count\":64},\n    {\"date\":\"2024-05-27 21:00:58\",\"count\":58},\n    {\"date\":\"2024-05-27 21:05:59\",\"count\":54},\n    {\"date\":\"2024-05-27 21:11:00\",\"count\":53},\n    {\"date\":\"2024-05-27 21:16:04\",\"count\":49},\n    {\"date\":\"2024-05-27 21:21:05\",\"count\":43},\n    {\"date\":\"2024-05-27 21:26:06\",\"count\":39},\n    {\"date\":\"2024-05-27 21:31:07\",\"count\":35},\n    {\"date\":\"2024-05-27 21:36:08\",\"count\":31},\n    {\"date\":\"2024-05-27 21:41:09\",\"count\":31},\n    {\"date\":\"2024-05-27 21:46:12\",\"count\":30},\n    {\"date\":\"2024-05-27 21:51:13\",\"count\":26},\n    {\"date\":\"2024-05-27 21:56:13\",\"count\":25},\n    {\"date\":\"2024-05-27 22:01:14\",\"count\":24},\n    {\"date\":\"2024-05-27 22:06:15\",\"count\":16},\n    {\"date\":\"2024-05-27 22:11:15\",\"count\":15},\n    {\"date\":\"2024-05-27 22:16:18\",\"count\":15},\n    {\"date\":\"2024-05-27 22:21:19\",\"count\":14},\n    {\"date\":\"2024-05-27 22:26:20\",\"count\":14},\n    {\"date\":\"2024-05-27 22:31:21\",\"count\":14},\n    {\"date\":\"2024-05-27 22:36:22\",\"count\":12},\n    {\"date\":\"2024-05-27 22:41:22\",\"count\":10},\n    {\"date\":\"2024-05-27 22:46:25\",\"count\":11},\n    {\"date\":\"2024-05-27 22:51:26\",\"count\":7},\n    {\"date\":\"2024-05-27 22:56:27\",\"count\":6},\n    {\"date\":\"2024-05-27 23:01:28\",\"count\":5},\n    {\"date\":\"2024-05-27 23:06:29\",\"count\":5},\n    {\"date\":\"2024-05-27 23:11:30\",\"count\":5},\n    {\"date\":\"2024-05-27 23:16:33\",\"count\":5},\n    {\"date\":\"2024-05-27 23:21:34\",\"count\":5},\n    {\"date\":\"2024-05-27 23:26:35\",\"count\":5},\n    {\"date\":\"2024-05-27 23:31:36\",\"count\":5},\n    {\"date\":\"2024-05-27 23:36:36\",\"count\":5},\n    {\"date\":\"2024-05-27 23:41:37\",\"count\":5},\n    {\"date\":\"2024-05-27 23:46:40\",\"count\":4},\n    {\"date\":\"2024-05-27 23:51:41\",\"count\":4},\n    {\"date\":\"2024-05-27 23:56:42\",\"count\":4},\n    {\"date\":\"2024-05-28 00:01:42\",\"count\":3},\n    {\"date\":\"2024-05-28 00:06:43\",\"count\":3},\n    {\"date\":\"2024-05-28 00:11:45\",\"count\":3},\n    {\"date\":\"2024-05-28 00:16:48\",\"count\":3},\n    {\"date\":\"2024-05-28 00:21:49\",\"count\":3},\n    {\"date\":\"2024-05-28 00:26:50\",\"count\":3},\n    {\"date\":\"2024-05-28 00:31:51\",\"count\":3},\n    {\"date\":\"2024-05-28 00:36:52\",\"count\":3},\n    {\"date\":\"2024-05-28 00:41:53\",\"count\":3},\n    {\"date\":\"2024-05-28 00:46:56\",\"count\":3},\n    {\"date\":\"2024-05-28 00:51:57\",\"count\":3},\n    {\"date\":\"2024-05-28 00:56:58\",\"count\":3},\n    {\"date\":\"2024-05-28 01:01:58\",\"count\":3},\n    {\"date\":\"2024-05-28 01:06:59\",\"count\":3},\n    {\"date\":\"2024-05-28 01:12:00\",\"count\":3},\n    {\"date\":\"2024-05-28 01:17:03\",\"count\":4},\n    {\"date\":\"2024-05-28 01:22:04\",\"count\":4},\n    {\"date\":\"2024-05-28 01:27:04\",\"count\":4},\n    {\"date\":\"2024-05-28 01:32:05\",\"count\":5},\n    {\"date\":\"2024-05-28 01:37:06\",\"count\":5},\n    {\"date\":\"2024-05-28 01:42:07\",\"count\":5},\n    {\"date\":\"2024-05-28 01:47:10\",\"count\":5},\n    {\"date\":\"2024-05-28 01:52:11\",\"count\":7},\n    {\"date\":\"2024-05-28 01:57:12\",\"count\":7},\n    {\"date\":\"2024-05-28 02:02:12\",\"count\":7},\n    {\"date\":\"2024-05-28 02:07:13\",\"count\":8},\n    {\"date\":\"2024-05-28 02:12:14\",\"count\":8},\n    {\"date\":\"2024-05-28 02:17:17\",\"count\":8},\n    {\"date\":\"2024-05-28 02:22:18\",\"count\":10},\n    {\"date\":\"2024-05-28 02:27:19\",\"count\":10},\n    {\"date\":\"2024-05-28 02:32:20\",\"count\":12},\n    {\"date\":\"2024-05-28 02:37:21\",\"count\":12},\n    {\"date\":\"2024-05-28 02:42:21\",\"count\":12},\n    {\"date\":\"2024-05-28 02:47:25\",\"count\":13},\n    {\"date\":\"2024-05-28 02:52:25\",\"count\":13},\n    {\"date\":\"2024-05-28 02:57:26\",\"count\":14},\n    {\"date\":\"2024-05-28 03:02:27\",\"count\":14},\n    {\"date\":\"2024-05-28 03:07:28\",\"count\":17},\n    {\"date\":\"2024-05-28 03:12:28\",\"count\":18},\n    {\"date\":\"2024-05-28 03:17:31\",\"count\":18},\n    {\"date\":\"2024-05-28 03:22:32\",\"count\":21},\n    {\"date\":\"2024-05-28 03:27:33\",\"count\":22},\n    {\"date\":\"2024-05-28 03:32:34\",\"count\":27},\n    {\"date\":\"2024-05-28 03:37:35\",\"count\":26},\n    {\"date\":\"2024-05-28 03:42:35\",\"count\":27},\n    {\"date\":\"2024-05-28 03:47:39\",\"count\":28},\n    {\"date\":\"2024-05-28 03:52:39\",\"count\":30},\n    {\"date\":\"2024-05-28 03:57:40\",\"count\":32},\n    {\"date\":\"2024-05-28 04:02:41\",\"count\":31},\n    {\"date\":\"2024-05-28 04:07:42\",\"count\":33},\n    {\"date\":\"2024-05-28 04:12:42\",\"count\":39},\n    {\"date\":\"2024-05-28 04:17:46\",\"count\":40},\n    {\"date\":\"2024-05-28 04:22:47\",\"count\":43},\n    {\"date\":\"2024-05-28 04:27:48\",\"count\":46},\n    {\"date\":\"2024-05-28 04:32:48\",\"count\":48},\n    {\"date\":\"2024-05-28 04:37:49\",\"count\":52},\n    {\"date\":\"2024-05-28 04:42:50\",\"count\":54},\n    {\"date\":\"2024-05-28 04:47:53\",\"count\":55},\n    {\"date\":\"2024-05-28 04:52:54\",\"count\":56},\n    {\"date\":\"2024-05-28 04:57:56\",\"count\":64},\n    {\"date\":\"2024-05-28 05:02:56\",\"count\":63},\n    {\"date\":\"2024-05-28 05:07:57\",\"count\":66},\n    {\"date\":\"2024-05-28 05:12:58\",\"count\":67},\n    {\"date\":\"2024-05-28 05:18:01\",\"count\":68},\n    {\"date\":\"2024-05-28 05:23:02\",\"count\":72},\n    {\"date\":\"2024-05-28 05:28:03\",\"count\":70},\n    {\"date\":\"2024-05-28 05:33:04\",\"count\":74},\n    {\"date\":\"2024-05-28 05:38:04\",\"count\":81},\n    {\"date\":\"2024-05-28 05:43:05\",\"count\":80},\n    {\"date\":\"2024-05-28 05:48:08\",\"count\":77},\n    {\"date\":\"2024-05-28 05:53:09\",\"count\":75},\n    {\"date\":\"2024-05-28 05:58:10\",\"count\":74},\n    {\"date\":\"2024-05-28 06:03:10\",\"count\":71},\n    {\"date\":\"2024-05-28 06:08:11\",\"count\":59},\n    {\"date\":\"2024-05-28 06:13:12\",\"count\":56},\n    {\"date\":\"2024-05-28 06:18:15\",\"count\":57},\n    {\"date\":\"2024-05-28 06:23:16\",\"count\":55},\n    {\"date\":\"2024-05-28 06:28:17\",\"count\":51},\n    {\"date\":\"2024-05-28 06:33:17\",\"count\":47},\n    {\"date\":\"2024-05-28 06:38:18\",\"count\":46},\n    {\"date\":\"2024-05-28 06:43:19\",\"count\":46},\n    {\"date\":\"2024-05-28 06:48:22\",\"count\":47},\n    {\"date\":\"2024-05-28 06:53:23\",\"count\":47},\n    {\"date\":\"2024-05-28 06:58:25\",\"count\":46},\n    {\"date\":\"2024-05-28 07:03:25\",\"count\":44},\n    {\"date\":\"2024-05-28 07:08:26\",\"count\":38},\n    {\"date\":\"2024-05-28 07:13:27\",\"count\":38},\n    {\"date\":\"2024-05-28 07:18:30\",\"count\":39},\n    {\"date\":\"2024-05-28 07:23:31\",\"count\":40},\n    {\"date\":\"2024-05-28 07:28:33\",\"count\":40},\n    {\"date\":\"2024-05-28 07:33:34\",\"count\":44},\n    {\"date\":\"2024-05-28 07:38:36\",\"count\":44},\n    {\"date\":\"2024-05-28 07:43:37\",\"count\":46},\n    {\"date\":\"2024-05-28 07:48:41\",\"count\":46},\n    {\"date\":\"2024-05-28 07:53:42\",\"count\":47},\n    {\"date\":\"2024-05-28 07:58:43\",\"count\":49},\n    {\"date\":\"2024-05-28 08:03:44\",\"count\":50},\n    {\"date\":\"2024-05-28 08:08:46\",\"count\":48},\n    {\"date\":\"2024-05-28 08:13:47\",\"count\":45},\n    {\"date\":\"2024-05-28 08:18:51\",\"count\":43},\n    {\"date\":\"2024-05-28 08:23:52\",\"count\":41},\n    {\"date\":\"2024-05-28 08:28:53\",\"count\":39},\n    {\"date\":\"2024-05-28 08:33:54\",\"count\":36},\n    {\"date\":\"2024-05-28 08:38:55\",\"count\":40},\n    {\"date\":\"2024-05-28 08:43:56\",\"count\":39},\n    {\"date\":\"2024-05-28 08:49:01\",\"count\":41},\n    {\"date\":\"2024-05-28 08:54:02\",\"count\":39},\n    {\"date\":\"2024-05-28 08:59:03\",\"count\":43},\n    {\"date\":\"2024-05-28 09:04:04\",\"count\":39},\n    {\"date\":\"2024-05-28 09:09:05\",\"count\":42},\n    {\"date\":\"2024-05-28 09:14:06\",\"count\":42},\n    {\"date\":\"2024-05-28 09:19:10\",\"count\":41},\n    {\"date\":\"2024-05-28 09:24:11\",\"count\":44},\n    {\"date\":\"2024-05-28 09:29:12\",\"count\":45},\n    {\"date\":\"2024-05-28 09:34:13\",\"count\":49},\n    {\"date\":\"2024-05-28 09:39:14\",\"count\":51},\n    {\"date\":\"2024-05-28 09:44:15\",\"count\":53},\n    {\"date\":\"2024-05-28 09:49:19\",\"count\":54},\n    {\"date\":\"2024-05-28 09:54:20\",\"count\":61},\n    {\"date\":\"2024-05-28 09:59:21\",\"count\":63},\n    {\"date\":\"2024-05-28 10:04:22\",\"count\":65},\n    {\"date\":\"2024-05-28 10:09:23\",\"count\":63},\n    {\"date\":\"2024-05-28 10:14:24\",\"count\":66},\n    {\"date\":\"2024-05-28 10:19:27\",\"count\":67},\n    {\"date\":\"2024-05-28 10:24:28\",\"count\":67},\n    {\"date\":\"2024-05-28 10:29:29\",\"count\":70},\n    {\"date\":\"2024-05-28 10:34:30\",\"count\":75},\n    {\"date\":\"2024-05-28 10:39:31\",\"count\":77},\n    {\"date\":\"2024-05-28 10:44:33\",\"count\":81},\n    {\"date\":\"2024-05-28 10:49:36\",\"count\":79},\n    {\"date\":\"2024-05-28 10:54:38\",\"count\":75},\n    {\"date\":\"2024-05-28 10:59:39\",\"count\":76},\n    {\"date\":\"2024-05-28 11:04:39\",\"count\":71},\n    {\"date\":\"2024-05-28 11:09:41\",\"count\":67},\n    {\"date\":\"2024-05-28 11:14:41\",\"count\":63},\n    {\"date\":\"2024-05-28 11:19:45\",\"count\":62},\n    {\"date\":\"2024-05-28 11:24:46\",\"count\":65},\n    {\"date\":\"2024-05-28 11:29:48\",\"count\":64},\n    {\"date\":\"2024-05-28 11:34:51\",\"count\":64},\n    {\"date\":\"2024-05-28 11:39:52\",\"count\":64},\n    {\"date\":\"2024-05-28 11:44:53\",\"count\":62},\n    {\"date\":\"2024-05-28 11:49:57\",\"count\":60},\n    {\"date\":\"2024-05-28 11:54:58\",\"count\":61},\n    {\"date\":\"2024-05-28 11:59:59\",\"count\":61},\n    {\"date\":\"2024-05-28 12:05:00\",\"count\":57},\n    {\"date\":\"2024-05-28 12:10:02\",\"count\":57},\n    {\"date\":\"2024-05-28 12:15:03\",\"count\":54},\n    {\"date\":\"2024-05-28 12:20:06\",\"count\":54},\n    {\"date\":\"2024-05-28 12:25:07\",\"count\":56},\n    {\"date\":\"2024-05-28 12:30:08\",\"count\":60},\n    {\"date\":\"2024-05-28 12:35:09\",\"count\":61},\n    {\"date\":\"2024-05-28 12:40:10\",\"count\":59},\n    {\"date\":\"2024-05-28 12:45:11\",\"count\":62},\n    {\"date\":\"2024-05-28 12:50:15\",\"count\":64},\n    {\"date\":\"2024-05-28 12:55:16\",\"count\":64},\n    {\"date\":\"2024-05-28 13:00:18\",\"count\":65},\n    {\"date\":\"2024-05-28 13:05:19\",\"count\":67},\n    {\"date\":\"2024-05-28 13:10:20\",\"count\":70},\n    {\"date\":\"2024-05-28 13:15:21\",\"count\":76},\n    {\"date\":\"2024-05-28 13:20:25\",\"count\":76},\n    {\"date\":\"2024-05-28 13:25:25\",\"count\":78},\n    {\"date\":\"2024-05-28 13:30:26\",\"count\":77},\n    {\"date\":\"2024-05-28 13:35:28\",\"count\":82},\n    {\"date\":\"2024-05-28 13:40:29\",\"count\":84},\n    {\"date\":\"2024-05-28 13:45:31\",\"count\":85},\n    {\"date\":\"2024-05-28 13:50:34\",\"count\":89},\n    {\"date\":\"2024-05-28 13:55:35\",\"count\":89},\n    {\"date\":\"2024-05-28 14:00:36\",\"count\":87},\n    {\"date\":\"2024-05-28 14:05:37\",\"count\":88},\n    {\"date\":\"2024-05-28 14:10:39\",\"count\":88},\n    {\"date\":\"2024-05-28 14:15:40\",\"count\":91},\n    {\"date\":\"2024-05-28 14:20:44\",\"count\":94},\n    {\"date\":\"2024-05-28 14:25:45\",\"count\":98},\n    {\"date\":\"2024-05-28 14:30:46\",\"count\":101},\n    {\"date\":\"2024-05-28 14:35:47\",\"count\":105},\n    {\"date\":\"2024-05-28 14:40:48\",\"count\":104},\n    {\"date\":\"2024-05-28 14:45:49\",\"count\":106},\n    {\"date\":\"2024-05-28 14:50:53\",\"count\":114},\n    {\"date\":\"2024-05-28 14:55:54\",\"count\":122},\n    {\"date\":\"2024-05-28 15:00:56\",\"count\":120},\n    {\"date\":\"2024-05-28 15:05:57\",\"count\":123},\n    {\"date\":\"2024-05-28 15:10:58\",\"count\":127},\n    {\"date\":\"2024-05-28 15:15:59\",\"count\":130},\n    {\"date\":\"2024-05-28 15:21:03\",\"count\":135},\n    {\"date\":\"2024-05-28 15:26:04\",\"count\":140},\n    {\"date\":\"2024-05-28 15:31:05\",\"count\":147},\n    {\"date\":\"2024-05-28 15:36:06\",\"count\":158},\n    {\"date\":\"2024-05-28 15:41:07\",\"count\":169},\n    {\"date\":\"2024-05-28 15:46:09\",\"count\":178},\n    {\"date\":\"2024-05-28 15:51:13\",\"count\":180},\n    {\"date\":\"2024-05-28 15:56:14\",\"count\":177},\n    {\"date\":\"2024-05-28 16:01:15\",\"count\":185},\n    {\"date\":\"2024-05-28 16:06:16\",\"count\":189},\n    {\"date\":\"2024-05-28 16:11:17\",\"count\":192},\n    {\"date\":\"2024-05-28 16:16:18\",\"count\":194},\n    {\"date\":\"2024-05-28 16:21:23\",\"count\":191},\n    {\"date\":\"2024-05-28 16:26:24\",\"count\":196},\n    {\"date\":\"2024-05-28 16:31:25\",\"count\":206},\n    {\"date\":\"2024-05-28 16:36:26\",\"count\":204},\n    {\"date\":\"2024-05-28 16:41:27\",\"count\":200},\n    {\"date\":\"2024-05-28 16:46:28\",\"count\":195},\n    {\"date\":\"2024-05-28 16:51:32\",\"count\":193},\n    {\"date\":\"2024-05-28 16:56:33\",\"count\":183},\n    {\"date\":\"2024-05-28 17:01:34\",\"count\":182},\n    {\"date\":\"2024-05-28 17:06:35\",\"count\":186},\n    {\"date\":\"2024-05-28 17:11:36\",\"count\":184},\n    {\"date\":\"2024-05-28 17:16:37\",\"count\":187},\n    {\"date\":\"2024-05-28 17:21:41\",\"count\":196},\n    {\"date\":\"2024-05-28 17:26:42\",\"count\":190},\n    {\"date\":\"2024-05-28 17:31:43\",\"count\":183},\n    {\"date\":\"2024-05-28 17:36:44\",\"count\":179},\n    {\"date\":\"2024-05-28 17:41:45\",\"count\":182},\n    {\"date\":\"2024-05-28 17:46:46\",\"count\":180},\n    {\"date\":\"2024-05-28 17:51:50\",\"count\":175},\n    {\"date\":\"2024-05-28 17:56:51\",\"count\":173},\n    {\"date\":\"2024-05-28 18:01:52\",\"count\":176},\n    {\"date\":\"2024-05-28 18:06:53\",\"count\":174},\n    {\"date\":\"2024-05-28 18:11:54\",\"count\":169},\n    {\"date\":\"2024-05-28 18:16:55\",\"count\":172},\n    {\"date\":\"2024-05-28 18:21:59\",\"count\":171},\n    {\"date\":\"2024-05-28 18:27:01\",\"count\":179},\n    {\"date\":\"2024-05-28 18:32:02\",\"count\":182},\n    {\"date\":\"2024-05-28 18:37:03\",\"count\":174},\n    {\"date\":\"2024-05-28 18:42:04\",\"count\":174},\n    {\"date\":\"2024-05-28 18:47:05\",\"count\":163},\n    {\"date\":\"2024-05-28 18:52:09\",\"count\":163},\n    {\"date\":\"2024-05-28 18:57:10\",\"count\":161},\n    {\"date\":\"2024-05-28 19:02:12\",\"count\":159},\n    {\"date\":\"2024-05-28 19:07:13\",\"count\":154},\n    {\"date\":\"2024-05-28 19:12:15\",\"count\":151},\n    {\"date\":\"2024-05-28 19:17:16\",\"count\":149},\n    {\"date\":\"2024-05-28 19:22:20\",\"count\":150},\n    {\"date\":\"2024-05-28 19:27:21\",\"count\":144},\n    {\"date\":\"2024-05-28 19:32:22\",\"count\":137},\n    {\"date\":\"2024-05-28 19:37:23\",\"count\":140},\n    {\"date\":\"2024-05-28 19:42:26\",\"count\":141},\n    {\"date\":\"2024-05-28 19:47:27\",\"count\":144},\n    {\"date\":\"2024-05-28 19:52:30\",\"count\":135},\n    {\"date\":\"2024-05-28 19:57:31\",\"count\":130},\n    {\"date\":\"2024-05-28 20:02:32\",\"count\":129},\n    {\"date\":\"2024-05-28 20:07:33\",\"count\":129},\n    {\"date\":\"2024-05-28 20:12:34\",\"count\":126},\n    {\"date\":\"2024-05-28 20:17:35\",\"count\":123},\n    {\"date\":\"2024-05-28 20:22:39\",\"count\":110},\n    {\"date\":\"2024-05-28 20:27:40\",\"count\":105},\n    {\"date\":\"2024-05-28 20:32:41\",\"count\":102},\n    {\"date\":\"2024-05-28 20:37:42\",\"count\":98},\n    {\"date\":\"2024-05-28 20:42:43\",\"count\":95},\n    {\"date\":\"2024-05-28 20:47:44\",\"count\":89},\n    {\"date\":\"2024-05-28 20:52:48\",\"count\":84},\n    {\"date\":\"2024-05-28 20:57:49\",\"count\":78},\n    {\"date\":\"2024-05-28 21:02:50\",\"count\":76},\n    {\"date\":\"2024-05-28 21:07:50\",\"count\":69},\n    {\"date\":\"2024-05-28 21:12:51\",\"count\":59},\n    {\"date\":\"2024-05-28 21:17:52\",\"count\":55},\n    {\"date\":\"2024-05-28 21:22:56\",\"count\":51},\n    {\"date\":\"2024-05-28 21:27:56\",\"count\":51},\n    {\"date\":\"2024-05-28 21:32:57\",\"count\":47},\n    {\"date\":\"2024-05-28 21:37:58\",\"count\":45},\n    {\"date\":\"2024-05-28 21:42:58\",\"count\":44},\n    {\"date\":\"2024-05-28 21:47:59\",\"count\":44},\n    {\"date\":\"2024-05-28 21:53:03\",\"count\":40},\n    {\"date\":\"2024-05-28 21:58:04\",\"count\":35},\n    {\"date\":\"2024-05-28 22:03:05\",\"count\":32},\n    {\"date\":\"2024-05-28 22:08:06\",\"count\":29},\n    {\"date\":\"2024-05-28 22:13:06\",\"count\":28},\n    {\"date\":\"2024-05-28 22:18:07\",\"count\":25},\n    {\"date\":\"2024-05-28 22:23:10\",\"count\":25},\n    {\"date\":\"2024-05-28 22:28:11\",\"count\":19},\n    {\"date\":\"2024-05-28 22:33:11\",\"count\":19},\n    {\"date\":\"2024-05-28 22:38:12\",\"count\":19},\n    {\"date\":\"2024-05-28 22:43:13\",\"count\":18},\n    {\"date\":\"2024-05-28 22:48:14\",\"count\":16},\n    {\"date\":\"2024-05-28 22:53:17\",\"count\":13},\n    {\"date\":\"2024-05-28 22:58:17\",\"count\":12},\n    {\"date\":\"2024-05-28 23:03:18\",\"count\":12},\n    {\"date\":\"2024-05-28 23:08:19\",\"count\":12},\n    {\"date\":\"2024-05-28 23:13:20\",\"count\":12},\n    {\"date\":\"2024-05-28 23:18:20\",\"count\":11},\n    {\"date\":\"2024-05-28 23:23:24\",\"count\":11},\n    {\"date\":\"2024-05-28 23:28:24\",\"count\":11},\n    {\"date\":\"2024-05-28 23:33:25\",\"count\":11},\n    {\"date\":\"2024-05-28 23:38:26\",\"count\":11},\n    {\"date\":\"2024-05-28 23:43:27\",\"count\":11},\n    {\"date\":\"2024-05-28 23:48:27\",\"count\":12},\n    {\"date\":\"2024-05-28 23:53:30\",\"count\":11},\n    {\"date\":\"2024-05-28 23:58:31\",\"count\":9},\n    {\"date\":\"2024-05-29 00:03:32\",\"count\":9},\n    {\"date\":\"2024-05-29 00:08:33\",\"count\":9},\n    {\"date\":\"2024-05-29 00:13:33\",\"count\":7},\n    {\"date\":\"2024-05-29 00:18:34\",\"count\":7},\n    {\"date\":\"2024-05-29 00:23:37\",\"count\":7},\n    {\"date\":\"2024-05-29 00:28:38\",\"count\":7},\n    {\"date\":\"2024-05-29 00:33:38\",\"count\":6},\n    {\"date\":\"2024-05-29 00:38:39\",\"count\":6},\n    {\"date\":\"2024-05-29 00:43:40\",\"count\":6},\n    {\"date\":\"2024-05-29 00:48:41\",\"count\":6},\n    {\"date\":\"2024-05-29 00:53:44\",\"count\":6},\n    {\"date\":\"2024-05-29 00:58:45\",\"count\":6},\n    {\"date\":\"2024-05-29 01:03:46\",\"count\":5},\n    {\"date\":\"2024-05-29 01:08:47\",\"count\":5},\n    {\"date\":\"2024-05-29 01:13:47\",\"count\":5},\n    {\"date\":\"2024-05-29 01:18:48\",\"count\":6},\n    {\"date\":\"2024-05-29 01:23:51\",\"count\":6},\n    {\"date\":\"2024-05-29 01:28:52\",\"count\":6},\n    {\"date\":\"2024-05-29 01:33:52\",\"count\":7},\n    {\"date\":\"2024-05-29 01:38:53\",\"count\":7},\n    {\"date\":\"2024-05-29 01:43:54\",\"count\":7},\n    {\"date\":\"2024-05-29 01:48:55\",\"count\":7},\n    {\"date\":\"2024-05-29 01:53:57\",\"count\":8},\n    {\"date\":\"2024-05-29 01:58:58\",\"count\":9},\n    {\"date\":\"2024-05-29 02:03:59\",\"count\":11},\n    {\"date\":\"2024-05-29 02:08:59\",\"count\":13},\n    {\"date\":\"2024-05-29 02:14:00\",\"count\":13},\n    {\"date\":\"2024-05-29 02:19:01\",\"count\":13},\n    {\"date\":\"2024-05-29 02:24:04\",\"count\":12},\n    {\"date\":\"2024-05-29 02:29:05\",\"count\":12},\n    {\"date\":\"2024-05-29 02:34:06\",\"count\":12},\n    {\"date\":\"2024-05-29 02:39:07\",\"count\":14},\n    {\"date\":\"2024-05-29 02:44:07\",\"count\":14},\n    {\"date\":\"2024-05-29 02:49:08\",\"count\":14},\n    {\"date\":\"2024-05-29 02:54:11\",\"count\":14},\n    {\"date\":\"2024-05-29 02:59:12\",\"count\":14},\n    {\"date\":\"2024-05-29 03:04:13\",\"count\":12},\n    {\"date\":\"2024-05-29 03:09:13\",\"count\":12},\n    {\"date\":\"2024-05-29 03:14:14\",\"count\":12},\n    {\"date\":\"2024-05-29 03:19:15\",\"count\":13},\n    {\"date\":\"2024-05-29 03:24:18\",\"count\":12},\n    {\"date\":\"2024-05-29 03:29:19\",\"count\":14},\n    {\"date\":\"2024-05-29 03:34:20\",\"count\":17},\n    {\"date\":\"2024-05-29 03:39:20\",\"count\":17},\n    {\"date\":\"2024-05-29 03:44:21\",\"count\":18},\n    {\"date\":\"2024-05-29 03:49:22\",\"count\":19},\n    {\"date\":\"2024-05-29 03:54:25\",\"count\":19},\n    {\"date\":\"2024-05-29 03:59:26\",\"count\":20},\n    {\"date\":\"2024-05-29 04:04:26\",\"count\":22},\n    {\"date\":\"2024-05-29 04:09:27\",\"count\":22},\n    {\"date\":\"2024-05-29 04:14:28\",\"count\":22},\n    {\"date\":\"2024-05-29 04:19:29\",\"count\":22},\n    {\"date\":\"2024-05-29 04:24:32\",\"count\":24},\n    {\"date\":\"2024-05-29 04:29:33\",\"count\":26},\n    {\"date\":\"2024-05-29 04:34:33\",\"count\":27},\n    {\"date\":\"2024-05-29 04:39:34\",\"count\":28},\n    {\"date\":\"2024-05-29 04:44:35\",\"count\":31},\n    {\"date\":\"2024-05-29 04:49:36\",\"count\":34},\n    {\"date\":\"2024-05-29 04:54:39\",\"count\":37},\n    {\"date\":\"2024-05-29 04:59:39\",\"count\":42},\n    {\"date\":\"2024-05-29 05:04:40\",\"count\":46},\n    {\"date\":\"2024-05-29 05:09:41\",\"count\":48},\n    {\"date\":\"2024-05-29 05:14:42\",\"count\":49},\n    {\"date\":\"2024-05-29 05:19:42\",\"count\":53},\n    {\"date\":\"2024-05-29 05:24:46\",\"count\":56},\n    {\"date\":\"2024-05-29 05:29:46\",\"count\":58},\n    {\"date\":\"2024-05-29 05:34:47\",\"count\":60},\n    {\"date\":\"2024-05-29 05:39:48\",\"count\":66},\n    {\"date\":\"2024-05-29 05:44:48\",\"count\":64},\n    {\"date\":\"2024-05-29 05:49:49\",\"count\":61},\n    {\"date\":\"2024-05-29 05:54:52\",\"count\":61},\n    {\"date\":\"2024-05-29 05:59:53\",\"count\":59},\n    {\"date\":\"2024-05-29 06:04:54\",\"count\":65},\n    {\"date\":\"2024-05-29 06:09:55\",\"count\":67},\n    {\"date\":\"2024-05-29 06:14:55\",\"count\":66},\n    {\"date\":\"2024-05-29 06:19:56\",\"count\":63},\n    {\"date\":\"2024-05-29 06:24:59\",\"count\":62},\n    {\"date\":\"2024-05-29 06:30:00\",\"count\":60},\n    {\"date\":\"2024-05-29 06:35:01\",\"count\":58},\n    {\"date\":\"2024-05-29 06:40:02\",\"count\":54},\n    {\"date\":\"2024-05-29 06:45:03\",\"count\":54},\n    {\"date\":\"2024-05-29 06:50:03\",\"count\":49},\n    {\"date\":\"2024-05-29 06:55:06\",\"count\":46},\n    {\"date\":\"2024-05-29 07:00:07\",\"count\":47},\n    {\"date\":\"2024-05-29 07:05:08\",\"count\":46},\n    {\"date\":\"2024-05-29 07:10:09\",\"count\":50},\n    {\"date\":\"2024-05-29 07:15:10\",\"count\":55},\n    {\"date\":\"2024-05-29 07:20:11\",\"count\":56},\n    {\"date\":\"2024-05-29 07:25:14\",\"count\":57},\n    {\"date\":\"2024-05-29 07:30:15\",\"count\":55},\n    {\"date\":\"2024-05-29 07:35:16\",\"count\":55},\n    {\"date\":\"2024-05-29 07:40:16\",\"count\":55},\n    {\"date\":\"2024-05-29 07:45:17\",\"count\":57},\n    {\"date\":\"2024-05-29 07:50:18\",\"count\":59},\n    {\"date\":\"2024-05-29 07:55:21\",\"count\":61},\n    {\"date\":\"2024-05-29 08:00:22\",\"count\":65},\n    {\"date\":\"2024-05-29 08:05:23\",\"count\":65},\n    {\"date\":\"2024-05-29 08:10:24\",\"count\":63},\n    {\"date\":\"2024-05-29 08:15:26\",\"count\":65},\n    {\"date\":\"2024-05-29 08:20:27\",\"count\":60},\n    {\"date\":\"2024-05-29 08:25:30\",\"count\":53},\n    {\"date\":\"2024-05-29 08:30:32\",\"count\":52},\n    {\"date\":\"2024-05-29 08:35:33\",\"count\":56},\n    {\"date\":\"2024-05-29 08:40:34\",\"count\":53},\n    {\"date\":\"2024-05-29 08:45:35\",\"count\":53},\n    {\"date\":\"2024-05-29 08:50:36\",\"count\":53},\n    {\"date\":\"2024-05-29 08:55:40\",\"count\":54},\n    {\"date\":\"2024-05-29 09:00:41\",\"count\":56},\n    {\"date\":\"2024-05-29 09:05:42\",\"count\":59},\n    {\"date\":\"2024-05-29 09:10:43\",\"count\":62},\n    {\"date\":\"2024-05-29 09:15:44\",\"count\":61},\n    {\"date\":\"2024-05-29 09:20:45\",\"count\":63},\n    {\"date\":\"2024-05-29 09:25:49\",\"count\":63},\n    {\"date\":\"2024-05-29 09:30:50\",\"count\":65},\n    {\"date\":\"2024-05-29 09:35:51\",\"count\":67},\n    {\"date\":\"2024-05-29 09:40:52\",\"count\":64},\n    {\"date\":\"2024-05-29 09:45:53\",\"count\":64},\n    {\"date\":\"2024-05-29 09:50:54\",\"count\":69},\n    {\"date\":\"2024-05-29 09:55:58\",\"count\":69},\n    {\"date\":\"2024-05-29 10:00:59\",\"count\":71},\n    {\"date\":\"2024-05-29 10:06:00\",\"count\":75},\n    {\"date\":\"2024-05-29 10:11:01\",\"count\":76},\n    {\"date\":\"2024-05-29 10:16:02\",\"count\":76},\n    {\"date\":\"2024-05-29 10:21:04\",\"count\":75},\n    {\"date\":\"2024-05-29 10:26:07\",\"count\":77},\n    {\"date\":\"2024-05-29 10:31:08\",\"count\":71},\n    {\"date\":\"2024-05-29 10:36:10\",\"count\":72},\n    {\"date\":\"2024-05-29 10:41:11\",\"count\":70},\n    {\"date\":\"2024-05-29 10:46:12\",\"count\":73},\n    {\"date\":\"2024-05-29 10:51:14\",\"count\":73},\n    {\"date\":\"2024-05-29 10:56:18\",\"count\":69},\n    {\"date\":\"2024-05-29 11:01:19\",\"count\":71},\n    {\"date\":\"2024-05-29 11:06:20\",\"count\":68},\n    {\"date\":\"2024-05-29 11:11:22\",\"count\":69},\n    {\"date\":\"2024-05-29 11:16:23\",\"count\":65},\n    {\"date\":\"2024-05-29 11:21:24\",\"count\":61},\n    {\"date\":\"2024-05-29 11:26:27\",\"count\":66},\n    {\"date\":\"2024-05-29 11:31:28\",\"count\":64},\n    {\"date\":\"2024-05-29 11:36:29\",\"count\":62},\n    {\"date\":\"2024-05-29 11:41:30\",\"count\":62},\n    {\"date\":\"2024-05-29 11:46:31\",\"count\":59},\n    {\"date\":\"2024-05-29 11:51:33\",\"count\":61},\n    {\"date\":\"2024-05-29 11:56:37\",\"count\":62},\n    {\"date\":\"2024-05-29 12:01:38\",\"count\":65},\n    {\"date\":\"2024-05-29 12:06:39\",\"count\":66},\n    {\"date\":\"2024-05-29 12:11:40\",\"count\":67},\n    {\"date\":\"2024-05-29 12:16:42\",\"count\":63},\n    {\"date\":\"2024-05-29 12:21:43\",\"count\":61},\n    {\"date\":\"2024-05-29 12:26:46\",\"count\":62},\n    {\"date\":\"2024-05-29 12:31:48\",\"count\":66},\n    {\"date\":\"2024-05-29 12:36:49\",\"count\":63},\n    {\"date\":\"2024-05-29 12:41:49\",\"count\":64},\n    {\"date\":\"2024-05-29 12:46:51\",\"count\":66},\n    {\"date\":\"2024-05-29 12:51:51\",\"count\":71},\n    {\"date\":\"2024-05-29 12:56:55\",\"count\":66},\n    {\"date\":\"2024-05-29 13:01:56\",\"count\":66},\n    {\"date\":\"2024-05-29 13:06:57\",\"count\":72},\n    {\"date\":\"2024-05-29 13:11:58\",\"count\":71},\n    {\"date\":\"2024-05-29 13:16:59\",\"count\":67},\n    {\"date\":\"2024-05-29 13:22:01\",\"count\":69},\n    {\"date\":\"2024-05-29 13:27:06\",\"count\":69},\n    {\"date\":\"2024-05-29 13:32:07\",\"count\":72},\n    {\"date\":\"2024-05-29 13:37:08\",\"count\":78},\n    {\"date\":\"2024-05-29 13:42:09\",\"count\":79},\n    {\"date\":\"2024-05-29 13:47:11\",\"count\":87},\n    {\"date\":\"2024-05-29 13:52:12\",\"count\":89},\n    {\"date\":\"2024-05-29 13:57:16\",\"count\":95},\n    {\"date\":\"2024-05-29 14:02:17\",\"count\":100},\n    {\"date\":\"2024-05-29 14:07:18\",\"count\":99},\n    {\"date\":\"2024-05-29 14:12:19\",\"count\":97},\n    {\"date\":\"2024-05-29 14:17:22\",\"count\":97},\n    {\"date\":\"2024-05-29 14:22:23\",\"count\":93},\n    {\"date\":\"2024-05-29 14:27:27\",\"count\":94},\n    {\"date\":\"2024-05-29 14:32:28\",\"count\":97},\n    {\"date\":\"2024-05-29 14:37:29\",\"count\":90},\n    {\"date\":\"2024-05-29 14:42:30\",\"count\":87},\n    {\"date\":\"2024-05-29 14:47:32\",\"count\":99},\n    {\"date\":\"2024-05-29 14:52:33\",\"count\":98},\n    {\"date\":\"2024-05-29 14:57:37\",\"count\":102},\n    {\"date\":\"2024-05-29 15:02:38\",\"count\":100},\n    {\"date\":\"2024-05-29 15:07:39\",\"count\":107},\n    {\"date\":\"2024-05-29 15:12:40\",\"count\":115},\n    {\"date\":\"2024-05-29 15:17:42\",\"count\":125},\n    {\"date\":\"2024-05-29 15:22:43\",\"count\":144},\n    {\"date\":\"2024-05-29 15:27:47\",\"count\":144},\n    {\"date\":\"2024-05-29 15:32:48\",\"count\":147},\n    {\"date\":\"2024-05-29 15:37:49\",\"count\":151},\n    {\"date\":\"2024-05-29 15:42:50\",\"count\":150},\n    {\"date\":\"2024-05-29 15:47:51\",\"count\":151},\n    {\"date\":\"2024-05-29 15:52:53\",\"count\":153},\n    {\"date\":\"2024-05-29 15:57:56\",\"count\":166},\n    {\"date\":\"2024-05-29 16:02:57\",\"count\":172},\n    {\"date\":\"2024-05-29 16:07:58\",\"count\":170},\n    {\"date\":\"2024-05-29 16:12:59\",\"count\":175},\n    {\"date\":\"2024-05-29 16:18:01\",\"count\":185},\n    {\"date\":\"2024-05-29 16:23:02\",\"count\":204},\n    {\"date\":\"2024-05-29 16:28:06\",\"count\":209},\n    {\"date\":\"2024-05-29 16:33:07\",\"count\":215},\n    {\"date\":\"2024-05-29 16:38:08\",\"count\":206},\n    {\"date\":\"2024-05-29 16:43:10\",\"count\":204},\n    {\"date\":\"2024-05-29 16:48:11\",\"count\":208},\n    {\"date\":\"2024-05-29 16:53:12\",\"count\":204},\n    {\"date\":\"2024-05-29 16:58:16\",\"count\":196},\n    {\"date\":\"2024-05-29 17:03:17\",\"count\":191},\n    {\"date\":\"2024-05-29 17:08:19\",\"count\":185},\n    {\"date\":\"2024-05-29 17:13:20\",\"count\":177},\n    {\"date\":\"2024-05-29 17:18:21\",\"count\":176},\n    {\"date\":\"2024-05-29 17:23:22\",\"count\":175},\n    {\"date\":\"2024-05-29 17:28:26\",\"count\":151},\n    {\"date\":\"2024-05-29 17:33:27\",\"count\":138},\n    {\"date\":\"2024-05-29 17:38:28\",\"count\":132},\n    {\"date\":\"2024-05-29 17:43:29\",\"count\":125},\n    {\"date\":\"2024-05-29 17:48:30\",\"count\":120},\n    {\"date\":\"2024-05-29 17:53:31\",\"count\":122},\n    {\"date\":\"2024-05-29 17:58:35\",\"count\":118},\n    {\"date\":\"2024-05-29 18:03:36\",\"count\":117},\n    {\"date\":\"2024-05-29 18:08:37\",\"count\":117},\n    {\"date\":\"2024-05-29 18:13:38\",\"count\":122},\n    {\"date\":\"2024-05-29 18:18:39\",\"count\":122},\n    {\"date\":\"2024-05-29 18:23:40\",\"count\":127},\n    {\"date\":\"2024-05-29 18:28:44\",\"count\":127},\n    {\"date\":\"2024-05-29 18:33:45\",\"count\":130},\n    {\"date\":\"2024-05-29 18:38:46\",\"count\":133},\n    {\"date\":\"2024-05-29 18:43:47\",\"count\":133},\n    {\"date\":\"2024-05-29 18:48:48\",\"count\":138},\n    {\"date\":\"2024-05-29 18:53:49\",\"count\":141},\n    {\"date\":\"2024-05-29 18:58:52\",\"count\":139},\n    {\"date\":\"2024-05-29 19:03:53\",\"count\":139},\n    {\"date\":\"2024-05-29 19:08:54\",\"count\":135},\n    {\"date\":\"2024-05-29 19:13:55\",\"count\":129},\n    {\"date\":\"2024-05-29 19:18:56\",\"count\":131},\n    {\"date\":\"2024-05-29 19:23:57\",\"count\":131},\n    {\"date\":\"2024-05-29 19:29:01\",\"count\":129},\n    {\"date\":\"2024-05-29 19:34:02\",\"count\":129},\n    {\"date\":\"2024-05-29 19:39:03\",\"count\":111},\n    {\"date\":\"2024-05-29 19:44:04\",\"count\":106},\n    {\"date\":\"2024-05-29 19:49:05\",\"count\":106},\n    {\"date\":\"2024-05-29 19:54:06\",\"count\":112},\n    {\"date\":\"2024-05-29 19:59:10\",\"count\":104},\n    {\"date\":\"2024-05-29 20:04:11\",\"count\":98},\n    {\"date\":\"2024-05-29 20:09:13\",\"count\":97},\n    {\"date\":\"2024-05-29 20:14:14\",\"count\":91},\n    {\"date\":\"2024-05-29 20:19:15\",\"count\":87},\n    {\"date\":\"2024-05-29 20:24:16\",\"count\":83},\n    {\"date\":\"2024-05-29 20:29:20\",\"count\":78},\n    {\"date\":\"2024-05-29 20:34:21\",\"count\":78},\n    {\"date\":\"2024-05-29 20:39:22\",\"count\":71},\n    {\"date\":\"2024-05-29 20:44:23\",\"count\":64},\n    {\"date\":\"2024-05-29 20:49:25\",\"count\":62},\n    {\"date\":\"2024-05-29 20:54:26\",\"count\":59},\n    {\"date\":\"2024-05-29 20:59:29\",\"count\":56},\n    {\"date\":\"2024-05-29 21:04:30\",\"count\":53},\n    {\"date\":\"2024-05-29 21:09:31\",\"count\":48},\n    {\"date\":\"2024-05-29 21:14:32\",\"count\":46},\n    {\"date\":\"2024-05-29 21:19:33\",\"count\":39},\n    {\"date\":\"2024-05-29 21:24:34\",\"count\":43},\n    {\"date\":\"2024-05-29 21:29:38\",\"count\":40},\n    {\"date\":\"2024-05-29 21:34:39\",\"count\":40},\n    {\"date\":\"2024-05-29 21:39:39\",\"count\":39},\n    {\"date\":\"2024-05-29 21:44:40\",\"count\":39},\n    {\"date\":\"2024-05-29 21:49:41\",\"count\":38},\n    {\"date\":\"2024-05-29 21:54:42\",\"count\":36},\n    {\"date\":\"2024-05-29 21:59:45\",\"count\":33},\n    {\"date\":\"2024-05-29 22:04:46\",\"count\":32},\n    {\"date\":\"2024-05-29 22:09:46\",\"count\":30},\n    {\"date\":\"2024-05-29 22:14:47\",\"count\":29},\n    {\"date\":\"2024-05-29 22:19:48\",\"count\":27},\n    {\"date\":\"2024-05-29 22:24:49\",\"count\":28},\n    {\"date\":\"2024-05-29 22:29:51\",\"count\":27},\n    {\"date\":\"2024-05-29 22:34:52\",\"count\":26},\n    {\"date\":\"2024-05-29 22:39:53\",\"count\":22},\n    {\"date\":\"2024-05-29 22:44:54\",\"count\":19},\n    {\"date\":\"2024-05-29 22:49:54\",\"count\":18},\n    {\"date\":\"2024-05-29 22:54:55\",\"count\":18},\n    {\"date\":\"2024-05-29 22:59:58\",\"count\":19},\n    {\"date\":\"2024-05-29 23:04:59\",\"count\":20},\n    {\"date\":\"2024-05-29 23:10:00\",\"count\":19},\n    {\"date\":\"2024-05-29 23:15:01\",\"count\":20},\n    {\"date\":\"2024-05-29 23:20:02\",\"count\":22},\n    {\"date\":\"2024-05-29 23:25:02\",\"count\":22},\n    {\"date\":\"2024-05-29 23:30:06\",\"count\":20},\n    {\"date\":\"2024-05-29 23:35:06\",\"count\":19},\n    {\"date\":\"2024-05-29 23:40:07\",\"count\":21},\n    {\"date\":\"2024-05-29 23:45:08\",\"count\":19},\n    {\"date\":\"2024-05-29 23:50:09\",\"count\":19},\n    {\"date\":\"2024-05-29 23:55:09\",\"count\":19},\n    {\"date\":\"2024-05-30 00:00:13\",\"count\":18},\n    {\"date\":\"2024-05-30 00:05:14\",\"count\":18},\n    {\"date\":\"2024-05-30 00:10:14\",\"count\":17},\n    {\"date\":\"2024-05-30 00:15:15\",\"count\":18},\n    {\"date\":\"2024-05-30 00:20:16\",\"count\":20},\n    {\"date\":\"2024-05-30 00:25:16\",\"count\":16},\n    {\"date\":\"2024-05-30 00:30:19\",\"count\":16},\n    {\"date\":\"2024-05-30 00:35:20\",\"count\":16},\n    {\"date\":\"2024-05-30 00:40:20\",\"count\":16},\n    {\"date\":\"2024-05-30 00:45:21\",\"count\":16},\n    {\"date\":\"2024-05-30 00:50:22\",\"count\":16},\n    {\"date\":\"2024-05-30 00:55:24\",\"count\":17},\n    {\"date\":\"2024-05-30 01:00:27\",\"count\":16},\n    {\"date\":\"2024-05-30 01:05:27\",\"count\":16},\n    {\"date\":\"2024-05-30 01:10:28\",\"count\":15},\n    {\"date\":\"2024-05-30 01:15:29\",\"count\":14},\n    {\"date\":\"2024-05-30 01:20:30\",\"count\":14},\n    {\"date\":\"2024-05-30 01:25:30\",\"count\":14},\n    {\"date\":\"2024-05-30 01:30:33\",\"count\":12},\n    {\"date\":\"2024-05-30 01:35:34\",\"count\":12},\n    {\"date\":\"2024-05-30 01:40:35\",\"count\":13},\n    {\"date\":\"2024-05-30 01:45:36\",\"count\":13},\n    {\"date\":\"2024-05-30 01:50:36\",\"count\":13},\n    {\"date\":\"2024-05-30 01:55:37\",\"count\":13},\n    {\"date\":\"2024-05-30 02:00:40\",\"count\":13},\n    {\"date\":\"2024-05-30 02:05:41\",\"count\":13},\n    {\"date\":\"2024-05-30 02:10:42\",\"count\":14},\n    {\"date\":\"2024-05-30 02:15:43\",\"count\":14},\n    {\"date\":\"2024-05-30 02:20:43\",\"count\":16},\n    {\"date\":\"2024-05-30 02:25:44\",\"count\":14},\n    {\"date\":\"2024-05-30 02:30:47\",\"count\":11},\n    {\"date\":\"2024-05-30 02:35:48\",\"count\":11},\n    {\"date\":\"2024-05-30 02:40:49\",\"count\":11},\n    {\"date\":\"2024-05-30 02:45:50\",\"count\":12},\n    {\"date\":\"2024-05-30 02:50:50\",\"count\":12},\n    {\"date\":\"2024-05-30 02:55:51\",\"count\":12},\n    {\"date\":\"2024-05-30 03:00:54\",\"count\":12},\n    {\"date\":\"2024-05-30 03:05:55\",\"count\":14},\n    {\"date\":\"2024-05-30 03:10:56\",\"count\":15},\n    {\"date\":\"2024-05-30 03:15:57\",\"count\":15},\n    {\"date\":\"2024-05-30 03:20:57\",\"count\":15},\n    {\"date\":\"2024-05-30 03:25:58\",\"count\":15},\n    {\"date\":\"2024-05-30 03:31:01\",\"count\":17},\n    {\"date\":\"2024-05-30 03:36:02\",\"count\":17},\n    {\"date\":\"2024-05-30 03:41:03\",\"count\":17},\n    {\"date\":\"2024-05-30 03:46:03\",\"count\":17},\n    {\"date\":\"2024-05-30 03:51:04\",\"count\":17},\n    {\"date\":\"2024-05-30 03:56:05\",\"count\":18},\n    {\"date\":\"2024-05-30 04:01:08\",\"count\":19},\n    {\"date\":\"2024-05-30 04:06:09\",\"count\":18},\n    {\"date\":\"2024-05-30 04:11:10\",\"count\":16},\n    {\"date\":\"2024-05-30 04:16:10\",\"count\":17},\n    {\"date\":\"2024-05-30 04:21:11\",\"count\":17},\n    {\"date\":\"2024-05-30 04:26:12\",\"count\":18},\n    {\"date\":\"2024-05-30 04:31:15\",\"count\":18},\n    {\"date\":\"2024-05-30 04:36:16\",\"count\":21},\n    {\"date\":\"2024-05-30 04:41:17\",\"count\":21},\n    {\"date\":\"2024-05-30 04:46:17\",\"count\":22},\n    {\"date\":\"2024-05-30 04:51:18\",\"count\":23},\n    {\"date\":\"2024-05-30 04:56:19\",\"count\":25},\n    {\"date\":\"2024-05-30 05:01:22\",\"count\":27},\n    {\"date\":\"2024-05-30 05:06:23\",\"count\":28},\n    {\"date\":\"2024-05-30 05:11:23\",\"count\":29},\n    {\"date\":\"2024-05-30 05:16:24\",\"count\":27},\n    {\"date\":\"2024-05-30 05:21:25\",\"count\":29},\n    {\"date\":\"2024-05-30 05:26:26\",\"count\":30},\n    {\"date\":\"2024-05-30 05:31:29\",\"count\":32},\n    {\"date\":\"2024-05-30 05:36:29\",\"count\":36},\n    {\"date\":\"2024-05-30 05:41:30\",\"count\":38},\n    {\"date\":\"2024-05-30 05:46:31\",\"count\":40},\n    {\"date\":\"2024-05-30 05:51:32\",\"count\":44},\n    {\"date\":\"2024-05-30 05:56:33\",\"count\":45},\n    {\"date\":\"2024-05-30 06:01:36\",\"count\":48},\n    {\"date\":\"2024-05-30 06:06:36\",\"count\":45},\n    {\"date\":\"2024-05-30 06:11:37\",\"count\":45},\n    {\"date\":\"2024-05-30 06:16:38\",\"count\":46},\n    {\"date\":\"2024-05-30 06:21:39\",\"count\":45},\n    {\"date\":\"2024-05-30 06:26:40\",\"count\":48},\n    {\"date\":\"2024-05-30 06:31:43\",\"count\":50},\n    {\"date\":\"2024-05-30 06:36:43\",\"count\":50},\n    {\"date\":\"2024-05-30 06:41:44\",\"count\":51},\n    {\"date\":\"2024-05-30 06:46:45\",\"count\":54},\n    {\"date\":\"2024-05-30 06:51:46\",\"count\":53},\n    {\"date\":\"2024-05-30 06:56:46\",\"count\":55},\n    {\"date\":\"2024-05-30 07:01:49\",\"count\":54},\n    {\"date\":\"2024-05-30 07:06:50\",\"count\":59},\n    {\"date\":\"2024-05-30 07:11:51\",\"count\":58},\n    {\"date\":\"2024-05-30 07:16:52\",\"count\":57},\n    {\"date\":\"2024-05-30 07:21:52\",\"count\":58},\n    {\"date\":\"2024-05-30 07:26:54\",\"count\":63},\n    {\"date\":\"2024-05-30 07:31:58\",\"count\":65},\n    {\"date\":\"2024-05-30 07:36:59\",\"count\":67},\n    {\"date\":\"2024-05-30 07:41:59\",\"count\":68},\n    {\"date\":\"2024-05-30 07:47:01\",\"count\":64},\n    {\"date\":\"2024-05-30 07:52:02\",\"count\":65},\n    {\"date\":\"2024-05-30 07:57:03\",\"count\":64},\n    {\"date\":\"2024-05-30 08:02:07\",\"count\":70},\n    {\"date\":\"2024-05-30 08:07:08\",\"count\":74},\n    {\"date\":\"2024-05-30 08:12:09\",\"count\":78},\n    {\"date\":\"2024-05-30 08:17:11\",\"count\":83},\n    {\"date\":\"2024-05-30 08:22:12\",\"count\":86},\n    {\"date\":\"2024-05-30 08:27:13\",\"count\":94},\n    {\"date\":\"2024-05-30 08:32:17\",\"count\":100},\n    {\"date\":\"2024-05-30 08:37:18\",\"count\":109},\n    {\"date\":\"2024-05-30 08:42:20\",\"count\":107},\n    {\"date\":\"2024-05-30 08:47:21\",\"count\":114},\n    {\"date\":\"2024-05-30 08:52:22\",\"count\":108},\n    {\"date\":\"2024-05-30 08:57:23\",\"count\":109},\n    {\"date\":\"2024-05-30 09:02:27\",\"count\":114},\n    {\"date\":\"2024-05-30 09:07:28\",\"count\":119},\n    {\"date\":\"2024-05-30 09:12:29\",\"count\":110},\n    {\"date\":\"2024-05-30 09:17:30\",\"count\":111},\n    {\"date\":\"2024-05-30 09:22:32\",\"count\":110},\n    {\"date\":\"2024-05-30 09:27:33\",\"count\":112},\n    {\"date\":\"2024-05-30 09:32:36\",\"count\":116},\n    {\"date\":\"2024-05-30 09:37:37\",\"count\":118},\n    {\"date\":\"2024-05-30 09:42:38\",\"count\":116},\n    {\"date\":\"2024-05-30 09:47:39\",\"count\":116},\n    {\"date\":\"2024-05-30 09:52:40\",\"count\":118},\n    {\"date\":\"2024-05-30 09:57:42\",\"count\":113},\n    {\"date\":\"2024-05-30 10:02:45\",\"count\":111},\n    {\"date\":\"2024-05-30 10:07:46\",\"count\":107},\n    {\"date\":\"2024-05-30 10:12:47\",\"count\":106},\n    {\"date\":\"2024-05-30 10:17:49\",\"count\":102},\n    {\"date\":\"2024-05-30 10:22:50\",\"count\":102},\n    {\"date\":\"2024-05-30 10:27:51\",\"count\":102},\n    {\"date\":\"2024-05-30 10:32:55\",\"count\":103},\n    {\"date\":\"2024-05-30 10:37:56\",\"count\":103},\n    {\"date\":\"2024-05-30 10:42:57\",\"count\":108},\n    {\"date\":\"2024-05-30 10:47:58\",\"count\":110},\n    {\"date\":\"2024-05-30 10:52:59\",\"count\":115},\n    {\"date\":\"2024-05-30 10:58:00\",\"count\":114},\n    {\"date\":\"2024-05-30 11:03:04\",\"count\":116},\n    {\"date\":\"2024-05-30 11:08:05\",\"count\":114},\n    {\"date\":\"2024-05-30 11:13:06\",\"count\":111},\n    {\"date\":\"2024-05-30 11:18:07\",\"count\":113},\n    {\"date\":\"2024-05-30 11:23:08\",\"count\":112},\n    {\"date\":\"2024-05-30 11:28:09\",\"count\":111},\n    {\"date\":\"2024-05-30 11:33:13\",\"count\":108},\n    {\"date\":\"2024-05-30 11:38:15\",\"count\":104},\n    {\"date\":\"2024-05-30 11:43:16\",\"count\":98},\n    {\"date\":\"2024-05-30 11:48:17\",\"count\":96},\n    {\"date\":\"2024-05-30 11:53:18\",\"count\":91},\n    {\"date\":\"2024-05-30 11:58:19\",\"count\":91},\n    {\"date\":\"2024-05-30 12:03:22\",\"count\":83},\n    {\"date\":\"2024-05-30 12:08:23\",\"count\":82},\n    {\"date\":\"2024-05-30 12:13:24\",\"count\":80},\n    {\"date\":\"2024-05-30 12:18:25\",\"count\":79},\n    {\"date\":\"2024-05-30 12:23:26\",\"count\":80},\n    {\"date\":\"2024-05-30 12:28:27\",\"count\":80},\n    {\"date\":\"2024-05-30 12:33:31\",\"count\":75},\n    {\"date\":\"2024-05-30 12:38:32\",\"count\":80},\n    {\"date\":\"2024-05-30 12:43:33\",\"count\":82},\n    {\"date\":\"2024-05-30 12:48:34\",\"count\":81},\n    {\"date\":\"2024-05-30 12:53:35\",\"count\":76},\n    {\"date\":\"2024-05-30 12:58:36\",\"count\":81},\n    {\"date\":\"2024-05-30 13:03:40\",\"count\":76},\n    {\"date\":\"2024-05-30 13:08:41\",\"count\":77},\n    {\"date\":\"2024-05-30 13:13:42\",\"count\":81},\n    {\"date\":\"2024-05-30 13:18:44\",\"count\":93},\n    {\"date\":\"2024-05-30 13:23:45\",\"count\":102},\n    {\"date\":\"2024-05-30 13:28:46\",\"count\":112},\n    {\"date\":\"2024-05-30 13:33:49\",\"count\":120},\n    {\"date\":\"2024-05-30 13:38:50\",\"count\":127},\n    {\"date\":\"2024-05-30 13:43:51\",\"count\":126},\n    {\"date\":\"2024-05-30 13:48:52\",\"count\":120},\n    {\"date\":\"2024-05-30 13:53:53\",\"count\":119},\n    {\"date\":\"2024-05-30 13:58:54\",\"count\":120},\n    {\"date\":\"2024-05-30 14:03:58\",\"count\":122},\n    {\"date\":\"2024-05-30 14:08:59\",\"count\":122},\n    {\"date\":\"2024-05-30 14:14:00\",\"count\":122},\n    {\"date\":\"2024-05-30 14:19:01\",\"count\":122},\n    {\"date\":\"2024-05-30 14:24:02\",\"count\":128},\n    {\"date\":\"2024-05-30 14:29:03\",\"count\":134},\n    {\"date\":\"2024-05-30 14:34:07\",\"count\":141},\n    {\"date\":\"2024-05-30 14:39:08\",\"count\":127},\n    {\"date\":\"2024-05-30 14:44:09\",\"count\":130},\n    {\"date\":\"2024-05-30 14:49:10\",\"count\":129},\n    {\"date\":\"2024-05-30 14:54:11\",\"count\":126},\n    {\"date\":\"2024-05-30 14:59:13\",\"count\":123},\n    {\"date\":\"2024-05-30 15:04:16\",\"count\":114},\n    {\"date\":\"2024-05-30 15:09:17\",\"count\":117},\n    {\"date\":\"2024-05-30 15:14:18\",\"count\":115},\n    {\"date\":\"2024-05-30 15:19:19\",\"count\":121},\n    {\"date\":\"2024-05-30 15:24:20\",\"count\":121},\n    {\"date\":\"2024-05-30 15:29:21\",\"count\":122},\n    {\"date\":\"2024-05-30 15:34:24\",\"count\":125},\n    {\"date\":\"2024-05-30 15:39:25\",\"count\":119},\n    {\"date\":\"2024-05-30 15:44:26\",\"count\":109},\n    {\"date\":\"2024-05-30 15:49:27\",\"count\":111},\n    {\"date\":\"2024-05-30 15:54:28\",\"count\":113},\n    {\"date\":\"2024-05-30 15:59:29\",\"count\":116},\n    {\"date\":\"2024-05-30 16:04:32\",\"count\":115},\n    {\"date\":\"2024-05-30 16:09:33\",\"count\":118},\n    {\"date\":\"2024-05-30 16:14:34\",\"count\":117},\n    {\"date\":\"2024-05-30 16:19:35\",\"count\":124},\n    {\"date\":\"2024-05-30 16:24:36\",\"count\":123},\n    {\"date\":\"2024-05-30 16:29:37\",\"count\":124},\n    {\"date\":\"2024-05-30 16:34:41\",\"count\":123},\n    {\"date\":\"2024-05-30 16:39:42\",\"count\":121},\n    {\"date\":\"2024-05-30 16:44:43\",\"count\":125},\n    {\"date\":\"2024-05-30 16:49:44\",\"count\":122},\n    {\"date\":\"2024-05-30 16:54:45\",\"count\":129},\n    {\"date\":\"2024-05-30 16:59:46\",\"count\":132},\n    {\"date\":\"2024-05-30 17:04:49\",\"count\":131},\n    {\"date\":\"2024-05-30 17:09:50\",\"count\":126},\n    {\"date\":\"2024-05-30 17:14:51\",\"count\":127},\n    {\"date\":\"2024-05-30 17:19:52\",\"count\":132},\n    {\"date\":\"2024-05-30 17:24:53\",\"count\":131},\n    {\"date\":\"2024-05-30 17:29:54\",\"count\":123},\n    {\"date\":\"2024-05-30 17:34:57\",\"count\":122},\n    {\"date\":\"2024-05-30 17:39:58\",\"count\":127},\n    {\"date\":\"2024-05-30 17:44:59\",\"count\":123},\n    {\"date\":\"2024-05-30 17:50:00\",\"count\":116},\n    {\"date\":\"2024-05-30 17:55:01\",\"count\":114},\n    {\"date\":\"2024-05-30 18:00:03\",\"count\":114},\n    {\"date\":\"2024-05-30 18:05:07\",\"count\":112},\n    {\"date\":\"2024-05-30 18:10:08\",\"count\":113},\n    {\"date\":\"2024-05-30 18:15:08\",\"count\":114},\n    {\"date\":\"2024-05-30 18:20:09\",\"count\":106},\n    {\"date\":\"2024-05-30 18:25:10\",\"count\":102},\n    {\"date\":\"2024-05-30 18:30:11\",\"count\":98},\n    {\"date\":\"2024-05-30 18:35:15\",\"count\":97},\n    {\"date\":\"2024-05-30 18:40:16\",\"count\":98},\n    {\"date\":\"2024-05-30 18:45:17\",\"count\":100},\n    {\"date\":\"2024-05-30 18:50:18\",\"count\":102},\n    {\"date\":\"2024-05-30 18:55:19\",\"count\":100},\n    {\"date\":\"2024-05-30 19:00:20\",\"count\":98},\n    {\"date\":\"2024-05-30 19:05:24\",\"count\":93},\n    {\"date\":\"2024-05-30 19:10:25\",\"count\":97},\n    {\"date\":\"2024-05-30 19:15:26\",\"count\":95},\n    {\"date\":\"2024-05-30 19:20:27\",\"count\":102},\n    {\"date\":\"2024-05-30 19:25:28\",\"count\":106},\n    {\"date\":\"2024-05-30 19:30:29\",\"count\":105},\n    {\"date\":\"2024-05-30 19:35:32\",\"count\":104},\n    {\"date\":\"2024-05-30 19:40:33\",\"count\":101},\n    {\"date\":\"2024-05-30 19:45:34\",\"count\":95},\n    {\"date\":\"2024-05-30 19:50:35\",\"count\":102},\n    {\"date\":\"2024-05-30 19:55:36\",\"count\":106},\n    {\"date\":\"2024-05-30 20:00:37\",\"count\":109},\n    {\"date\":\"2024-05-30 20:05:40\",\"count\":109},\n    {\"date\":\"2024-05-30 20:10:41\",\"count\":103},\n    {\"date\":\"2024-05-30 20:15:42\",\"count\":99},\n    {\"date\":\"2024-05-30 20:20:43\",\"count\":93},\n    {\"date\":\"2024-05-30 20:25:43\",\"count\":91},\n    {\"date\":\"2024-05-30 20:30:44\",\"count\":91},\n    {\"date\":\"2024-05-30 20:35:48\",\"count\":89},\n    {\"date\":\"2024-05-30 20:40:49\",\"count\":85},\n    {\"date\":\"2024-05-30 20:45:50\",\"count\":76},\n    {\"date\":\"2024-05-30 20:50:51\",\"count\":74},\n    {\"date\":\"2024-05-30 20:55:51\",\"count\":67},\n    {\"date\":\"2024-05-30 21:00:53\",\"count\":63},\n    {\"date\":\"2024-05-30 21:05:56\",\"count\":63},\n    {\"date\":\"2024-05-30 21:10:57\",\"count\":60},\n    {\"date\":\"2024-05-30 21:15:57\",\"count\":59},\n    {\"date\":\"2024-05-30 21:20:58\",\"count\":55},\n    {\"date\":\"2024-05-30 21:25:59\",\"count\":51},\n    {\"date\":\"2024-05-30 21:31:00\",\"count\":46},\n    {\"date\":\"2024-05-30 21:36:04\",\"count\":43},\n    {\"date\":\"2024-05-30 21:41:04\",\"count\":39},\n    {\"date\":\"2024-05-30 21:46:05\",\"count\":38},\n    {\"date\":\"2024-05-30 21:51:06\",\"count\":39},\n    {\"date\":\"2024-05-30 21:56:07\",\"count\":37},\n    {\"date\":\"2024-05-30 22:01:07\",\"count\":37},\n    {\"date\":\"2024-05-30 22:06:11\",\"count\":36},\n    {\"date\":\"2024-05-30 22:11:11\",\"count\":31},\n    {\"date\":\"2024-05-30 22:16:12\",\"count\":31},\n    {\"date\":\"2024-05-30 22:21:13\",\"count\":27},\n    {\"date\":\"2024-05-30 22:26:13\",\"count\":27},\n    {\"date\":\"2024-05-30 22:31:14\",\"count\":26},\n    {\"date\":\"2024-05-30 22:36:17\",\"count\":24},\n    {\"date\":\"2024-05-30 22:41:18\",\"count\":24},\n    {\"date\":\"2024-05-30 22:46:18\",\"count\":22},\n    {\"date\":\"2024-05-30 22:51:19\",\"count\":22},\n    {\"date\":\"2024-05-30 22:56:20\",\"count\":18},\n    {\"date\":\"2024-05-30 23:01:21\",\"count\":17},\n    {\"date\":\"2024-05-30 23:06:24\",\"count\":17},\n    {\"date\":\"2024-05-30 23:11:24\",\"count\":17},\n    {\"date\":\"2024-05-30 23:16:25\",\"count\":17},\n    {\"date\":\"2024-05-30 23:21:26\",\"count\":17},\n    {\"date\":\"2024-05-30 23:26:27\",\"count\":16},\n    {\"date\":\"2024-05-30 23:31:27\",\"count\":16},\n    {\"date\":\"2024-05-30 23:36:30\",\"count\":16},\n    {\"date\":\"2024-05-30 23:41:31\",\"count\":16},\n    {\"date\":\"2024-05-30 23:46:32\",\"count\":16},\n    {\"date\":\"2024-05-30 23:51:33\",\"count\":16},\n    {\"date\":\"2024-05-30 23:56:33\",\"count\":14},\n    {\"date\":\"2024-05-31 00:01:35\",\"count\":7},\n    {\"date\":\"2024-05-31 00:06:37\",\"count\":7},\n    {\"date\":\"2024-05-31 00:11:38\",\"count\":6},\n    {\"date\":\"2024-05-31 00:16:39\",\"count\":5},\n    {\"date\":\"2024-05-31 00:21:40\",\"count\":5},\n    {\"date\":\"2024-05-31 00:26:40\",\"count\":5},\n    {\"date\":\"2024-05-31 00:31:41\",\"count\":5},\n    {\"date\":\"2024-05-31 00:36:44\",\"count\":5},\n    {\"date\":\"2024-05-31 00:41:45\",\"count\":4},\n    {\"date\":\"2024-05-31 00:46:46\",\"count\":4},\n    {\"date\":\"2024-05-31 00:51:47\",\"count\":4},\n    {\"date\":\"2024-05-31 00:56:47\",\"count\":4},\n    {\"date\":\"2024-05-31 01:01:48\",\"count\":4},\n    {\"date\":\"2024-05-31 01:06:51\",\"count\":4},\n    {\"date\":\"2024-05-31 01:11:52\",\"count\":4},\n    {\"date\":\"2024-05-31 01:16:52\",\"count\":4},\n    {\"date\":\"2024-05-31 01:21:53\",\"count\":4},\n    {\"date\":\"2024-05-31 01:26:54\",\"count\":4},\n    {\"date\":\"2024-05-31 01:31:55\",\"count\":4},\n    {\"date\":\"2024-05-31 01:36:58\",\"count\":4},\n    {\"date\":\"2024-05-31 01:41:58\",\"count\":4},\n    {\"date\":\"2024-05-31 01:46:59\",\"count\":4},\n    {\"date\":\"2024-05-31 01:52:00\",\"count\":3},\n    {\"date\":\"2024-05-31 01:57:01\",\"count\":3},\n    {\"date\":\"2024-05-31 02:02:02\",\"count\":3},\n    {\"date\":\"2024-05-31 02:07:05\",\"count\":4},\n    {\"date\":\"2024-05-31 02:12:05\",\"count\":5},\n    {\"date\":\"2024-05-31 02:17:06\",\"count\":5},\n    {\"date\":\"2024-05-31 02:22:07\",\"count\":5},\n    {\"date\":\"2024-05-31 02:27:08\",\"count\":6},\n    {\"date\":\"2024-05-31 02:32:08\",\"count\":8},\n    {\"date\":\"2024-05-31 02:37:11\",\"count\":9},\n    {\"date\":\"2024-05-31 02:42:12\",\"count\":10},\n    {\"date\":\"2024-05-31 02:47:13\",\"count\":10},\n    {\"date\":\"2024-05-31 02:52:14\",\"count\":10},\n    {\"date\":\"2024-05-31 02:57:14\",\"count\":10},\n    {\"date\":\"2024-05-31 03:02:15\",\"count\":10},\n    {\"date\":\"2024-05-31 03:07:18\",\"count\":10},\n    {\"date\":\"2024-05-31 03:12:19\",\"count\":11},\n    {\"date\":\"2024-05-31 03:17:20\",\"count\":11},\n    {\"date\":\"2024-05-31 03:22:20\",\"count\":12},\n    {\"date\":\"2024-05-31 03:27:21\",\"count\":12},\n    {\"date\":\"2024-05-31 03:32:22\",\"count\":15},\n    {\"date\":\"2024-05-31 03:37:25\",\"count\":16},\n    {\"date\":\"2024-05-31 03:42:26\",\"count\":15},\n    {\"date\":\"2024-05-31 03:47:26\",\"count\":16},\n    {\"date\":\"2024-05-31 03:52:27\",\"count\":16},\n    {\"date\":\"2024-05-31 03:57:28\",\"count\":17},\n    {\"date\":\"2024-05-31 04:02:29\",\"count\":18},\n    {\"date\":\"2024-05-31 04:07:32\",\"count\":20},\n    {\"date\":\"2024-05-31 04:12:32\",\"count\":21},\n    {\"date\":\"2024-05-31 04:17:33\",\"count\":20},\n    {\"date\":\"2024-05-31 04:22:34\",\"count\":21},\n    {\"date\":\"2024-05-31 04:27:35\",\"count\":22},\n    {\"date\":\"2024-05-31 04:32:35\",\"count\":22},\n    {\"date\":\"2024-05-31 04:37:38\",\"count\":21},\n    {\"date\":\"2024-05-31 04:42:39\",\"count\":23},\n    {\"date\":\"2024-05-31 04:47:40\",\"count\":24},\n    {\"date\":\"2024-05-31 04:52:40\",\"count\":26},\n    {\"date\":\"2024-05-31 04:57:41\",\"count\":25},\n    {\"date\":\"2024-05-31 05:02:42\",\"count\":26},\n    {\"date\":\"2024-05-31 05:07:48\",\"count\":29},\n    {\"date\":\"2024-05-31 05:12:49\",\"count\":30},\n    {\"date\":\"2024-05-31 05:17:49\",\"count\":32},\n    {\"date\":\"2024-05-31 05:22:50\",\"count\":36},\n    {\"date\":\"2024-05-31 05:27:51\",\"count\":41},\n    {\"date\":\"2024-05-31 05:32:52\",\"count\":41},\n    {\"date\":\"2024-05-31 05:37:55\",\"count\":40},\n    {\"date\":\"2024-05-31 05:42:56\",\"count\":39},\n    {\"date\":\"2024-05-31 05:47:56\",\"count\":43},\n    {\"date\":\"2024-05-31 05:52:57\",\"count\":46},\n    {\"date\":\"2024-05-31 05:57:58\",\"count\":47},\n    {\"date\":\"2024-05-31 06:02:59\",\"count\":48},\n    {\"date\":\"2024-05-31 06:08:02\",\"count\":47},\n    {\"date\":\"2024-05-31 06:13:02\",\"count\":46},\n    {\"date\":\"2024-05-31 06:18:03\",\"count\":47},\n    {\"date\":\"2024-05-31 06:23:04\",\"count\":48},\n    {\"date\":\"2024-05-31 06:28:05\",\"count\":52},\n    {\"date\":\"2024-05-31 06:33:06\",\"count\":52},\n    {\"date\":\"2024-05-31 06:38:09\",\"count\":51},\n    {\"date\":\"2024-05-31 06:43:10\",\"count\":52},\n    {\"date\":\"2024-05-31 06:48:10\",\"count\":52},\n    {\"date\":\"2024-05-31 06:53:11\",\"count\":47},\n    {\"date\":\"2024-05-31 06:58:12\",\"count\":44},\n    {\"date\":\"2024-05-31 07:03:13\",\"count\":44},\n    {\"date\":\"2024-05-31 07:08:16\",\"count\":45},\n    {\"date\":\"2024-05-31 07:13:17\",\"count\":45},\n    {\"date\":\"2024-05-31 07:18:18\",\"count\":48},\n    {\"date\":\"2024-05-31 07:23:19\",\"count\":50},\n    {\"date\":\"2024-05-31 07:28:19\",\"count\":52}\n]\n\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","$","expr","con","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","round","deepClone","cloned","value","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","RGB_RE","test","createSVG","tag","createElementNS","val","parentNode","keys","map","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","shortenNumbers","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","container","innerHTML","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","error","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","DEFAULT_AXIS_CHART_TYPE","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","DOT_OVERLAY_SIZE_INCR","PERCENTAGE_BAR_DEFAULT_HEIGHT","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","HEATMAP_GUTTER_SIZE","TOOLTIP_POINTER_TRIANGLE_HEIGHT","DEFAULT_CHART_COLORS","HEATMAP_COLORS_GREEN","DEFAULT_COLORS","FULL_ANGLE","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","exec","c","ch","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","NO_OF_YEAR_MONTHS","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","COL_WIDTH","ROW_HEIGHT","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","moreText","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","Chart"],"version":3,"file":"index.3d214d75.js.map","sourceRoot":"/__parcel_source_root/"}